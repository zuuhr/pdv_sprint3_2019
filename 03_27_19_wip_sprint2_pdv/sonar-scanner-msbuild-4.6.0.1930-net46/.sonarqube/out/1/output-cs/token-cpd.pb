þ
ÐD:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Attributes\PostProcessingModelEditorAttribute.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
public 

class .
"PostProcessingModelEditorAttribute 3
:4 5
	Attribute6 ?
{ 
public 
readonly 
Type 
type !
;! "
public 
readonly 
bool 
alwaysEnabled *
;* +
public

 .
"PostProcessingModelEditorAttribute

 1
(

1 2
Type

2 6
type

7 ;
,

; <
bool

= A
alwaysEnabled

B O
=

P Q
false

R W
)

W X
{ 	
this 
. 
type 
= 
type 
; 
this 
. 
alwaysEnabled 
=  
alwaysEnabled! .
;. /
} 	
} 
} ¡%
ÅD:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Models\AmbientOcclusionModelEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[ %
PostProcessingModelEditor 
( 
typeof %
(% &!
AmbientOcclusionModel& ;
); <
)< =
]= >
public 

class '
AmbientOcclusionModelEditor ,
:- .%
PostProcessingModelEditor/ H
{		 
SerializedProperty

 
m_Intensity

 &
;

& '
SerializedProperty 
m_Radius #
;# $
SerializedProperty 
m_SampleCount (
;( )
SerializedProperty 
m_Downsampling )
;) *
SerializedProperty '
m_ForceForwardCompatibility 6
;6 7
SerializedProperty 
m_AmbientOnly (
;( )
SerializedProperty 
m_HighPrecision *
;* +
public 
override 
void 
OnEnable %
(% &
)& '
{ 	
m_Intensity 
= 
FindSetting %
(% &
(& '
Settings' /
x0 1
)1 2
=>3 5
x6 7
.7 8
	intensity8 A
)A B
;B C
m_Radius 
= 
FindSetting "
(" #
(# $
Settings$ ,
x- .
). /
=>0 2
x3 4
.4 5
radius5 ;
); <
;< =
m_SampleCount 
= 
FindSetting '
(' (
(( )
Settings) 1
x2 3
)3 4
=>5 7
x8 9
.9 :
sampleCount: E
)E F
;F G
m_Downsampling 
= 
FindSetting (
(( )
() *
Settings* 2
x3 4
)4 5
=>6 8
x9 :
.: ;
downsampling; G
)G H
;H I'
m_ForceForwardCompatibility '
=( )
FindSetting* 5
(5 6
(6 7
Settings7 ?
x@ A
)A B
=>C E
xF G
.G H%
forceForwardCompatibilityH a
)a b
;b c
m_AmbientOnly 
= 
FindSetting '
(' (
(( )
Settings) 1
x2 3
)3 4
=>5 7
x8 9
.9 :
ambientOnly: E
)E F
;F G
m_HighPrecision 
= 
FindSetting )
() *
(* +
Settings+ 3
x4 5
)5 6
=>7 9
x: ;
.; <
highPrecision< I
)I J
;J K
} 	
public 
override 
void 
OnInspectorGUI +
(+ ,
), -
{ 	
EditorGUILayout 
. 
PropertyField )
() *
m_Intensity* 5
)5 6
;6 7
EditorGUILayout   
.   
PropertyField   )
(  ) *
m_Radius  * 2
)  2 3
;  3 4
EditorGUILayout!! 
.!! 
PropertyField!! )
(!!) *
m_SampleCount!!* 7
)!!7 8
;!!8 9
EditorGUILayout"" 
."" 
PropertyField"" )
("") *
m_Downsampling""* 8
)""8 9
;""9 :
EditorGUILayout## 
.## 
PropertyField## )
(##) *'
m_ForceForwardCompatibility##* E
)##E F
;##F G
EditorGUILayout$$ 
.$$ 
PropertyField$$ )
($$) *
m_HighPrecision$$* 9
,$$9 :
EditorGUIHelper$$; J
.$$J K

GetContent$$K U
($$U V
$str$$V p
)$$p q
)$$q r
;$$r s
using&& 
(&& 
new&& 
	EditorGUI&&  
.&&  !
DisabledGroupScope&&! 3
(&&3 4'
m_ForceForwardCompatibility&&4 O
.&&O P
	boolValue&&P Y
)&&Y Z
)&&Z [
EditorGUILayout'' 
.''  
PropertyField''  -
(''- .
m_AmbientOnly''. ;
,''; <
EditorGUIHelper''= L
.''L M

GetContent''M W
(''W X
$str''X w
)''w x
)''x y
;''y z
}(( 	
})) 
}** ø3
ÁD:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Models\AntialiasingModelEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[		 %
PostProcessingModelEditor		 
(		 
typeof		 %
(		% &
AntialiasingModel		& 7
)		7 8
)		8 9
]		9 :
public

 

class

 #
AntialiasingModelEditor

 (
:

) *%
PostProcessingModelEditor

+ D
{ 
SerializedProperty 
m_Method #
;# $
SerializedProperty 
m_FxaaPreset '
;' (
SerializedProperty 
m_TaaJitterSpread ,
;, -
SerializedProperty 
m_TaaSharpen '
;' (
SerializedProperty #
m_TaaStationaryBlending 2
;2 3
SerializedProperty 
m_TaaMotionBlending .
;. /
static 
string 
[ 
] 
s_MethodNames %
=& '
{ 	
$str ,
,, -
$str $
} 	
;	 

public 
override 
void 
OnEnable %
(% &
)& '
{ 	
m_Method 
= 
FindSetting "
(" #
(# $
Settings$ ,
x- .
). /
=>0 2
x3 4
.4 5
method5 ;
); <
;< =
m_FxaaPreset 
= 
FindSetting &
(& '
(' (
Settings( 0
x1 2
)2 3
=>4 6
x7 8
.8 9
fxaaSettings9 E
.E F
presetF L
)L M
;M N
m_TaaJitterSpread!! 
=!! 
FindSetting!!  +
(!!+ ,
(!!, -
Settings!!- 5
x!!6 7
)!!7 8
=>!!9 ;
x!!< =
.!!= >
taaSettings!!> I
.!!I J
jitterSpread!!J V
)!!V W
;!!W X
m_TaaSharpen"" 
="" 
FindSetting"" &
(""& '
(""' (
Settings""( 0
x""1 2
)""2 3
=>""4 6
x""7 8
.""8 9
taaSettings""9 D
.""D E
sharpen""E L
)""L M
;""M N#
m_TaaStationaryBlending## #
=##$ %
FindSetting##& 1
(##1 2
(##2 3
Settings##3 ;
x##< =
)##= >
=>##? A
x##B C
.##C D
taaSettings##D O
.##O P
stationaryBlending##P b
)##b c
;##c d
m_TaaMotionBlending$$ 
=$$  !
FindSetting$$" -
($$- .
($$. /
Settings$$/ 7
x$$8 9
)$$9 :
=>$$; =
x$$> ?
.$$? @
taaSettings$$@ K
.$$K L
motionBlending$$L Z
)$$Z [
;$$[ \
}%% 	
public'' 
override'' 
void'' 
OnInspectorGUI'' +
(''+ ,
)'', -
{(( 	
m_Method)) 
.)) 
intValue)) 
=)) 
EditorGUILayout))  /
.))/ 0
Popup))0 5
())5 6
$str))6 >
,))> ?
m_Method))@ H
.))H I
intValue))I Q
,))Q R
s_MethodNames))S `
)))` a
;))a b
if++ 
(++ 
m_Method++ 
.++ 
intValue++ !
==++" $
(++% &
int++& )
)++) *
Method++* 0
.++0 1
Fxaa++1 5
)++5 6
{,, 
EditorGUILayout-- 
.--  
PropertyField--  -
(--- .
m_FxaaPreset--. :
)--: ;
;--; <
}.. 
else// 
if// 
(// 
m_Method// 
.// 
intValue// &
==//' )
(//* +
int//+ .
)//. /
Method/// 5
.//5 6
Taa//6 9
)//9 :
{00 
if11 
(11 
QualitySettings11 #
.11# $
antiAliasing11$ 0
>111 2
$num113 4
)114 5
EditorGUILayout22 #
.22# $
HelpBox22$ +
(22+ ,
$str22, q
,22q r
MessageType22s ~
.22~ 
Warning	22 
)
22 
;
22 
EditorGUILayout44 
.44  

LabelField44  *
(44* +
$str44+ 3
,443 4
EditorStyles445 A
.44A B
	boldLabel44B K
)44K L
;44L M
	EditorGUI55 
.55 
indentLevel55 %
++55% '
;55' (
EditorGUILayout66 
.66  
PropertyField66  -
(66- .
m_TaaJitterSpread66. ?
,66? @
EditorGUIHelper66A P
.66P Q

GetContent66Q [
(66[ \
$str66\ d
)66d e
)66e f
;66f g
	EditorGUI77 
.77 
indentLevel77 %
--77% '
;77' (
EditorGUILayout99 
.99  
Space99  %
(99% &
)99& '
;99' (
EditorGUILayout;; 
.;;  

LabelField;;  *
(;;* +
$str;;+ 5
,;;5 6
EditorStyles;;7 C
.;;C D
	boldLabel;;D M
);;M N
;;;N O
	EditorGUI<< 
.<< 
indentLevel<< %
++<<% '
;<<' (
EditorGUILayout== 
.==  
PropertyField==  -
(==- .#
m_TaaStationaryBlending==. E
,==E F
EditorGUIHelper==G V
.==V W

GetContent==W a
(==a b
$str==b n
)==n o
)==o p
;==p q
EditorGUILayout>> 
.>>  
PropertyField>>  -
(>>- .
m_TaaMotionBlending>>. A
,>>A B
EditorGUIHelper>>C R
.>>R S

GetContent>>S ]
(>>] ^
$str>>^ f
)>>f g
)>>g h
;>>h i
	EditorGUI?? 
.?? 
indentLevel?? %
--??% '
;??' (
EditorGUILayoutAA 
.AA  
SpaceAA  %
(AA% &
)AA& '
;AA' (
EditorGUILayoutCC 
.CC  
PropertyFieldCC  -
(CC- .
m_TaaSharpenCC. :
)CC: ;
;CC; <
}DD 
}EE 	
}FF 
}GG 
ºD:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Models\BloomModelEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[ %
PostProcessingModelEditor 
( 
typeof %
(% &

BloomModel& 0
)0 1
)1 2
]2 3
public		 

class		 
BloomModelEditor		 !
:		" #%
PostProcessingModelEditor		$ =
{

 
struct 
BloomSettings 
{ 	
public 
SerializedProperty %
	intensity& /
;/ 0
public 
SerializedProperty %
	threshold& /
;/ 0
public 
SerializedProperty %
softKnee& .
;. /
public 
SerializedProperty %
radius& ,
;, -
public 
SerializedProperty %
antiFlicker& 1
;1 2
} 	
struct 
LensDirtSettings 
{ 	
public 
SerializedProperty %
texture& -
;- .
public 
SerializedProperty %
	intensity& /
;/ 0
} 	
BloomSettings 
m_Bloom 
; 
LensDirtSettings 

m_LensDirt #
;# $
public 
override 
void 
OnEnable %
(% &
)& '
{ 	
m_Bloom 
= 
new 
BloomSettings '
{   
	intensity!! 
=!! 
FindSetting!! '
(!!' (
(!!( )
Settings!!) 1
x!!2 3
)!!3 4
=>!!5 7
x!!8 9
.!!9 :
bloom!!: ?
.!!? @
	intensity!!@ I
)!!I J
,!!J K
	threshold"" 
="" 
FindSetting"" '
(""' (
(""( )
Settings"") 1
x""2 3
)""3 4
=>""5 7
x""8 9
.""9 :
bloom"": ?
.""? @
	threshold""@ I
)""I J
,""J K
softKnee## 
=## 
FindSetting## &
(##& '
(##' (
Settings##( 0
x##1 2
)##2 3
=>##4 6
x##7 8
.##8 9
bloom##9 >
.##> ?
softKnee##? G
)##G H
,##H I
radius$$ 
=$$ 
FindSetting$$ $
($$$ %
($$% &
Settings$$& .
x$$/ 0
)$$0 1
=>$$2 4
x$$5 6
.$$6 7
bloom$$7 <
.$$< =
radius$$= C
)$$C D
,$$D E
antiFlicker%% 
=%% 
FindSetting%% )
(%%) *
(%%* +
Settings%%+ 3
x%%4 5
)%%5 6
=>%%7 9
x%%: ;
.%%; <
bloom%%< A
.%%A B
antiFlicker%%B M
)%%M N
}&& 
;&& 

m_LensDirt(( 
=(( 
new(( 
LensDirtSettings(( -
{)) 
texture** 
=** 
FindSetting** %
(**% &
(**& '
Settings**' /
x**0 1
)**1 2
=>**3 5
x**6 7
.**7 8
lensDirt**8 @
.**@ A
texture**A H
)**H I
,**I J
	intensity++ 
=++ 
FindSetting++ '
(++' (
(++( )
Settings++) 1
x++2 3
)++3 4
=>++5 7
x++8 9
.++9 :
lensDirt++: B
.++B C
	intensity++C L
)++L M
},, 
;,, 
}-- 	
public// 
override// 
void// 
OnInspectorGUI// +
(//+ ,
)//, -
{00 	
EditorGUILayout11 
.11 
Space11 !
(11! "
)11" #
;11# $
PrepareGraph22 
(22 
)22 
;22 
	DrawGraph33 
(33 
)33 
;33 
EditorGUILayout44 
.44 
Space44 !
(44! "
)44" #
;44# $
EditorGUILayout66 
.66 
PropertyField66 )
(66) *
m_Bloom66* 1
.661 2
	intensity662 ;
)66; <
;66< =
EditorGUILayout77 
.77 
PropertyField77 )
(77) *
m_Bloom77* 1
.771 2
	threshold772 ;
,77; <
EditorGUIHelper77= L
.77L M

GetContent77M W
(77W X
$str77X k
)77k l
)77l m
;77m n
EditorGUILayout88 
.88 
PropertyField88 )
(88) *
m_Bloom88* 1
.881 2
softKnee882 :
)88: ;
;88; <
EditorGUILayout99 
.99 
PropertyField99 )
(99) *
m_Bloom99* 1
.991 2
radius992 8
)998 9
;999 :
EditorGUILayout:: 
.:: 
PropertyField:: )
(::) *
m_Bloom::* 1
.::1 2
antiFlicker::2 =
)::= >
;::> ?
EditorGUILayout<< 
.<< 
Space<< !
(<<! "
)<<" #
;<<# $
EditorGUILayout== 
.== 

LabelField== &
(==& '
$str==' -
,==- .
EditorStyles==/ ;
.==; <
	boldLabel==< E
)==E F
;==F G
	EditorGUI>> 
.>> 
indentLevel>> !
++>>! #
;>># $
EditorGUILayout?? 
.?? 
PropertyField?? )
(??) *

m_LensDirt??* 4
.??4 5
texture??5 <
)??< =
;??= >
EditorGUILayout@@ 
.@@ 
PropertyField@@ )
(@@) *

m_LensDirt@@* 4
.@@4 5
	intensity@@5 >
)@@> ?
;@@? @
	EditorGUIAA 
.AA 
indentLevelAA !
--AA! #
;AA# $
}BB 	
floatFF 
m_GraphThresholdFF 
;FF 
floatGG 
m_GraphKneeGG 
;GG 
floatHH 
m_GraphIntensityHH 
;HH 
constKK 
intKK 
k_CurveResolutionKK #
=KK$ %
$numKK& (
;KK( )
Vector3NN 
[NN 
]NN 
m_RectVerticesNN  
=NN! "
newNN# &
Vector3NN' .
[NN. /
$numNN/ 0
]NN0 1
;NN1 2
Vector3OO 
[OO 
]OO 
m_LineVerticesOO  
=OO! "
newOO# &
Vector3OO' .
[OO. /
$numOO/ 0
]OO0 1
;OO1 2
Vector3PP 
[PP 
]PP 
m_CurveVerticesPP !
=PP" #
newPP$ '
Vector3PP( /
[PP/ 0
k_CurveResolutionPP0 A
]PPA B
;PPB C
RectRR 
m_RectGraphRR 
;RR 
floatSS 
m_RangeXSS 
;SS 
floatTT 
m_RangeYTT 
;TT 
floatVV 
ResponseFunctionVV 
(VV 
floatVV $
xVV% &
)VV& '
{WW 	
varXX 
rqXX 
=XX 
MathfXX 
.XX 
ClampXX  
(XX  !
xXX! "
-XX# $
m_GraphThresholdXX% 5
+XX6 7
m_GraphKneeXX8 C
,XXC D
$numXXE F
,XXF G
m_GraphKneeXXH S
*XXT U
$numXXV W
)XXW X
;XXX Y
rqYY 
=YY 
rqYY 
*YY 
rqYY 
*YY 
$numYY  
/YY! "
m_GraphKneeYY# .
;YY. /
returnZZ 
MathfZZ 
.ZZ 
MaxZZ 
(ZZ 
rqZZ 
,ZZ  
xZZ! "
-ZZ# $
m_GraphThresholdZZ% 5
)ZZ5 6
*ZZ7 8
m_GraphIntensityZZ9 I
;ZZI J
}[[ 	
Vector3^^ 
PointInRect^^ 
(^^ 
float^^ !
x^^" #
,^^# $
float^^% *
y^^+ ,
)^^, -
{__ 	
x`` 
=`` 
Mathf`` 
.`` 
Lerp`` 
(`` 
m_RectGraph`` &
.``& '
x``' (
,``( )
m_RectGraph``* 5
.``5 6
xMax``6 :
,``: ;
x``< =
/``> ?
m_RangeX``@ H
)``H I
;``I J
yaa 
=aa 
Mathfaa 
.aa 
Lerpaa 
(aa 
m_RectGraphaa &
.aa& '
yMaxaa' +
,aa+ ,
m_RectGraphaa- 8
.aa8 9
yaa9 :
,aa: ;
yaa< =
/aa> ?
m_RangeYaa@ H
)aaH I
;aaI J
returnbb 
newbb 
Vector3bb 
(bb 
xbb  
,bb  !
ybb" #
,bb# $
$numbb% &
)bb& '
;bb' (
}cc 	
voidff 
DrawLineff 
(ff 
floatff 
x1ff 
,ff 
floatff  %
y1ff& (
,ff( )
floatff* /
x2ff0 2
,ff2 3
floatff4 9
y2ff: <
,ff< =
floatff> C
	grayscaleffD M
)ffM N
{gg 	
m_LineVerticeshh 
[hh 
$numhh 
]hh 
=hh 
PointInRecthh  +
(hh+ ,
x1hh, .
,hh. /
y1hh0 2
)hh2 3
;hh3 4
m_LineVerticesii 
[ii 
$numii 
]ii 
=ii 
PointInRectii  +
(ii+ ,
x2ii, .
,ii. /
y2ii0 2
)ii2 3
;ii3 4
Handlesjj 
.jj 
colorjj 
=jj 
Colorjj !
.jj! "
whitejj" '
*jj( )
	grayscalejj* 3
;jj3 4
Handleskk 
.kk 
DrawAAPolyLinekk "
(kk" #
$numkk# '
,kk' (
m_LineVerticeskk) 7
)kk7 8
;kk8 9
}ll 	
voidoo 
DrawRectoo 
(oo 
floatoo 
x1oo 
,oo 
floatoo  %
y1oo& (
,oo( )
floatoo* /
x2oo0 2
,oo2 3
floatoo4 9
y2oo: <
,oo< =
floatoo> C
fillooD H
,ooH I
floatooJ O
lineooP T
)ooT U
{pp 	
m_RectVerticesqq 
[qq 
$numqq 
]qq 
=qq 
PointInRectqq  +
(qq+ ,
x1qq, .
,qq. /
y1qq0 2
)qq2 3
;qq3 4
m_RectVerticesrr 
[rr 
$numrr 
]rr 
=rr 
PointInRectrr  +
(rr+ ,
x2rr, .
,rr. /
y1rr0 2
)rr2 3
;rr3 4
m_RectVerticesss 
[ss 
$numss 
]ss 
=ss 
PointInRectss  +
(ss+ ,
x2ss, .
,ss. /
y2ss0 2
)ss2 3
;ss3 4
m_RectVerticestt 
[tt 
$numtt 
]tt 
=tt 
PointInRecttt  +
(tt+ ,
x1tt, .
,tt. /
y2tt0 2
)tt2 3
;tt3 4
Handlesvv 
.vv )
DrawSolidRectangleWithOutlinevv 1
(vv1 2
m_RectVerticesww 
,ww 
fillxx 
<xx 
$numxx 
?xx 
Colorxx  
.xx  !
clearxx! &
:xx' (
Colorxx) .
.xx. /
whitexx/ 4
*xx5 6
fillxx7 ;
,xx; <
lineyy 
<yy 
$numyy 
?yy 
Coloryy  
.yy  !
clearyy! &
:yy' (
Coloryy) .
.yy. /
whiteyy/ 4
*yy5 6
lineyy7 ;
)zz 
;zz 
}{{ 	
public~~ 
void~~ 
PrepareGraph~~  
(~~  !
)~~! "
{ 	
var
 
bloom
 
=
 
(
 

BloomModel
 #
)
# $
target
$ *
;
* +
m_RangeX
 
=
 
$num
 
;
 
m_RangeY
 
=
 
$num
 
;
 
m_GraphThreshold
 
=
 
bloom
 $
.
$ %
settings
% -
.
- .
bloom
. 3
.
3 4
thresholdLinear
4 C
;
C D
m_GraphKnee
 
=
 
bloom
 
.
  
settings
  (
.
( )
bloom
) .
.
. /
softKnee
/ 7
*
8 9
m_GraphThreshold
: J
+
K L
$num
M R
;
R S
m_GraphIntensity
 
=
 
Mathf
 $
.
$ %
Min
% (
(
( )
bloom
) .
.
. /
settings
/ 7
.
7 8
bloom
8 =
.
= >
	intensity
> G
,
G H
$num
I L
)
L M
;
M N
}
 	
public
 
void
 
	DrawGraph
 
(
 
)
 
{
 	
using
 
(
 
new
 
	GUILayout
  
.
  !
HorizontalScope
! 0
(
0 1
)
1 2
)
2 3
{
 
	GUILayout
 
.
 
Space
 
(
  
	EditorGUI
  )
.
) *
indentLevel
* 5
*
6 7
$num
8 ;
)
; <
;
< =
m_RectGraph
 
=
 
GUILayoutUtility
 .
.
. /
GetRect
/ 6
(
6 7
$num
7 :
,
: ;
$num
< >
)
> ?
;
? @
}
 
DrawRect
 
(
 
$num
 
,
 
$num
 
,
 
m_RangeX
 #
,
# $
m_RangeY
% -
,
- .
$num
/ 3
,
3 4
$num
5 9
)
9 :
;
: ;
DrawRect
 
(
 
m_GraphThreshold
 %
-
& '
m_GraphKnee
( 3
,
3 4
$num
5 6
,
6 7
m_GraphThreshold
8 H
+
I J
m_GraphKnee
K V
,
V W
m_RangeY
X `
,
` a
$num
b g
,
g h
-
i j
$num
j k
)
k l
;
l m
for
 
(
 
var
 
i
 
=
 
$num
 
;
 
i
 
<
 
m_RangeY
  (
;
( )
i
* +
++
+ -
)
- .
DrawLine
 
(
 
$num
 
,
 
i
 
,
 
m_RangeX
 '
,
' (
i
) *
,
* +
$num
, 0
)
0 1
;
1 2
for
 
(
 
var
 
i
 
=
 
$num
 
;
 
i
 
<
 
m_RangeX
  (
;
( )
i
* +
++
+ -
)
- .
DrawLine
   
(
   
i
   
,
   
$num
   
,
   
i
    
,
    !
m_RangeY
  " *
,
  * +
$num
  , 0
)
  0 1
;
  1 2
Handles
££ 
.
££ 
Label
££ 
(
££ 
PointInRect
¤¤ 
(
¤¤ 
$num
¤¤ 
,
¤¤ 
m_RangeY
¤¤ '
)
¤¤' (
+
¤¤) *
Vector3
¤¤+ 2
.
¤¤2 3
right
¤¤3 8
,
¤¤8 9
$str
¥¥ .
,
¥¥. /
EditorStyles
¥¥0 <
.
¥¥< =
	miniLabel
¥¥= F
)
¦¦ 
;
¦¦ 
DrawLine
©© 
(
©© 
m_GraphThreshold
©© %
,
©©% &
$num
©©' (
,
©©( )
m_GraphThreshold
©©* :
,
©©: ;
m_RangeY
©©< D
,
©©D E
$num
©©F J
)
©©J K
;
©©K L
var
¬¬ 
vcount
¬¬ 
=
¬¬ 
$num
¬¬ 
;
¬¬ 
while
­­ 
(
­­ 
vcount
­­ 
<
­­ 
k_CurveResolution
­­ -
)
­­- .
{
®® 
var
¯¯ 
x
¯¯ 
=
¯¯ 
m_RangeX
¯¯  
*
¯¯! "
vcount
¯¯# )
/
¯¯* +
(
¯¯, -
k_CurveResolution
¯¯- >
-
¯¯? @
$num
¯¯A B
)
¯¯B C
;
¯¯C D
var
°° 
y
°° 
=
°° 
ResponseFunction
°° (
(
°°( )
x
°°) *
)
°°* +
;
°°+ ,
if
±± 
(
±± 
y
±± 
<
±± 
m_RangeY
±±  
)
±±  !
{
²² 
m_CurveVertices
³³ #
[
³³# $
vcount
³³$ *
++
³³* ,
]
³³, -
=
³³. /
PointInRect
³³0 ;
(
³³; <
x
³³< =
,
³³= >
y
³³? @
)
³³@ A
;
³³A B
}
´´ 
else
µµ 
{
¶¶ 
if
·· 
(
·· 
vcount
·· 
>
··  
$num
··! "
)
··" #
{
¸¸ 
var
ºº 
v1
ºº 
=
ºº  
m_CurveVertices
ºº! 0
[
ºº0 1
vcount
ºº1 7
-
ºº8 9
$num
ºº: ;
]
ºº; <
;
ºº< =
var
»» 
v2
»» 
=
»»  
m_CurveVertices
»»! 0
[
»»0 1
vcount
»»1 7
-
»»8 9
$num
»»: ;
]
»»; <
;
»»< =
var
¼¼ 
clip
¼¼  
=
¼¼! "
(
¼¼# $
m_RectGraph
¼¼$ /
.
¼¼/ 0
y
¼¼0 1
-
¼¼2 3
v1
¼¼4 6
.
¼¼6 7
y
¼¼7 8
)
¼¼8 9
/
¼¼: ;
(
¼¼< =
v2
¼¼= ?
.
¼¼? @
y
¼¼@ A
-
¼¼B C
v1
¼¼D F
.
¼¼F G
y
¼¼G H
)
¼¼H I
;
¼¼I J
m_CurveVertices
½½ '
[
½½' (
vcount
½½( .
-
½½/ 0
$num
½½1 2
]
½½2 3
=
½½4 5
v1
½½6 8
+
½½9 :
(
½½; <
v2
½½< >
-
½½? @
v1
½½A C
)
½½C D
*
½½E F
clip
½½G K
;
½½K L
}
¾¾ 
break
¿¿ 
;
¿¿ 
}
ÀÀ 
}
ÁÁ 
if
ÃÃ 
(
ÃÃ 
vcount
ÃÃ 
>
ÃÃ 
$num
ÃÃ 
)
ÃÃ 
{
ÄÄ 
Handles
ÅÅ 
.
ÅÅ 
color
ÅÅ 
=
ÅÅ 
Color
ÅÅ  %
.
ÅÅ% &
white
ÅÅ& +
*
ÅÅ, -
$num
ÅÅ. 2
;
ÅÅ2 3
Handles
ÆÆ 
.
ÆÆ 
DrawAAPolyLine
ÆÆ &
(
ÆÆ& '
$num
ÆÆ' +
,
ÆÆ+ ,
vcount
ÆÆ- 3
,
ÆÆ3 4
m_CurveVertices
ÆÆ5 D
)
ÆÆD E
;
ÆÆE F
}
ÇÇ 
}
ÈÈ 	
}
ËË 
}ÌÌ Å_
ÁD:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Models\BuiltinDebugViewsEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[ %
PostProcessingModelEditor 
( 
typeof %
(% &"
BuiltinDebugViewsModel& <
)< =
,= >
alwaysEnabled? L
:L M
trueN R
)R S
]S T
public		 

class		 #
BuiltinDebugViewsEditor		 (
:		) *%
PostProcessingModelEditor		+ D
{

 
struct 
DepthSettings 
{ 	
public 
SerializedProperty %
scale& +
;+ ,
} 	
struct !
MotionVectorsSettings $
{ 	
public 
SerializedProperty %
sourceOpacity& 3
;3 4
public 
SerializedProperty %
motionImageOpacity& 8
;8 9
public 
SerializedProperty % 
motionImageAmplitude& :
;: ;
public 
SerializedProperty % 
motionVectorsOpacity& :
;: ;
public 
SerializedProperty %#
motionVectorsResolution& =
;= >
public 
SerializedProperty %"
motionVectorsAmplitude& <
;< =
} 	
SerializedProperty 
m_Mode !
;! "
DepthSettings 
m_Depth 
; !
MotionVectorsSettings 
m_MotionVectors -
;- .
public 
override 
void 
OnEnable %
(% &
)& '
{ 	
m_Mode   
=   
FindSetting    
(    !
(  ! "
Settings  " *
x  + ,
)  , -
=>  . 0
x  1 2
.  2 3
mode  3 7
)  7 8
;  8 9
m_Depth"" 
="" 
new"" 
DepthSettings"" '
{## 
scale$$ 
=$$ 
FindSetting$$ #
($$# $
($$$ %
Settings$$% -
x$$. /
)$$/ 0
=>$$1 3
x$$4 5
.$$5 6
depth$$6 ;
.$$; <
scale$$< A
)$$A B
}%% 
;%% 
m_MotionVectors'' 
='' 
new'' !!
MotionVectorsSettings''" 7
{(( 
sourceOpacity)) 
=)) 
FindSetting))  +
())+ ,
()), -
Settings))- 5
x))6 7
)))7 8
=>))9 ;
x))< =
.))= >
motionVectors))> K
.))K L
sourceOpacity))L Y
)))Y Z
,))Z [
motionImageOpacity** "
=**# $
FindSetting**% 0
(**0 1
(**1 2
Settings**2 :
x**; <
)**< =
=>**> @
x**A B
.**B C
motionVectors**C P
.**P Q
motionImageOpacity**Q c
)**c d
,**d e 
motionImageAmplitude++ $
=++% &
FindSetting++' 2
(++2 3
(++3 4
Settings++4 <
x++= >
)++> ?
=>++@ B
x++C D
.++D E
motionVectors++E R
.++R S 
motionImageAmplitude++S g
)++g h
,++h i 
motionVectorsOpacity,, $
=,,% &
FindSetting,,' 2
(,,2 3
(,,3 4
Settings,,4 <
x,,= >
),,> ?
=>,,@ B
x,,C D
.,,D E
motionVectors,,E R
.,,R S 
motionVectorsOpacity,,S g
),,g h
,,,h i#
motionVectorsResolution-- '
=--( )
FindSetting--* 5
(--5 6
(--6 7
Settings--7 ?
x--@ A
)--A B
=>--C E
x--F G
.--G H
motionVectors--H U
.--U V#
motionVectorsResolution--V m
)--m n
,--n o"
motionVectorsAmplitude.. &
=..' (
FindSetting..) 4
(..4 5
(..5 6
Settings..6 >
x..? @
)..@ A
=>..B D
x..E F
...F G
motionVectors..G T
...T U"
motionVectorsAmplitude..U k
)..k l
,..l m
}// 
;// 
}00 	
public22 
override22 
void22 
OnInspectorGUI22 +
(22+ ,
)22, -
{33 	
EditorGUILayout44 
.44 
PropertyField44 )
(44) *
m_Mode44* 0
)440 1
;441 2
int66 
mode66 
=66 
m_Mode66 
.66 
intValue66 &
;66& '
if88 
(88 
mode88 
==88 
(88 
int88 
)88 
Mode88 !
.88! "
Depth88" '
)88' (
{99 
EditorGUILayout:: 
.::  
PropertyField::  -
(::- .
m_Depth::. 5
.::5 6
scale::6 ;
)::; <
;::< =
};; 
else<< 
if<< 
(<< 
mode<< 
==<< 
(<< 
int<< !
)<<! "
Mode<<" &
.<<& '
MotionVectors<<' 4
)<<4 5
{== 
EditorGUILayout>> 
.>>  
HelpBox>>  '
(>>' (
$str>>( T
,>>T U
MessageType>>V a
.>>a b
Info>>b f
)>>f g
;>>g h
EditorGUILayout@@ 
.@@  

LabelField@@  *
(@@* +
$str@@+ 9
,@@9 :
EditorStyles@@; G
.@@G H
	boldLabel@@H Q
)@@Q R
;@@R S
	EditorGUIAA 
.AA 
indentLevelAA %
++AA% '
;AA' (
EditorGUILayoutBB 
.BB  
PropertyFieldBB  -
(BB- .
m_MotionVectorsBB. =
.BB= >
sourceOpacityBB> K
,BBK L
EditorGUIHelperBBM \
.BB\ ]

GetContentBB] g
(BBg h
$strBBh q
)BBq r
)BBr s
;BBs t
	EditorGUICC 
.CC 
indentLevelCC %
--CC% '
;CC' (
EditorGUILayoutEE 
.EE  
SpaceEE  %
(EE% &
)EE& '
;EE' (
EditorGUILayoutGG 
.GG  

LabelFieldGG  *
(GG* +
$strGG+ E
,GGE F
EditorStylesGGG S
.GGS T
	boldLabelGGT ]
)GG] ^
;GG^ _
	EditorGUIHH 
.HH 
indentLevelHH %
++HH% '
;HH' (
ifJJ 
(JJ 
m_MotionVectorsJJ #
.JJ# $
motionImageOpacityJJ$ 6
.JJ6 7

floatValueJJ7 A
>JJB C
$numJJD F
)JJF G
EditorGUILayoutKK #
.KK# $
HelpBoxKK$ +
(KK+ ,
$strKK, l
,KKl m
MessageTypeKKn y
.KKy z
Warning	KKz 
)
KK 
;
KK 
EditorGUILayoutMM 
.MM  
PropertyFieldMM  -
(MM- .
m_MotionVectorsMM. =
.MM= >
motionImageOpacityMM> P
,MMP Q
EditorGUIHelperMMR a
.MMa b

GetContentMMb l
(MMl m
$strMMm v
)MMv w
)MMw x
;MMx y
EditorGUILayoutNN 
.NN  
PropertyFieldNN  -
(NN- .
m_MotionVectorsNN. =
.NN= > 
motionImageAmplitudeNN> R
,NNR S
EditorGUIHelperNNT c
.NNc d

GetContentNNd n
(NNn o
$strNNo z
)NNz {
)NN{ |
;NN| }
	EditorGUIOO 
.OO 
indentLevelOO %
--OO% '
;OO' (
EditorGUILayoutQQ 
.QQ  
SpaceQQ  %
(QQ% &
)QQ& '
;QQ' (
EditorGUILayoutSS 
.SS  

LabelFieldSS  *
(SS* +
$strSS+ D
,SSD E
EditorStylesSSF R
.SSR S
	boldLabelSSS \
)SS\ ]
;SS] ^
	EditorGUITT 
.TT 
indentLevelTT %
++TT% '
;TT' (
EditorGUILayoutUU 
.UU  
PropertyFieldUU  -
(UU- .
m_MotionVectorsUU. =
.UU= > 
motionVectorsOpacityUU> R
,UUR S
EditorGUIHelperUUT c
.UUc d

GetContentUUd n
(UUn o
$strUUo x
)UUx y
)UUy z
;UUz {
EditorGUILayoutVV 
.VV  
PropertyFieldVV  -
(VV- .
m_MotionVectorsVV. =
.VV= >#
motionVectorsResolutionVV> U
,VVU V
EditorGUIHelperVVW f
.VVf g

GetContentVVg q
(VVq r
$strVVr ~
)VV~ 
)	VV 
;
VV 
EditorGUILayoutWW 
.WW  
PropertyFieldWW  -
(WW- .
m_MotionVectorsWW. =
.WW= >"
motionVectorsAmplitudeWW> T
,WWT U
EditorGUIHelperWWV e
.WWe f

GetContentWWf p
(WWp q
$strWWq |
)WW| }
)WW} ~
;WW~ 
	EditorGUIXX 
.XX 
indentLevelXX %
--XX% '
;XX' (
}YY 
elseZZ 
{[[ 
CheckActiveEffect\\ !
(\\! "
mode\\" &
==\\' )
(\\* +
int\\+ .
)\\. /
Mode\\/ 3
.\\3 4
AmbientOcclusion\\4 D
&&\\E G
!\\H I
profile\\I P
.\\P Q
ambientOcclusion\\Q a
.\\a b
enabled\\b i
,\\i j
$str\\k ~
)\\~ 
;	\\ 
CheckActiveEffect]] !
(]]! "
mode]]" &
==]]' )
(]]* +
int]]+ .
)]]. /
Mode]]/ 3
.]]3 4

FocusPlane]]4 >
&&]]? A
!]]B C
profile]]C J
.]]J K
depthOfField]]K W
.]]W X
enabled]]X _
,]]_ `
$str]]a q
)]]q r
;]]r s
CheckActiveEffect^^ !
(^^! "
mode^^" &
==^^' )
(^^* +
int^^+ .
)^^. /
Mode^^/ 3
.^^3 4
EyeAdaptation^^4 A
&&^^B D
!^^E F
profile^^F M
.^^M N
eyeAdaptation^^N [
.^^[ \
enabled^^\ c
,^^c d
$str^^e u
)^^u v
;^^v w
CheckActiveEffect__ !
(__! "
(__" #
mode__# '
==__( *
(__+ ,
int__, /
)__/ 0
Mode__0 4
.__4 5
LogLut__5 ;
||__< >
mode__? C
==__D F
(__G H
int__H K
)__K L
Mode__L P
.__P Q
PreGradingLog__Q ^
)__^ _
&&__` b
!__c d
profile__d k
.__k l
colorGrading__l x
.__x y
enabled	__y 
,
__ 
$str
__ 
)
__ 
;
__ 
CheckActiveEffect`` !
(``! "
mode``" &
==``' )
(``* +
int``+ .
)``. /
Mode``/ 3
.``3 4
UserLut``4 ;
&&``< >
!``? @
profile``@ G
.``G H
userLut``H O
.``O P
enabled``P W
,``W X
$str``Y c
)``c d
;``d e
}aa 
}bb 	
voiddd 
CheckActiveEffectdd 
(dd 
booldd #
exprdd$ (
,dd( )
stringdd* 0
namedd1 5
)dd5 6
{ee 	
ifff 
(ff 
exprff 
)ff 
EditorGUILayoutgg 
.gg  
HelpBoxgg  '
(gg' (
stringgg( .
.gg. /
Formatgg/ 5
(gg5 6
$strgg6 e
,gge f
nameggg k
)ggk l
,ggl m
MessageTypeggn y
.ggy z
Warning	ggz 
)
gg 
;
gg 
}hh 	
}ii 
}jj 
ÃD:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Models\ChromaticAberrationEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[ %
PostProcessingModelEditor 
( 
typeof %
(% &$
ChromaticAberrationModel& >
)> ?
)? @
]@ A
public 

class +
ChromaticaAberrationModelEditor 0
:1 2$
DefaultPostFxModelEditor3 K
{ 
} 
}		 î
ÁD:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Models\ColorGradingModelEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[ %
PostProcessingModelEditor 
( 
typeof %
(% &
ColorGradingModel& 7
)7 8
)8 9
]9 :
public 

class #
ColorGradingModelEditor (
:) *%
PostProcessingModelEditor+ D
{ 
static 

GUIContent 
[ 
] 
s_Tonemappers )
=* +
{ 	
new 

GUIContent 
( 
$str !
)! "
," #
new 

GUIContent 
( 
$str *
)* +
,+ ,
new 

GUIContent 
( 
$str $
)$ %
} 	
;	 

struct 
TonemappingSettings "
{ 	
public 
SerializedProperty %

tonemapper& 0
;0 1
public 
SerializedProperty %
neutralBlackIn& 4
;4 5
public 
SerializedProperty %
neutralWhiteIn& 4
;4 5
public 
SerializedProperty %
neutralBlackOut& 5
;5 6
public 
SerializedProperty %
neutralWhiteOut& 5
;5 6
public 
SerializedProperty %
neutralWhiteLevel& 7
;7 8
public 
SerializedProperty %
neutralWhiteClip& 6
;6 7
}   	
struct"" 
BasicSettings"" 
{## 	
public$$ 
SerializedProperty$$ %
exposure$$& .
;$$. /
public%% 
SerializedProperty%% %
temperature%%& 1
;%%1 2
public&& 
SerializedProperty&& %
tint&&& *
;&&* +
public'' 
SerializedProperty'' %
hueShift''& .
;''. /
public(( 
SerializedProperty(( %

saturation((& 0
;((0 1
public)) 
SerializedProperty)) %
contrast))& .
;)). /
}** 	
struct,,  
ChannelMixerSettings,, #
{-- 	
public.. 
SerializedProperty.. %
[..% &
]..& '
channels..( 0
;..0 1
public// 
SerializedProperty// %!
currentEditingChannel//& ;
;//; <
}00 	
struct22 
ColorWheelsSettings22 "
{33 	
public44	 
SerializedProperty44 "
mode44# '
;44' (
public55 
SerializedProperty55 %
log55& )
;55) *
public66 
SerializedProperty66 %
linear66& ,
;66, -
}77 	
static99 

GUIContent99 
[99 
]99 
s_Curves99 $
=99% &
{:: 	
new;; 

GUIContent;; 
(;; 
$str;; !
);;! "
,;;" #
new<< 

GUIContent<< 
(<< 
$str<< '
)<<' (
,<<( )
new== 

GUIContent== 
(== 
$str== '
)==' (
,==( )
new>> 

GUIContent>> 
(>> 
$str>> '
)>>' (
,>>( )
new?? 

GUIContent?? 
(?? 
$str?? '
)??' (
}@@ 	
;@@	 

structBB 
CurvesSettingsBB 
{CC 	
publicDD 
SerializedPropertyDD %
masterDD& ,
;DD, -
publicEE 
SerializedPropertyEE %
redEE& )
;EE) *
publicFF 
SerializedPropertyFF %
greenFF& +
;FF+ ,
publicGG 
SerializedPropertyGG %
blueGG& *
;GG* +
publicII 
SerializedPropertyII %
hueVShueII& .
;II. /
publicJJ 
SerializedPropertyJJ %
hueVSsatJJ& .
;JJ. /
publicKK 
SerializedPropertyKK %
satVSsatKK& .
;KK. /
publicLL 
SerializedPropertyLL %
lumVSsatLL& .
;LL. /
publicNN 
SerializedPropertyNN %
currentEditingCurveNN& 9
;NN9 :
publicOO 
SerializedPropertyOO %
curveYOO& ,
;OO, -
publicPP 
SerializedPropertyPP %
curveRPP& ,
;PP, -
publicQQ 
SerializedPropertyQQ %
curveGQQ& ,
;QQ, -
publicRR 
SerializedPropertyRR %
curveBRR& ,
;RR, -
}SS 	
TonemappingSettingsUU 
m_TonemappingUU )
;UU) *
BasicSettingsVV 
m_BasicVV 
;VV  
ChannelMixerSettingsWW 
m_ChannelMixerWW +
;WW+ ,
ColorWheelsSettingsXX 
m_ColorWheelsXX )
;XX) *
CurvesSettingsYY 
m_CurvesYY 
;YY  
CurveEditor[[ 
m_CurveEditor[[ !
;[[! "

Dictionary\\ 
<\\ 
SerializedProperty\\ %
,\\% &
Color\\' ,
>\\, -
m_CurveDict\\. 9
;\\9 :
const__ 
int__ 
k_CurveResolution__ #
=__$ %
$num__& (
;__( )
const`` 
float`` 
k_NeutralRangeX`` #
=``$ %
$num``& (
;``( )
constaa 
floataa 
k_NeutralRangeYaa #
=aa$ %
$numaa& (
;aa( )
Vector3bb 
[bb 
]bb 
m_RectVerticesbb  
=bb! "
newbb# &
Vector3bb' .
[bb. /
$numbb/ 0
]bb0 1
;bb1 2
Vector3cc 
[cc 
]cc 
m_LineVerticescc  
=cc! "
newcc# &
Vector3cc' .
[cc. /
$numcc/ 0
]cc0 1
;cc1 2
Vector3dd 
[dd 
]dd 
m_CurveVerticesdd !
=dd" #
newdd$ '
Vector3dd( /
[dd/ 0
k_CurveResolutiondd0 A
]ddA B
;ddB C
Rectee 	
m_NeutralCurveRectee
 
;ee 
publicgg 
overridegg 
voidgg 
OnEnablegg %
(gg% &
)gg& '
{hh 	
m_Tonemappingjj 
=jj 
newjj 
TonemappingSettingsjj  3
{kk 

tonemapperll 
=ll 
FindSettingll (
(ll( )
(ll) *
Settingsll* 2
xll3 4
)ll4 5
=>ll6 8
xll9 :
.ll: ;
tonemappingll; F
.llF G

tonemapperllG Q
)llQ R
,llR S
neutralBlackInmm 
=mm  
FindSettingmm! ,
(mm, -
(mm- .
Settingsmm. 6
xmm7 8
)mm8 9
=>mm: <
xmm= >
.mm> ?
tonemappingmm? J
.mmJ K
neutralBlackInmmK Y
)mmY Z
,mmZ [
neutralWhiteInnn 
=nn  
FindSettingnn! ,
(nn, -
(nn- .
Settingsnn. 6
xnn7 8
)nn8 9
=>nn: <
xnn= >
.nn> ?
tonemappingnn? J
.nnJ K
neutralWhiteInnnK Y
)nnY Z
,nnZ [
neutralBlackOutoo 
=oo  !
FindSettingoo" -
(oo- .
(oo. /
Settingsoo/ 7
xoo8 9
)oo9 :
=>oo; =
xoo> ?
.oo? @
tonemappingoo@ K
.ooK L
neutralBlackOutooL [
)oo[ \
,oo\ ]
neutralWhiteOutpp 
=pp  !
FindSettingpp" -
(pp- .
(pp. /
Settingspp/ 7
xpp8 9
)pp9 :
=>pp; =
xpp> ?
.pp? @
tonemappingpp@ K
.ppK L
neutralWhiteOutppL [
)pp[ \
,pp\ ]
neutralWhiteLevelqq !
=qq" #
FindSettingqq$ /
(qq/ 0
(qq0 1
Settingsqq1 9
xqq: ;
)qq; <
=>qq= ?
xqq@ A
.qqA B
tonemappingqqB M
.qqM N
neutralWhiteLevelqqN _
)qq_ `
,qq` a
neutralWhiteCliprr  
=rr! "
FindSettingrr# .
(rr. /
(rr/ 0
Settingsrr0 8
xrr9 :
)rr: ;
=>rr< >
xrr? @
.rr@ A
tonemappingrrA L
.rrL M
neutralWhiteCliprrM ]
)rr] ^
}ss 
;ss 
m_Basicvv 
=vv 
newvv 
BasicSettingsvv '
{ww 
exposurexx 
=xx 
FindSettingxx &
(xx& '
(xx' (
Settingsxx( 0
xxx1 2
)xx2 3
=>xx4 6
xxx7 8
.xx8 9
basicxx9 >
.xx> ?
postExposurexx? K
)xxK L
,xxL M
temperatureyy 
=yy 
FindSettingyy )
(yy) *
(yy* +
Settingsyy+ 3
xyy4 5
)yy5 6
=>yy7 9
xyy: ;
.yy; <
basicyy< A
.yyA B
temperatureyyB M
)yyM N
,yyN O
tintzz 
=zz 
FindSettingzz "
(zz" #
(zz# $
Settingszz$ ,
xzz- .
)zz. /
=>zz0 2
xzz3 4
.zz4 5
basiczz5 :
.zz: ;
tintzz; ?
)zz? @
,zz@ A
hueShift{{ 
={{ 
FindSetting{{ &
({{& '
({{' (
Settings{{( 0
x{{1 2
){{2 3
=>{{4 6
x{{7 8
.{{8 9
basic{{9 >
.{{> ?
hueShift{{? G
){{G H
,{{H I

saturation|| 
=|| 
FindSetting|| (
(||( )
(||) *
Settings||* 2
x||3 4
)||4 5
=>||6 8
x||9 :
.||: ;
basic||; @
.||@ A

saturation||A K
)||K L
,||L M
contrast}} 
=}} 
FindSetting}} &
(}}& '
(}}' (
Settings}}( 0
x}}1 2
)}}2 3
=>}}4 6
x}}7 8
.}}8 9
basic}}9 >
.}}> ?
contrast}}? G
)}}G H
}~~ 
;~~ 
m_ChannelMixer
 
=
 
new
  "
ChannelMixerSettings
! 5
{
 
channels
 
=
 
new
 
[
 
]
  
{
 
FindSetting
 
(
  
(
  !
Settings
! )
x
* +
)
+ ,
=>
- /
x
0 1
.
1 2
channelMixer
2 >
.
> ?
red
? B
)
B C
,
C D
FindSetting
 
(
  
(
  !
Settings
! )
x
* +
)
+ ,
=>
- /
x
0 1
.
1 2
channelMixer
2 >
.
> ?
green
? D
)
D E
,
E F
FindSetting
 
(
  
(
  !
Settings
! )
x
* +
)
+ ,
=>
- /
x
0 1
.
1 2
channelMixer
2 >
.
> ?
blue
? C
)
C D
}
 
,
 #
currentEditingChannel
 %
=
& '
FindSetting
( 3
(
3 4
(
4 5
Settings
5 =
x
> ?
)
? @
=>
A C
x
D E
.
E F
channelMixer
F R
.
R S#
currentEditingChannel
S h
)
h i
}
 
;
 
m_ColorWheels
 
=
 
new
 !
ColorWheelsSettings
  3
{
 
mode
 
=
	 

FindSetting
 
(
 
(
 
Settings
  
x
! "
)
" #
=>
$ &
x
' (
.
( )
colorWheels
) 4
.
4 5
mode
5 9
)
9 :
,
: ;
log
 
=
 
FindSetting
 !
(
! "
(
" #
Settings
# +
x
, -
)
- .
=>
/ 1
x
2 3
.
3 4
colorWheels
4 ?
.
? @
log
@ C
)
C D
,
D E
linear
 
=
 
FindSetting
 $
(
$ %
(
% &
Settings
& .
x
/ 0
)
0 1
=>
2 4
x
5 6
.
6 7
colorWheels
7 B
.
B C
linear
C I
)
I J
}
 
;
 
m_Curves
 
=
 
new
 
CurvesSettings
 )
{
 
master
 
=
 
FindSetting
 $
(
$ %
(
% &
Settings
& .
x
/ 0
)
0 1
=>
2 4
x
5 6
.
6 7
curves
7 =
.
= >
master
> D
.
D E
curve
E J
)
J K
,
K L
red
 
=
 
FindSetting
 !
(
! "
(
" #
Settings
# +
x
, -
)
- .
=>
/ 1
x
2 3
.
3 4
curves
4 :
.
: ;
red
; >
.
> ?
curve
? D
)
D E
,
E F
green
 
=
 
FindSetting
 #
(
# $
(
$ %
Settings
% -
x
. /
)
/ 0
=>
1 3
x
4 5
.
5 6
curves
6 <
.
< =
green
= B
.
B C
curve
C H
)
H I
,
I J
blue
 
=
 
FindSetting
 "
(
" #
(
# $
Settings
$ ,
x
- .
)
. /
=>
0 2
x
3 4
.
4 5
curves
5 ;
.
; <
blue
< @
.
@ A
curve
A F
)
F G
,
G H
hueVShue
 
=
 
FindSetting
 &
(
& '
(
' (
Settings
( 0
x
1 2
)
2 3
=>
4 6
x
7 8
.
8 9
curves
9 ?
.
? @
hueVShue
@ H
.
H I
curve
I N
)
N O
,
O P
hueVSsat
 
=
 
FindSetting
 &
(
& '
(
' (
Settings
( 0
x
1 2
)
2 3
=>
4 6
x
7 8
.
8 9
curves
9 ?
.
? @
hueVSsat
@ H
.
H I
curve
I N
)
N O
,
O P
satVSsat
 
=
 
FindSetting
 &
(
& '
(
' (
Settings
( 0
x
1 2
)
2 3
=>
4 6
x
7 8
.
8 9
curves
9 ?
.
? @
satVSsat
@ H
.
H I
curve
I N
)
N O
,
O P
lumVSsat
 
=
 
FindSetting
 &
(
& '
(
' (
Settings
( 0
x
1 2
)
2 3
=>
4 6
x
7 8
.
8 9
curves
9 ?
.
? @
lumVSsat
@ H
.
H I
curve
I N
)
N O
,
O P!
currentEditingCurve
¡¡ #
=
¡¡$ %
FindSetting
¡¡& 1
(
¡¡1 2
(
¡¡2 3
Settings
¡¡3 ;
x
¡¡< =
)
¡¡= >
=>
¡¡? A
x
¡¡B C
.
¡¡C D
curves
¡¡D J
.
¡¡J K#
e_CurrentEditingCurve
¡¡K `
)
¡¡` a
,
¡¡a b
curveY
¢¢ 
=
¢¢ 
FindSetting
¢¢ $
(
¢¢$ %
(
¢¢% &
Settings
¢¢& .
x
¢¢/ 0
)
¢¢0 1
=>
¢¢2 4
x
¢¢5 6
.
¢¢6 7
curves
¢¢7 =
.
¢¢= >
e_CurveY
¢¢> F
)
¢¢F G
,
¢¢G H
curveR
££ 
=
££ 
FindSetting
££ $
(
££$ %
(
££% &
Settings
££& .
x
££/ 0
)
££0 1
=>
££2 4
x
££5 6
.
££6 7
curves
££7 =
.
££= >
e_CurveR
££> F
)
££F G
,
££G H
curveG
¤¤ 
=
¤¤ 
FindSetting
¤¤ $
(
¤¤$ %
(
¤¤% &
Settings
¤¤& .
x
¤¤/ 0
)
¤¤0 1
=>
¤¤2 4
x
¤¤5 6
.
¤¤6 7
curves
¤¤7 =
.
¤¤= >
e_CurveG
¤¤> F
)
¤¤F G
,
¤¤G H
curveB
¥¥ 
=
¥¥ 
FindSetting
¥¥ $
(
¥¥$ %
(
¥¥% &
Settings
¥¥& .
x
¥¥/ 0
)
¥¥0 1
=>
¥¥2 4
x
¥¥5 6
.
¥¥6 7
curves
¥¥7 =
.
¥¥= >
e_CurveB
¥¥> F
)
¥¥F G
}
¦¦ 
;
¦¦ 
m_CurveDict
©© 
=
©© 
new
©© 

Dictionary
©© (
<
©©( ) 
SerializedProperty
©©) ;
,
©©; <
Color
©©= B
>
©©B C
(
©©C D
)
©©D E
;
©©E F
var
«« 
settings
«« 
=
«« 
CurveEditor
«« &
.
««& '
Settings
««' /
.
««/ 0
defaultSettings
««0 ?
;
««? @
m_CurveEditor
­­ 
=
­­ 
new
­­ 
CurveEditor
­­  +
(
­­+ ,
settings
­­, 4
)
­­4 5
;
­­5 6
AddCurve
®® 
(
®® 
m_Curves
®® 
.
®® 
master
®® $
,
®®$ %
new
®®( +
Color
®®, 1
(
®®1 2
$num
®®2 4
,
®®4 5
$num
®®6 8
,
®®8 9
$num
®®: <
)
®®< =
,
®®= >
$num
®®? @
,
®®@ A
false
®®B G
)
®®G H
;
®®H I
AddCurve
¯¯ 
(
¯¯ 
m_Curves
¯¯ 
.
¯¯ 
red
¯¯ !
,
¯¯! "
new
¯¯( +
Color
¯¯, 1
(
¯¯1 2
$num
¯¯2 4
,
¯¯4 5
$num
¯¯6 8
,
¯¯8 9
$num
¯¯: <
)
¯¯< =
,
¯¯= >
$num
¯¯? @
,
¯¯@ A
false
¯¯B G
)
¯¯G H
;
¯¯H I
AddCurve
°° 
(
°° 
m_Curves
°° 
.
°° 
green
°° #
,
°°# $
new
°°( +
Color
°°, 1
(
°°1 2
$num
°°2 4
,
°°4 5
$num
°°6 8
,
°°8 9
$num
°°: <
)
°°< =
,
°°= >
$num
°°? @
,
°°@ A
false
°°B G
)
°°G H
;
°°H I
AddCurve
±± 
(
±± 
m_Curves
±± 
.
±± 
blue
±± "
,
±±" #
new
±±( +
Color
±±, 1
(
±±1 2
$num
±±2 4
,
±±4 5
$num
±±6 :
,
±±: ;
$num
±±< >
)
±±> ?
,
±±? @
$num
±±A B
,
±±B C
false
±±D I
)
±±I J
;
±±J K
AddCurve
²² 
(
²² 
m_Curves
²² 
.
²² 
hueVShue
²² &
,
²²& '
new
²²( +
Color
²², 1
(
²²1 2
$num
²²2 4
,
²²4 5
$num
²²6 8
,
²²8 9
$num
²²: <
)
²²< =
,
²²= >
$num
²²? @
,
²²@ A
true
²²B F
)
²²F G
;
²²G H
AddCurve
³³ 
(
³³ 
m_Curves
³³ 
.
³³ 
hueVSsat
³³ &
,
³³& '
new
³³( +
Color
³³, 1
(
³³1 2
$num
³³2 4
,
³³4 5
$num
³³6 8
,
³³8 9
$num
³³: <
)
³³< =
,
³³= >
$num
³³? @
,
³³@ A
true
³³B F
)
³³F G
;
³³G H
AddCurve
´´ 
(
´´ 
m_Curves
´´ 
.
´´ 
satVSsat
´´ &
,
´´& '
new
´´( +
Color
´´, 1
(
´´1 2
$num
´´2 4
,
´´4 5
$num
´´6 8
,
´´8 9
$num
´´: <
)
´´< =
,
´´= >
$num
´´? @
,
´´@ A
false
´´B G
)
´´G H
;
´´H I
AddCurve
µµ 
(
µµ 
m_Curves
µµ 
.
µµ 
lumVSsat
µµ &
,
µµ& '
new
µµ( +
Color
µµ, 1
(
µµ1 2
$num
µµ2 4
,
µµ4 5
$num
µµ6 8
,
µµ8 9
$num
µµ: <
)
µµ< =
,
µµ= >
$num
µµ? @
,
µµ@ A
false
µµB G
)
µµG H
;
µµH I
}
¶¶ 	
void
¸¸ 
AddCurve
¸¸ 
(
¸¸  
SerializedProperty
¸¸ (
prop
¸¸) -
,
¸¸- .
Color
¸¸/ 4
color
¸¸5 :
,
¸¸: ;
uint
¸¸< @
minPointCount
¸¸A N
,
¸¸N O
bool
¸¸P T
loop
¸¸U Y
)
¸¸Y Z
{
¹¹ 	
var
ºº 
state
ºº 
=
ºº 
CurveEditor
ºº #
.
ºº# $

CurveState
ºº$ .
.
ºº. /
defaultState
ºº/ ;
;
ºº; <
state
»» 
.
»» 
color
»» 
=
»» 
color
»» 
;
»»  
state
¼¼ 
.
¼¼ 
visible
¼¼ 
=
¼¼ 
false
¼¼ !
;
¼¼! "
state
½½ 
.
½½ 
minPointCount
½½ 
=
½½  !
minPointCount
½½" /
;
½½/ 0
state
¾¾ 
.
¾¾ (
onlyShowHandlesOnSelection
¾¾ ,
=
¾¾- .
true
¾¾/ 3
;
¾¾3 4
state
¿¿ 
.
¿¿ "
zeroKeyConstantValue
¿¿ &
=
¿¿' (
$num
¿¿) -
;
¿¿- .
state
ÀÀ 
.
ÀÀ 
loopInBounds
ÀÀ 
=
ÀÀ  
loop
ÀÀ! %
;
ÀÀ% &
m_CurveEditor
ÁÁ 
.
ÁÁ 
Add
ÁÁ 
(
ÁÁ 
prop
ÁÁ "
,
ÁÁ" #
state
ÁÁ$ )
)
ÁÁ) *
;
ÁÁ* +
m_CurveDict
ÂÂ 
.
ÂÂ 
Add
ÂÂ 
(
ÂÂ 
prop
ÂÂ  
,
ÂÂ  !
color
ÂÂ" '
)
ÂÂ' (
;
ÂÂ( )
}
ÃÃ 	
public
ÅÅ 
override
ÅÅ 
void
ÅÅ 
	OnDisable
ÅÅ &
(
ÅÅ& '
)
ÅÅ' (
{
ÆÆ 	
m_CurveEditor
ÇÇ 
.
ÇÇ 
	RemoveAll
ÇÇ #
(
ÇÇ# $
)
ÇÇ$ %
;
ÇÇ% &
}
ÈÈ 	
public
ÊÊ 
override
ÊÊ 
void
ÊÊ 
OnInspectorGUI
ÊÊ +
(
ÊÊ+ ,
)
ÊÊ, -
{
ËË 	
DoGUIFor
ÌÌ 
(
ÌÌ 
$str
ÌÌ "
,
ÌÌ" #
DoTonemappingGUI
ÌÌ$ 4
)
ÌÌ4 5
;
ÌÌ5 6
EditorGUILayout
ÍÍ 
.
ÍÍ 
Space
ÍÍ !
(
ÍÍ! "
)
ÍÍ" #
;
ÍÍ# $
DoGUIFor
ÎÎ 
(
ÎÎ 
$str
ÎÎ 
,
ÎÎ 

DoBasicGUI
ÎÎ (
)
ÎÎ( )
;
ÎÎ) *
EditorGUILayout
ÏÏ 
.
ÏÏ 
Space
ÏÏ !
(
ÏÏ! "
)
ÏÏ" #
;
ÏÏ# $
DoGUIFor
ÐÐ 
(
ÐÐ 
$str
ÐÐ $
,
ÐÐ$ %
DoChannelMixerGUI
ÐÐ& 7
)
ÐÐ7 8
;
ÐÐ8 9
EditorGUILayout
ÑÑ 
.
ÑÑ 
Space
ÑÑ !
(
ÑÑ! "
)
ÑÑ" #
;
ÑÑ# $
DoGUIFor
ÒÒ 
(
ÒÒ 
$str
ÒÒ !
,
ÒÒ! "
DoColorWheelsGUI
ÒÒ# 3
)
ÒÒ3 4
;
ÒÒ4 5
EditorGUILayout
ÓÓ 
.
ÓÓ 
Space
ÓÓ !
(
ÓÓ! "
)
ÓÓ" #
;
ÓÓ# $
DoGUIFor
ÔÔ 
(
ÔÔ 
$str
ÔÔ %
,
ÔÔ% &
DoCurvesGUI
ÔÔ' 2
)
ÔÔ2 3
;
ÔÔ3 4
}
ÕÕ 	
void
×× 
DoGUIFor
×× 
(
×× 
string
×× 
title
×× "
,
××" #
Action
××$ *
func
××+ /
)
××/ 0
{
ØØ 	
EditorGUILayout
ÙÙ 
.
ÙÙ 

LabelField
ÙÙ &
(
ÙÙ& '
title
ÙÙ' ,
,
ÙÙ, -
EditorStyles
ÙÙ. :
.
ÙÙ: ;
	boldLabel
ÙÙ; D
)
ÙÙD E
;
ÙÙE F
	EditorGUI
ÚÚ 
.
ÚÚ 
indentLevel
ÚÚ !
++
ÚÚ! #
;
ÚÚ# $
func
ÛÛ 
(
ÛÛ 
)
ÛÛ 
;
ÛÛ 
	EditorGUI
ÜÜ 
.
ÜÜ 
indentLevel
ÜÜ !
--
ÜÜ! #
;
ÜÜ# $
}
ÝÝ 	
void
ßß 
DoTonemappingGUI
ßß 
(
ßß 
)
ßß 
{
àà 	
int
áá 
tid
áá 
=
áá 
EditorGUILayout
áá %
.
áá% &
Popup
áá& +
(
áá+ ,
EditorGUIHelper
áá, ;
.
áá; <

GetContent
áá< F
(
ááF G
$str
ááG S
)
ááS T
,
ááT U
m_Tonemapping
ááV c
.
áác d

tonemapper
áád n
.
áán o
intValue
ááo w
,
ááw x
s_Tonemappersááy 
)áá 
;áá 
if
ãã 
(
ãã 
tid
ãã 
==
ãã 
(
ãã 
int
ãã 
)
ãã 

Tonemapper
ãã &
.
ãã& '
Neutral
ãã' .
)
ãã. /
{
ää )
DrawNeutralTonemappingCurve
åå (
(
åå( )
)
åå) *
;
åå* +
EditorGUILayout
çç 
.
çç  
PropertyField
çç  -
(
çç- .
m_Tonemapping
çç. ;
.
çç; <
neutralBlackIn
çç< J
,
ççJ K
EditorGUIHelper
ççL [
.
çç[ \

GetContent
çç\ f
(
ççf g
$str
ççg q
)
ççq r
)
ççr s
;
ççs t
EditorGUILayout
èè 
.
èè  
PropertyField
èè  -
(
èè- .
m_Tonemapping
èè. ;
.
èè; <
neutralWhiteIn
èè< J
,
èèJ K
EditorGUIHelper
èèL [
.
èè[ \

GetContent
èè\ f
(
èèf g
$str
èèg q
)
èèq r
)
èèr s
;
èès t
EditorGUILayout
éé 
.
éé  
PropertyField
éé  -
(
éé- .
m_Tonemapping
éé. ;
.
éé; <
neutralBlackOut
éé< K
,
ééK L
EditorGUIHelper
ééM \
.
éé\ ]

GetContent
éé] g
(
éég h
$str
ééh s
)
éés t
)
éét u
;
ééu v
EditorGUILayout
êê 
.
êê  
PropertyField
êê  -
(
êê- .
m_Tonemapping
êê. ;
.
êê; <
neutralWhiteOut
êê< K
,
êêK L
EditorGUIHelper
êêM \
.
êê\ ]

GetContent
êê] g
(
êêg h
$str
êêh s
)
êês t
)
êêt u
;
êêu v
EditorGUILayout
ëë 
.
ëë  
PropertyField
ëë  -
(
ëë- .
m_Tonemapping
ëë. ;
.
ëë; <
neutralWhiteLevel
ëë< M
,
ëëM N
EditorGUIHelper
ëëO ^
.
ëë^ _

GetContent
ëë_ i
(
ëëi j
$str
ëëj w
)
ëëw x
)
ëëx y
;
ëëy z
EditorGUILayout
ìì 
.
ìì  
PropertyField
ìì  -
(
ìì- .
m_Tonemapping
ìì. ;
.
ìì; <
neutralWhiteClip
ìì< L
,
ììL M
EditorGUIHelper
ììN ]
.
ìì] ^

GetContent
ìì^ h
(
ììh i
$str
ììi u
)
ììu v
)
ììv w
;
ììw x
}
íí 
m_Tonemapping
ïï 
.
ïï 

tonemapper
ïï $
.
ïï$ %
intValue
ïï% -
=
ïï. /
tid
ïï0 3
;
ïï3 4
}
ðð 	
void
òò 	)
DrawNeutralTonemappingCurve
òò
 %
(
òò% &
)
òò& '
{
óó 
using
ôô 
(
ôô 
new
ôô 
	GUILayout
ôô  
.
ôô  !
HorizontalScope
ôô! 0
(
ôô0 1
)
ôô1 2
)
ôô2 3
{
õõ 
	GUILayout
öö 
.
öö 
Space
öö 
(
öö  
	EditorGUI
öö  )
.
öö) *
indentLevel
öö* 5
*
öö6 7
$num
öö8 ;
)
öö; <
;
öö< = 
m_NeutralCurveRect
÷÷ "
=
÷÷# $
GUILayoutUtility
÷÷% 5
.
÷÷5 6
GetRect
÷÷6 =
(
÷÷= >
$num
÷÷> A
,
÷÷A B
$num
÷÷C E
)
÷÷E F
;
÷÷F G
}
øø 
m_RectVertices
ûû 
[
ûû 
$num
ûû 
]
ûû 
=
ûû 
PointInRect
ûû "
(
ûû" #
$num
ûû0 2
,
ûû2 3
$num
ûûA C
)
ûûC D
;
ûûD E
m_RectVertices
üü 
[
üü 
$num
üü 
]
üü 
=
üü 
PointInRect
üü  +
(
üü+ ,
k_NeutralRangeX
üü, ;
,
üü; <
$num
üüJ L
)
üüL M
;
üüM N
m_RectVertices
ýý 
[
ýý 
$num
ýý 
]
ýý 
=
ýý 
PointInRect
ýý  +
(
ýý+ ,
k_NeutralRangeX
ýý, ;
,
ýý; <
k_NeutralRangeY
ýý= L
)
ýýL M
;
ýýM N
m_RectVertices
þþ 
[
þþ 
$num
þþ 
]
þþ 
=
þþ 
PointInRect
þþ  +
(
þþ+ ,
$num
þþ9 ;
,
þþ; <
k_NeutralRangeY
þþ= L
)
þþL M
;
þþM N
Handles
 
.
 +
DrawSolidRectangleWithOutline
 1
(
1 2
m_RectVertices
 
,
 
Color
 
.
 
white
 
*
 
$num
 "
,
" #
Color
 
.
 
white
 
*
 
$num
 "
)
 
;
 
for
 
(
 
var
 
i
 
=
 
$num
 
;
 
i
 
<
 
k_NeutralRangeY
  /
;
/ 0
i
1 2
++
2 4
)
4 5
DrawLine
 
(
 
$num
 
,
 
i
 
,
 
k_NeutralRangeX
 .
,
. /
i
0 1
,
1 2
$num
3 7
)
7 8
;
8 9
for
 
(
 
var
 
i
 
=
 
$num
 
;
 
i
 
<
 
k_NeutralRangeX
  /
;
/ 0
i
1 2
++
2 4
)
4 5
DrawLine
 
(
 
i
 
,
 
$num
 
,
 
i
  
,
  !
k_NeutralRangeY
" 1
,
1 2
$num
3 7
)
7 8
;
8 9
Handles
 
.
 
Label
 
(
 
PointInRect
 
(
 
$num
 
,
 
k_NeutralRangeY
 .
)
. /
+
0 1
Vector3
2 9
.
9 :
right
: ?
,
? @
$str
 $
,
$ %
EditorStyles
& 2
.
2 3
	miniLabel
3 <
)
 
;
 
var
 
tonemap
 
=
 
(
 
(
 
ColorGradingModel
 -
)
- .
target
. 4
)
4 5
.
5 6
settings
6 >
.
> ?
tonemapping
? J
;
J K
const
 
float
 
scaleFactor
 
=
 
$num
  #
;
# $
const
 
float
 
scaleFactorHalf
 '
=
( )
scaleFactor
* 5
*
6 7
$num
8 <
;
< =
float
 
inBlack
 
=
 
tonemap
 #
.
# $
neutralBlackIn
$ 2
*
3 4
scaleFactor
5 @
+
A B
$num
C E
;
E F
float
 
outBlack
 
=
 
tonemap
 $
.
$ %
neutralBlackOut
% 4
*
5 6
scaleFactorHalf
7 F
+
G H
$num
I K
;
K L
float
 
inWhite
 
=
 
tonemap
 #
.
# $
neutralWhiteIn
$ 2
/
3 4
scaleFactor
5 @
;
@ A
float
 
outWhite
 
=
 
$num
 
-
  !
tonemap
" )
.
) *
neutralWhiteOut
* 9
/
: ;
scaleFactor
< G
;
G H
float
 

blackRatio
 
=
 
inBlack
 &
/
' (
outBlack
) 1
;
1 2
float
 

whiteRatio
 
=
 
inWhite
 &
/
' (
outWhite
) 1
;
1 2
const
¡¡ 
float
¡¡ 
a
¡¡ 
=
¡¡ 
$num
¡¡  
;
¡¡  !
float
¢¢ 
b
¢¢ 
=
¢¢ 
Mathf
¢¢ 
.
¢¢ 
Max
¢¢ 
(
¢¢  
$num
¢¢  "
,
¢¢" #
Mathf
¢¢$ )
.
¢¢) *
LerpUnclamped
¢¢* 7
(
¢¢7 8
$num
¢¢8 =
,
¢¢= >
$num
¢¢? D
,
¢¢D E

blackRatio
¢¢F P
)
¢¢P Q
)
¢¢Q R
;
¢¢R S
float
££ 
c
££ 
=
££ 
Mathf
££ 
.
££ 
LerpUnclamped
££ )
(
££) *
$num
££* /
,
££/ 0
$num
££1 6
,
££6 7

whiteRatio
££8 B
)
££B C
;
££C D
float
¤¤ 
d
¤¤ 
=
¤¤ 
Mathf
¤¤ 
.
¤¤ 
Max
¤¤ 
(
¤¤  
$num
¤¤  "
,
¤¤" #
Mathf
¤¤$ )
.
¤¤) *
LerpUnclamped
¤¤* 7
(
¤¤7 8
$num
¤¤8 =
,
¤¤= >
$num
¤¤? D
,
¤¤D E

blackRatio
¤¤F P
)
¤¤P Q
)
¤¤Q R
;
¤¤R S
const
¥¥ 
float
¥¥ 
e
¥¥ 
=
¥¥ 
$num
¥¥ !
;
¥¥! "
const
¦¦ 
float
¦¦ 
f
¦¦ 
=
¦¦ 
$num
¦¦ !
;
¦¦! "
float
§§ 

whiteLevel
§§ 
=
§§ 
tonemap
§§  
.
§§  !
neutralWhiteLevel
§§! 2
;
§§2 3
float
¨¨ 
	whiteClip
¨¨ 
=
¨¨ 
tonemap
¨¨ 
.
¨¨  
neutralWhiteClip
¨¨  0
/
¨¨1 2
scaleFactorHalf
¨¨3 B
;
¨¨B C
var
«« 
vcount
«« 
=
«« 
$num
«« 
;
«« 
while
¬¬ 
(
¬¬ 
vcount
¬¬ 
<
¬¬ 
k_CurveResolution
¬¬ -
)
¬¬- .
{
­­ 
float
®® 
x
®® 
=
®® 
k_NeutralRangeX
®® )
*
®®* +
vcount
®®, 2
/
®®3 4
(
®®5 6
k_CurveResolution
®®6 G
-
®®H I
$num
®®J K
)
®®K L
;
®®L M
float
¯¯ 
y
¯¯ 
=
¯¯ 
NeutralTonemap
¯¯ (
(
¯¯( )
x
¯¯) *
,
¯¯* +
a
¯¯, -
,
¯¯- .
b
¯¯/ 0
,
¯¯0 1
c
¯¯2 3
,
¯¯3 4
d
¯¯5 6
,
¯¯6 7
e
¯¯8 9
,
¯¯9 :
f
¯¯; <
,
¯¯< =

whiteLevel
¯¯> H
,
¯¯H I
	whiteClip
¯¯J S
)
¯¯S T
;
¯¯T U
if
±± 
(
±± 
y
±± 
<
±± 
k_NeutralRangeY
±± '
)
±±' (
{
²² 
m_CurveVertices
³³ #
[
³³# $
vcount
³³$ *
++
³³* ,
]
³³, -
=
³³. /
PointInRect
³³0 ;
(
³³; <
x
³³< =
,
³³= >
y
³³? @
)
³³@ A
;
³³A B
}
´´ 
else
µµ 
{
¶¶ 
if
·· 
(
·· 
vcount
·· 
>
··  
$num
··! "
)
··" #
{
¸¸ 
var
ºº 
v1
ºº 
=
ºº  
m_CurveVertices
ºº! 0
[
ºº0 1
vcount
ºº1 7
-
ºº8 9
$num
ºº: ;
]
ºº; <
;
ºº< =
var
»» 
v2
»» 
=
»»  
m_CurveVertices
»»! 0
[
»»0 1
vcount
»»1 7
-
»»8 9
$num
»»: ;
]
»»; <
;
»»< =
var
¼¼ 
clip
¼¼  
=
¼¼! "
(
¼¼# $ 
m_NeutralCurveRect
¼¼$ 6
.
¼¼6 7
y
¼¼7 8
-
¼¼9 :
v1
¼¼; =
.
¼¼= >
y
¼¼> ?
)
¼¼? @
/
¼¼A B
(
¼¼C D
v2
¼¼D F
.
¼¼F G
y
¼¼G H
-
¼¼I J
v1
¼¼K M
.
¼¼M N
y
¼¼N O
)
¼¼O P
;
¼¼P Q
m_CurveVertices
½½ '
[
½½' (
vcount
½½( .
-
½½/ 0
$num
½½1 2
]
½½2 3
=
½½4 5
v1
½½6 8
+
½½9 :
(
½½; <
v2
½½< >
-
½½? @
v1
½½A C
)
½½C D
*
½½E F
clip
½½G K
;
½½K L
}
¾¾ 
break
¿¿ 
;
¿¿ 
}
ÀÀ 
}
ÁÁ 
if
ÃÃ 
(
ÃÃ 
vcount
ÃÃ 
>
ÃÃ 
$num
ÃÃ 
)
ÃÃ 
{
ÄÄ 
Handles
ÅÅ 
.
ÅÅ 
color
ÅÅ 
=
ÅÅ 
Color
ÅÅ  %
.
ÅÅ% &
white
ÅÅ& +
*
ÅÅ, -
$num
ÅÅ. 2
;
ÅÅ2 3
Handles
ÆÆ 
.
ÆÆ 
DrawAAPolyLine
ÆÆ &
(
ÆÆ& '
$num
ÆÆ' +
,
ÆÆ+ ,
vcount
ÆÆ- 3
,
ÆÆ3 4
m_CurveVertices
ÆÆ5 D
)
ÆÆD E
;
ÆÆE F
}
ÇÇ 
}
ÈÈ 
void
ÊÊ 
DrawLine
ÊÊ 
(
ÊÊ 
float
ÊÊ 
x1
ÊÊ 
,
ÊÊ 
float
ÊÊ 
y1
ÊÊ  "
,
ÊÊ" #
float
ÊÊ$ )
x2
ÊÊ* ,
,
ÊÊ, -
float
ÊÊ. 3
y2
ÊÊ4 6
,
ÊÊ6 7
float
ÊÊ8 =
	grayscale
ÊÊ> G
)
ÊÊG H
{
ËË 	
m_LineVertices
ÌÌ 
[
ÌÌ 
$num
ÌÌ 
]
ÌÌ 
=
ÌÌ 
PointInRect
ÌÌ  +
(
ÌÌ+ ,
x1
ÌÌ, .
,
ÌÌ. /
y1
ÌÌ0 2
)
ÌÌ2 3
;
ÌÌ3 4
m_LineVertices
ÍÍ 
[
ÍÍ 
$num
ÍÍ 
]
ÍÍ 
=
ÍÍ 
PointInRect
ÍÍ  +
(
ÍÍ+ ,
x2
ÍÍ, .
,
ÍÍ. /
y2
ÍÍ0 2
)
ÍÍ2 3
;
ÍÍ3 4
Handles
ÎÎ 
.
ÎÎ 
color
ÎÎ 
=
ÎÎ 
Color
ÎÎ !
.
ÎÎ! "
white
ÎÎ" '
*
ÎÎ( )
	grayscale
ÎÎ* 3
;
ÎÎ3 4
Handles
ÏÏ 
.
ÏÏ 
DrawAAPolyLine
ÏÏ "
(
ÏÏ" #
$num
ÏÏ# %
,
ÏÏ% &
m_LineVertices
ÏÏ' 5
)
ÏÏ5 6
;
ÏÏ6 7
}
ÐÐ 	
Vector3
ÒÒ 	
PointInRect
ÒÒ
 
(
ÒÒ 
float
ÒÒ 
x
ÒÒ 
,
ÒÒ 
float
ÒÒ $
y
ÒÒ% &
)
ÒÒ& '
{
ÓÓ 	
x
ÔÔ 
=
ÔÔ 
Mathf
ÔÔ 
.
ÔÔ 
Lerp
ÔÔ 
(
ÔÔ  
m_NeutralCurveRect
ÔÔ -
.
ÔÔ- .
x
ÔÔ. /
,
ÔÔ/ 0 
m_NeutralCurveRect
ÔÔ1 C
.
ÔÔC D
xMax
ÔÔD H
,
ÔÔH I
x
ÔÔJ K
/
ÔÔL M
k_NeutralRangeX
ÔÔN ]
)
ÔÔ] ^
;
ÔÔ^ _
y
ÕÕ 
=
ÕÕ 
Mathf
ÕÕ 
.
ÕÕ 
Lerp
ÕÕ 
(
ÕÕ  
m_NeutralCurveRect
ÕÕ -
.
ÕÕ- .
yMax
ÕÕ. 2
,
ÕÕ2 3 
m_NeutralCurveRect
ÕÕ4 F
.
ÕÕF G
y
ÕÕG H
,
ÕÕH I
y
ÕÕJ K
/
ÕÕL M
k_NeutralRangeY
ÕÕN ]
)
ÕÕ] ^
;
ÕÕ^ _
return
ÖÖ 
new
ÖÖ 
Vector3
ÖÖ 
(
ÖÖ 
x
ÖÖ  
,
ÖÖ  !
y
ÖÖ" #
,
ÖÖ# $
$num
ÖÖ% &
)
ÖÖ& '
;
ÖÖ' (
}
×× 	
float
ÙÙ 
NeutralCurve
ÙÙ 
(
ÙÙ 
float
ÙÙ 
x
ÙÙ 
,
ÙÙ 
float
ÙÙ #
a
ÙÙ$ %
,
ÙÙ% &
float
ÙÙ' ,
b
ÙÙ- .
,
ÙÙ. /
float
ÙÙ0 5
c
ÙÙ6 7
,
ÙÙ7 8
float
ÙÙ9 >
d
ÙÙ? @
,
ÙÙ@ A
float
ÙÙB G
e
ÙÙH I
,
ÙÙI J
float
ÙÙK P
f
ÙÙQ R
)
ÙÙR S
{
ÚÚ 
return
ÛÛ 	
(
ÛÛ
 
(
ÛÛ 
x
ÛÛ 
*
ÛÛ 
(
ÛÛ 
a
ÛÛ 
*
ÛÛ 
x
ÛÛ 
+
ÛÛ 
c
ÛÛ 
*
ÛÛ 
b
ÛÛ 
)
ÛÛ 
+
ÛÛ  !
d
ÛÛ" #
*
ÛÛ$ %
e
ÛÛ& '
)
ÛÛ' (
/
ÛÛ) *
(
ÛÛ+ ,
x
ÛÛ, -
*
ÛÛ. /
(
ÛÛ0 1
a
ÛÛ1 2
*
ÛÛ3 4
x
ÛÛ5 6
+
ÛÛ7 8
b
ÛÛ9 :
)
ÛÛ: ;
+
ÛÛ< =
d
ÛÛ> ?
*
ÛÛ@ A
f
ÛÛB C
)
ÛÛC D
)
ÛÛD E
-
ÛÛF G
e
ÛÛH I
/
ÛÛJ K
f
ÛÛL M
;
ÛÛM N
}
ÜÜ 
float
ÞÞ 

NeutralTonemap
ÞÞ 
(
ÞÞ 
float
ÞÞ 
x
ÞÞ  !
,
ÞÞ! "
float
ÞÞ# (
a
ÞÞ) *
,
ÞÞ* +
float
ÞÞ, 1
b
ÞÞ2 3
,
ÞÞ3 4
float
ÞÞ5 :
c
ÞÞ; <
,
ÞÞ< =
float
ÞÞ> C
d
ÞÞD E
,
ÞÞE F
float
ÞÞG L
e
ÞÞM N
,
ÞÞN O
float
ÞÞP U
f
ÞÞV W
,
ÞÞW X
float
ÞÞY ^

whiteLevel
ÞÞ_ i
,
ÞÞi j
float
ÞÞk p
	whiteClip
ÞÞq z
)
ÞÞz {
{
ßß 
x
àà 
=
àà 
Mathf
àà 
.
àà 
Max
àà 
(
àà 
$num
àà 
,
àà 
x
àà 
)
àà 
;
àà 
float
ãã 

whiteScale
ãã	 
=
ãã 
$num
ãã 
/
ãã 
NeutralCurve
ãã '
(
ãã' (

whiteLevel
ãã( 2
,
ãã2 3
a
ãã4 5
,
ãã5 6
b
ãã7 8
,
ãã8 9
c
ãã: ;
,
ãã; <
d
ãã= >
,
ãã> ?
e
ãã@ A
,
ããA B
f
ããC D
)
ããD E
;
ããE F
x
ää 
=
ää 
NeutralCurve
ää 
(
ää 
x
ää 
*
ää 

whiteScale
ää "
,
ää" #
a
ää$ %
,
ää% &
b
ää' (
,
ää( )
c
ää* +
,
ää+ ,
d
ää- .
,
ää. /
e
ää0 1
,
ää1 2
f
ää3 4
)
ää4 5
;
ää5 6
x
åå 
*=
åå 

whiteScale
åå 
;
åå 
x
èè 
/=
èè 
	whiteClip
èè 
;
èè 
return
êê 	
x
êê
 
;
êê 
}
ëë 
void
íí 

DoBasicGUI
íí 
(
íí 
)
íí 
{
îî 	
EditorGUILayout
ïï 
.
ïï 
PropertyField
ïï )
(
ïï) *
m_Basic
ïï* 1
.
ïï1 2
exposure
ïï2 :
,
ïï: ;
EditorGUIHelper
ïï< K
.
ïïK L

GetContent
ïïL V
(
ïïV W
$str
ïïW k
)
ïïk l
)
ïïl m
;
ïïm n
EditorGUILayout
ðð 
.
ðð 
PropertyField
ðð )
(
ðð) *
m_Basic
ðð* 1
.
ðð1 2
temperature
ðð2 =
)
ðð= >
;
ðð> ?
EditorGUILayout
ññ 
.
ññ 
PropertyField
ññ )
(
ññ) *
m_Basic
ññ* 1
.
ññ1 2
tint
ññ2 6
)
ññ6 7
;
ññ7 8
EditorGUILayout
òò 
.
òò 
PropertyField
òò )
(
òò) *
m_Basic
òò* 1
.
òò1 2
hueShift
òò2 :
)
òò: ;
;
òò; <
EditorGUILayout
óó 
.
óó 
PropertyField
óó )
(
óó) *
m_Basic
óó* 1
.
óó1 2

saturation
óó2 <
)
óó< =
;
óó= >
EditorGUILayout
ôô 
.
ôô 
PropertyField
ôô )
(
ôô) *
m_Basic
ôô* 1
.
ôô1 2
contrast
ôô2 :
)
ôô: ;
;
ôô; <
}
õõ 	
void
÷÷ 
DoChannelMixerGUI
÷÷ 
(
÷÷ 
)
÷÷  
{
øø 	
int
ùù 
currentChannel
ùù 
=
ùù  
m_ChannelMixer
ùù! /
.
ùù/ 0#
currentEditingChannel
ùù0 E
.
ùùE F
intValue
ùùF N
;
ùùN O
	EditorGUI
ûû 
.
ûû 
BeginChangeCheck
ûû &
(
ûû& '
)
ûû' (
;
ûû( )
{
üü 
using
ýý 
(
ýý 
new
ýý 
EditorGUILayout
ýý *
.
ýý* +
HorizontalScope
ýý+ :
(
ýý: ;
)
ýý; <
)
ýý< =
{
þþ 
EditorGUILayout
ÿÿ #
.
ÿÿ# $
PrefixLabel
ÿÿ$ /
(
ÿÿ/ 0
$str
ÿÿ0 9
)
ÿÿ9 :
;
ÿÿ: ;
if
 
(
 
	GUILayout
 !
.
! "
Toggle
" (
(
( )
currentChannel
) 7
==
8 :
$num
; <
,
< =
EditorGUIHelper
> M
.
M N

GetContent
N X
(
X Y
$str
Y r
)
r s
,
s t
EditorStylesu 
. 
miniButtonLeft 
) 
) 
currentChannel ¡
=¢ £
$num¤ ¥
;¥ ¦
if
 
(
 
	GUILayout
 !
.
! "
Toggle
" (
(
( )
currentChannel
) 7
==
8 :
$num
; <
,
< =
EditorGUIHelper
> M
.
M N

GetContent
N X
(
X Y
$str
Y v
)
v w
,
w x
EditorStylesy 
. 
miniButtonMid 
) 
) 
currentChannel ¤
=¥ ¦
$num§ ¨
;¨ ©
if
 
(
 
	GUILayout
 !
.
! "
Toggle
" (
(
( )
currentChannel
) 7
==
8 :
$num
; <
,
< =
EditorGUIHelper
> M
.
M N

GetContent
N X
(
X Y
$str
Y t
)
t u
,
u v
EditorStylesw 
. 
miniButtonRight 
) 
) 
currentChannel ¤
=¥ ¦
$num§ ¨
;¨ ©
}
 
}
 
if
 
(
 
	EditorGUI
 
.
 
EndChangeCheck
 (
(
( )
)
) *
)
* +
{
 
GUI
 
.
 
FocusControl
  
(
  !
null
! %
)
% &
;
& '
}
 
var
 
serializedChannel
 !
=
" #
m_ChannelMixer
$ 2
.
2 3
channels
3 ;
[
; <
currentChannel
< J
]
J K
;
K L
m_ChannelMixer
 
.
 #
currentEditingChannel
 0
.
0 1
intValue
1 9
=
: ;
currentChannel
< J
;
J K
var
 
v
 
=
 
serializedChannel
 %
.
% &
vector3Value
& 2
;
2 3
v
 
.
 
x
 
=
 
EditorGUILayout
 !
.
! "
Slider
" (
(
( )
EditorGUIHelper
) 8
.
8 9

GetContent
9 C
(
C D
$strD 
) 
, 
v 
. 
x 
, 
- 
$num 
, 
$num 
) 
; 
v
 
.
 
y
 
=
 
EditorGUILayout
 !
.
! "
Slider
" (
(
( )
EditorGUIHelper
) 8
.
8 9

GetContent
9 C
(
C D
$strD 
) 
, 
v 
. 
y 
, 
- 
$num 
, 
$num 
) 
; 
v
 
.
 
z
 
=
 
EditorGUILayout
 !
.
! "
Slider
" (
(
( )
EditorGUIHelper
) 8
.
8 9

GetContent
9 C
(
C D
$strD 
) 
, 
v 
. 
z 
, 
- 
$num 
, 
$num 
) 
; 
serializedChannel
 
.
 
vector3Value
 *
=
+ ,
v
- .
;
. /
}
 	
void
 
DoColorWheelsGUI
 
(
 
)
 
{
 	
int
	 
	wheelMode
 
=
 
m_ColorWheels
 &
.
& '
mode
' +
.
+ ,
intValue
, 4
;
4 5
using
	 
(
 
new
 
EditorGUILayout
 #
.
# $
HorizontalScope
$ 3
(
3 4
)
4 5
)
5 6
{
	 

	GUILayout

 
.
 
Space
 
(
 
$num
 
)
 
;
 
if

 
(
 
	GUILayout
 
.
 
Toggle
 
(
 
	wheelMode
 (
==
) +
(
, -
int
- 0
)
0 1
ColorWheelMode
1 ?
.
? @
Linear
@ F
,
F G
$str
H P
,
P Q
EditorStyles
R ^
.
^ _
miniButtonLeft
_ m
)
m n
)
n o
	wheelMode
p y
=
z {
(
| }
int} 
) 
ColorWheelMode 
. 
Linear 
; 
if

 
(
 
	GUILayout
 
.
 
Toggle
 
(
 
	wheelMode
 (
==
) +
(
, -
int
- 0
)
0 1
ColorWheelMode
1 ?
.
? @
Log
@ C
,
C D
$str
E J
,
J K
EditorStyles
L X
.
X Y
miniButtonRight
Y h
)
h i
)
i j
	wheelMode
k t
=
u v
(
w x
int
x {
)
{ |
ColorWheelMode| 
. 
Log 
; 
}
	 

m_ColorWheels
	 
.
 
mode
 
.
 
intValue
 $
=
% &
	wheelMode
' 0
;
0 1
EditorGUILayout
  	 
.
   
Space
   
(
   
)
    
;
    !
if
¢¢	 
(
¢¢ 
	wheelMode
¢¢ 
==
¢¢ 
(
¢¢ 
int
¢¢ 
)
¢¢ 
ColorWheelMode
¢¢ -
.
¢¢- .
Linear
¢¢. 4
)
¢¢4 5
{
££	 

EditorGUILayout
¤¤
 
.
¤¤ 
PropertyField
¤¤ '
(
¤¤' (
m_ColorWheels
¤¤( 5
.
¤¤5 6
linear
¤¤6 <
)
¤¤< =
;
¤¤= >
WheelSetTitle
¥¥
 
(
¥¥ 
GUILayoutUtility
¥¥ (
.
¥¥( )
GetLastRect
¥¥) 4
(
¥¥4 5
)
¥¥5 6
,
¥¥6 7
$str
¥¥8 I
)
¥¥I J
;
¥¥J K
}
¦¦	 

else
§§ 
if
§§ 

(
§§ 
	wheelMode
§§ 
==
§§ 
(
§§ 
int
§§ 
)
§§ 
ColorWheelMode
§§ ,
.
§§, -
Log
§§- 0
)
§§0 1
{
¨¨ 
EditorGUILayout
©© 
.
©© 
PropertyField
©© !
(
©©! "
m_ColorWheels
©©" /
.
©©/ 0
log
©©0 3
)
©©3 4
;
©©4 5
WheelSetTitle
ªª 
(
ªª 
GUILayoutUtility
ªª "
.
ªª" #
GetLastRect
ªª# .
(
ªª. /
)
ªª/ 0
,
ªª0 1
$str
ªª2 @
)
ªª@ A
;
ªªA B
}
«« 
}
¬¬ 	
static
®® 
void
®® 
WheelSetTitle
®® !
(
®®! "
Rect
®®" &
position
®®' /
,
®®/ 0
string
®®1 7
label
®®8 =
)
®®= >
{
¯¯ 	
var
°° 
matrix
°° 
=
°° 
GUI
°° 
.
°° 
matrix
°° #
;
°°# $
var
±± 
rect
±± 
=
±± 
new
±± 
Rect
±± 
(
±±  
position
±±  (
.
±±( )
x
±±) *
-
±±+ ,
$num
±±- 0
,
±±0 1
position
±±2 :
.
±±: ;
y
±±; <
,
±±< ="
TrackballGroupDrawer
±±> R
.
±±R S
m_Size
±±S Y
,
±±Y Z"
TrackballGroupDrawer
±±[ o
.
±±o p
m_Size
±±p v
)
±±v w
;
±±w x

GUIUtility
²² 
.
²² 
RotateAroundPivot
²² (
(
²²( )
-
²²) *
$num
²²* -
,
²²- .
rect
²²/ 3
.
²²3 4
center
²²4 :
)
²²: ;
;
²²; <
GUI
³³ 
.
³³ 
Label
³³ 
(
³³ 
rect
³³ 
,
³³ 
label
³³ !
,
³³! "
FxStyles
³³# +
.
³³+ ,
centeredMiniLabel
³³, =
)
³³= >
;
³³> ?
GUI
´´ 
.
´´ 
matrix
´´ 
=
´´ 
matrix
´´ 
;
´´  
}
µµ 	
void
··  
ResetVisibleCurves
·· 
(
··  
)
··  !
{
¸¸ 	
foreach
¹¹ 
(
¹¹ 
var
¹¹ 
curve
¹¹ 
in
¹¹ !
m_CurveDict
¹¹" -
)
¹¹- .
{
ºº 
var
»» 
state
»» 
=
»» 
m_CurveEditor
»» )
.
»») *
GetCurveState
»»* 7
(
»»7 8
curve
»»8 =
.
»»= >
Key
»»> A
)
»»A B
;
»»B C
state
¼¼ 
.
¼¼ 
visible
¼¼ 
=
¼¼ 
false
¼¼  %
;
¼¼% &
m_CurveEditor
½½ 
.
½½ 
SetCurveState
½½ +
(
½½+ ,
curve
½½, 1
.
½½1 2
Key
½½2 5
,
½½5 6
state
½½7 <
)
½½< =
;
½½= >
}
¾¾ 
}
¿¿ 	
void
ÁÁ 
SetCurveVisible
ÁÁ 
(
ÁÁ  
SerializedProperty
ÁÁ /
prop
ÁÁ0 4
)
ÁÁ4 5
{
ÂÂ 	
var
ÃÃ 
state
ÃÃ 
=
ÃÃ 
m_CurveEditor
ÃÃ %
.
ÃÃ% &
GetCurveState
ÃÃ& 3
(
ÃÃ3 4
prop
ÃÃ4 8
)
ÃÃ8 9
;
ÃÃ9 :
state
ÄÄ 
.
ÄÄ 
visible
ÄÄ 
=
ÄÄ 
true
ÄÄ  
;
ÄÄ  !
m_CurveEditor
ÅÅ 
.
ÅÅ 
SetCurveState
ÅÅ '
(
ÅÅ' (
prop
ÅÅ( ,
,
ÅÅ, -
state
ÅÅ. 3
)
ÅÅ3 4
;
ÅÅ4 5
}
ÆÆ 	
bool
ÈÈ 
SpecialToggle
ÈÈ 
(
ÈÈ 
bool
ÈÈ 
value
ÈÈ  %
,
ÈÈ% &
string
ÈÈ' -
name
ÈÈ. 2
,
ÈÈ2 3
out
ÈÈ4 7
bool
ÈÈ8 <
rightClicked
ÈÈ= I
)
ÈÈI J
{
ÉÉ 	
var
ÊÊ 
rect
ÊÊ 
=
ÊÊ 
GUILayoutUtility
ÊÊ '
.
ÊÊ' (
GetRect
ÊÊ( /
(
ÊÊ/ 0
EditorGUIHelper
ÊÊ0 ?
.
ÊÊ? @

GetContent
ÊÊ@ J
(
ÊÊJ K
name
ÊÊK O
)
ÊÊO P
,
ÊÊP Q
EditorStyles
ÊÊR ^
.
ÊÊ^ _
toolbarButton
ÊÊ_ l
)
ÊÊl m
;
ÊÊm n
var
ÌÌ 
e
ÌÌ 
=
ÌÌ 
Event
ÌÌ 
.
ÌÌ 
current
ÌÌ !
;
ÌÌ! "
rightClicked
ÍÍ 
=
ÍÍ 
(
ÍÍ 
e
ÍÍ 
.
ÍÍ 
type
ÍÍ "
==
ÍÍ# %
	EventType
ÍÍ& /
.
ÍÍ/ 0
MouseUp
ÍÍ0 7
&&
ÍÍ8 :
rect
ÍÍ; ?
.
ÍÍ? @
Contains
ÍÍ@ H
(
ÍÍH I
e
ÍÍI J
.
ÍÍJ K
mousePosition
ÍÍK X
)
ÍÍX Y
&&
ÍÍZ \
e
ÍÍ] ^
.
ÍÍ^ _
button
ÍÍ_ e
==
ÍÍf h
$num
ÍÍi j
)
ÍÍj k
;
ÍÍk l
return
ÏÏ 
GUI
ÏÏ 
.
ÏÏ 
Toggle
ÏÏ 
(
ÏÏ 
rect
ÏÏ "
,
ÏÏ" #
value
ÏÏ$ )
,
ÏÏ) *
name
ÏÏ+ /
,
ÏÏ/ 0
EditorStyles
ÏÏ1 =
.
ÏÏ= >
toolbarButton
ÏÏ> K
)
ÏÏK L
;
ÏÏL M
}
ÐÐ 	
static
ÒÒ 
Material
ÒÒ 
s_MaterialSpline
ÒÒ (
;
ÒÒ( )
void
ÔÔ 
DoCurvesGUI
ÔÔ 
(
ÔÔ 
)
ÔÔ 
{
ÕÕ 	
EditorGUILayout
ÖÖ 
.
ÖÖ 
Space
ÖÖ !
(
ÖÖ! "
)
ÖÖ" #
;
ÖÖ# $
	EditorGUI
×× 
.
×× 
indentLevel
×× !
-=
××" $
$num
××% &
;
××& ' 
ResetVisibleCurves
ØØ 
(
ØØ 
)
ØØ  
;
ØØ  !
using
ÚÚ 
(
ÚÚ 
new
ÚÚ 
	EditorGUI
ÚÚ  
.
ÚÚ  ! 
DisabledGroupScope
ÚÚ! 3
(
ÚÚ3 4 
serializedProperty
ÚÚ4 F
.
ÚÚF G
serializedObject
ÚÚG W
.
ÚÚW X&
isEditingMultipleObjects
ÚÚX p
)
ÚÚp q
)
ÚÚq r
{
ÛÛ 
int
ÜÜ 
curveEditingId
ÜÜ "
=
ÜÜ# $
$num
ÜÜ% &
;
ÜÜ& '
using
ßß 
(
ßß 
new
ßß 
	GUILayout
ßß $
.
ßß$ %
HorizontalScope
ßß% 4
(
ßß4 5
EditorStyles
ßß5 A
.
ßßA B
toolbar
ßßB I
)
ßßI J
)
ßßJ K
{
àà 
curveEditingId
áá "
=
áá# $
EditorGUILayout
áá% 4
.
áá4 5
Popup
áá5 :
(
áá: ;
m_Curves
áá; C
.
ááC D!
currentEditingCurve
ááD W
.
ááW X
intValue
ááX `
,
áá` a
s_Curves
ááb j
,
ááj k
EditorStyles
áál x
.
ááx y
toolbarPopupááy 
,áá 
	GUILayoutáá 
.áá 
MaxWidtháá 
(áá 
$numáá 
)áá 
)áá  
;áá  ¡
bool
ââ 
y
ââ 
=
ââ 
false
ââ "
,
ââ" #
r
ââ$ %
=
ââ& '
false
ââ( -
,
ââ- .
g
ââ/ 0
=
ââ1 2
false
ââ3 8
,
ââ8 9
b
ââ: ;
=
ââ< =
false
ââ> C
;
ââC D
if
ää 
(
ää 
curveEditingId
ää &
==
ää' )
$num
ää* +
)
ää+ ,
{
åå 
EditorGUILayout
ææ '
.
ææ' (
Space
ææ( -
(
ææ- .
)
ææ. /
;
ææ/ 0
bool
èè 
rightClickedY
èè *
,
èè* +
rightClickedR
èè, 9
,
èè9 :
rightClickedG
èè; H
,
èèH I
rightClickedB
èèJ W
;
èèW X
y
êê 
=
êê 
SpecialToggle
êê )
(
êê) *
m_Curves
êê* 2
.
êê2 3
curveY
êê3 9
.
êê9 :
	boolValue
êê: C
,
êêC D
$str
êêE H
,
êêH I
out
êêJ M
rightClickedY
êêN [
)
êê[ \
;
êê\ ]
r
ëë 
=
ëë 
SpecialToggle
ëë )
(
ëë) *
m_Curves
ëë* 2
.
ëë2 3
curveR
ëë3 9
.
ëë9 :
	boolValue
ëë: C
,
ëëC D
$str
ëëE H
,
ëëH I
out
ëëJ M
rightClickedR
ëëN [
)
ëë[ \
;
ëë\ ]
g
ìì 
=
ìì 
SpecialToggle
ìì )
(
ìì) *
m_Curves
ìì* 2
.
ìì2 3
curveG
ìì3 9
.
ìì9 :
	boolValue
ìì: C
,
ììC D
$str
ììE H
,
ììH I
out
ììJ M
rightClickedG
ììN [
)
ìì[ \
;
ìì\ ]
b
íí 
=
íí 
SpecialToggle
íí )
(
íí) *
m_Curves
íí* 2
.
íí2 3
curveB
íí3 9
.
íí9 :
	boolValue
íí: C
,
ííC D
$str
ííE H
,
ííH I
out
ííJ M
rightClickedB
ííN [
)
íí[ \
;
íí\ ]
if
ïï 
(
ïï 
!
ïï 
y
ïï 
&&
ïï !
!
ïï" #
r
ïï# $
&&
ïï% '
!
ïï( )
g
ïï) *
&&
ïï+ -
!
ïï. /
b
ïï/ 0
)
ïï0 1
{
ðð 
r
ññ 
=
ññ 
g
ññ  !
=
ññ" #
b
ññ$ %
=
ññ& '
false
ññ( -
;
ññ- .
y
òò 
=
òò 
true
òò  $
;
òò$ %
}
óó 
if
õõ 
(
õõ 
rightClickedY
õõ )
||
õõ* ,
rightClickedR
õõ- :
||
õõ; =
rightClickedG
õõ> K
||
õõL N
rightClickedB
õõO \
)
õõ\ ]
{
öö 
y
÷÷ 
=
÷÷ 
rightClickedY
÷÷  -
;
÷÷- .
r
øø 
=
øø 
rightClickedR
øø  -
;
øø- .
g
ùù 
=
ùù 
rightClickedG
ùù  -
;
ùù- .
b
úú 
=
úú 
rightClickedB
úú  -
;
úú- .
}
ûû 
if
ýý 
(
ýý 
y
ýý 
)
ýý 
SetCurveVisible
ýý .
(
ýý. /
m_Curves
ýý/ 7
.
ýý7 8
master
ýý8 >
)
ýý> ?
;
ýý? @
if
þþ 
(
þþ 
r
þþ 
)
þþ 
SetCurveVisible
þþ .
(
þþ. /
m_Curves
þþ/ 7
.
þþ7 8
red
þþ8 ;
)
þþ; <
;
þþ< =
if
ÿÿ 
(
ÿÿ 
g
ÿÿ 
)
ÿÿ 
SetCurveVisible
ÿÿ .
(
ÿÿ. /
m_Curves
ÿÿ/ 7
.
ÿÿ7 8
green
ÿÿ8 =
)
ÿÿ= >
;
ÿÿ> ?
if
 
(
 
b
 
)
 
SetCurveVisible
 .
(
. /
m_Curves
/ 7
.
7 8
blue
8 <
)
< =
;
= >
m_Curves
  
.
  !
curveY
! '
.
' (
	boolValue
( 1
=
2 3
y
4 5
;
5 6
m_Curves
  
.
  !
curveR
! '
.
' (
	boolValue
( 1
=
2 3
r
4 5
;
5 6
m_Curves
  
.
  !
curveG
! '
.
' (
	boolValue
( 1
=
2 3
g
4 5
;
5 6
m_Curves
  
.
  !
curveB
! '
.
' (
	boolValue
( 1
=
2 3
b
4 5
;
5 6
}
 
else
 
{
 
switch
 
(
  
curveEditingId
  .
)
. /
{
 
case
  
$num
! "
:
" #
SetCurveVisible
$ 3
(
3 4
m_Curves
4 <
.
< =
hueVShue
= E
)
E F
;
F G
break
  %
;
% &
case
  
$num
! "
:
" #
SetCurveVisible
$ 3
(
3 4
m_Curves
4 <
.
< =
hueVSsat
= E
)
E F
;
F G
break
  %
;
% &
case
  
$num
! "
:
" #
SetCurveVisible
$ 3
(
3 4
m_Curves
4 <
.
< =
satVSsat
= E
)
E F
;
F G
break
  %
;
% &
case
  
$num
! "
:
" #
SetCurveVisible
$ 3
(
3 4
m_Curves
4 <
.
< =
lumVSsat
= E
)
E F
;
F G
break
  %
;
% &
}
 
}
 
	GUILayout
 
.
 
FlexibleSpace
 +
(
+ ,
)
, -
;
- .
if
 
(
 
	GUILayout
 !
.
! "
Button
" (
(
( )
$str
) 0
,
0 1
EditorStyles
2 >
.
> ?
toolbarButton
? L
)
L M
)
M N
{
 
switch
 
(
  
curveEditingId
  .
)
. /
{
 
case
  
$num
! "
:
" #
if
  "
(
# $
y
$ %
)
% &
m_Curves
' /
.
/ 0
master
0 6
.
6 7!
animationCurveValue
7 J
=
K L
AnimationCurve
M [
.
[ \
Linear
\ b
(
b c
$num
c e
,
e f
$num
g i
,
i j
$num
k m
,
m n
$num
o q
)
q r
;
r s
if
  "
(
# $
r
$ %
)
% &
m_Curves
' /
.
/ 0
red
0 3
.
3 4!
animationCurveValue
4 G
=
K L
AnimationCurve
M [
.
[ \
Linear
\ b
(
b c
$num
c e
,
e f
$num
g i
,
i j
$num
k m
,
m n
$num
o q
)
q r
;
r s
if
  "
(
# $
g
$ %
)
% &
m_Curves
' /
.
/ 0
green
0 5
.
5 6!
animationCurveValue
6 I
=
K L
AnimationCurve
M [
.
[ \
Linear
\ b
(
b c
$num
c e
,
e f
$num
g i
,
i j
$num
k m
,
m n
$num
o q
)
q r
;
r s
if
    "
(
  # $
b
  $ %
)
  % &
m_Curves
  ' /
.
  / 0
blue
  0 4
.
  4 5!
animationCurveValue
  5 H
=
  K L
AnimationCurve
  M [
.
  [ \
Linear
  \ b
(
  b c
$num
  c e
,
  e f
$num
  g i
,
  i j
$num
  k m
,
  m n
$num
  o q
)
  q r
;
  r s
break
¡¡  %
;
¡¡% &
case
¢¢  
$num
¢¢! "
:
¢¢" #
m_Curves
¢¢$ ,
.
¢¢, -
hueVShue
¢¢- 5
.
¢¢5 6!
animationCurveValue
¢¢6 I
=
¢¢J K
new
¢¢L O
AnimationCurve
¢¢P ^
(
¢¢^ _
)
¢¢_ `
;
¢¢` a
break
££  %
;
££% &
case
¤¤  
$num
¤¤! "
:
¤¤" #
m_Curves
¤¤$ ,
.
¤¤, -
hueVSsat
¤¤- 5
.
¤¤5 6!
animationCurveValue
¤¤6 I
=
¤¤J K
new
¤¤L O
AnimationCurve
¤¤P ^
(
¤¤^ _
)
¤¤_ `
;
¤¤` a
break
¥¥  %
;
¥¥% &
case
¦¦  
$num
¦¦! "
:
¦¦" #
m_Curves
¦¦$ ,
.
¦¦, -
satVSsat
¦¦- 5
.
¦¦5 6!
animationCurveValue
¦¦6 I
=
¦¦J K
new
¦¦L O
AnimationCurve
¦¦P ^
(
¦¦^ _
)
¦¦_ `
;
¦¦` a
break
§§  %
;
§§% &
case
¨¨  
$num
¨¨! "
:
¨¨" #
m_Curves
¨¨$ ,
.
¨¨, -
lumVSsat
¨¨- 5
.
¨¨5 6!
animationCurveValue
¨¨6 I
=
¨¨J K
new
¨¨L O
AnimationCurve
¨¨P ^
(
¨¨^ _
)
¨¨_ `
;
¨¨` a
break
©©  %
;
©©% &
}
ªª 
}
«« 
m_Curves
­­ 
.
­­ !
currentEditingCurve
­­ 0
.
­­0 1
intValue
­­1 9
=
­­: ;
curveEditingId
­­< J
;
­­J K
}
®® 
var
±± 
settings
±± 
=
±± 
m_CurveEditor
±± ,
.
±±, -
settings
±±- 5
;
±±5 6
var
²² 
rect
²² 
=
²² 
GUILayoutUtility
²² +
.
²²+ ,
GetAspectRect
²², 9
(
²²9 :
$num
²²: <
)
²²< =
;
²²= >
var
³³ 
	innerRect
³³ 
=
³³ 
settings
³³  (
.
³³( )
padding
³³) 0
.
³³0 1
Remove
³³1 7
(
³³7 8
rect
³³8 <
)
³³< =
;
³³= >
if
µµ 
(
µµ 
Event
µµ 
.
µµ 
current
µµ !
.
µµ! "
type
µµ" &
==
µµ' )
	EventType
µµ* 3
.
µµ3 4
Repaint
µµ4 ;
)
µµ; <
{
¶¶ 
	EditorGUI
¸¸ 
.
¸¸ 
DrawRect
¸¸ &
(
¸¸& '
rect
¸¸' +
,
¸¸+ ,
new
¸¸- 0
Color
¸¸1 6
(
¸¸6 7
$num
¸¸7 <
,
¸¸< =
$num
¸¸> C
,
¸¸C D
$num
¸¸E J
,
¸¸J K
$num
¸¸L N
)
¸¸N O
)
¸¸O P
;
¸¸P Q
if
ºº 
(
ºº 
s_MaterialSpline
ºº (
==
ºº) +
null
ºº, 0
)
ºº0 1
s_MaterialSpline
»» (
=
»») *
new
»»+ .
Material
»»/ 7
(
»»7 8
Shader
»»8 >
.
»»> ?
Find
»»? C
(
»»C D
$str
»»D h
)
»»h i
)
»»i j
{
»»k l
	hideFlags
»»m v
=
»»w x
	HideFlags»»y 
.»» 
HideAndDontSave»» 
}»» 
;»» 
if
½½ 
(
½½ 
curveEditingId
½½ &
==
½½' )
$num
½½* +
||
½½, .
curveEditingId
½½/ =
==
½½> @
$num
½½A B
)
½½B C#
DrawBackgroundTexture
¾¾ -
(
¾¾- .
	innerRect
¾¾. 7
,
¾¾7 8
$num
¾¾9 :
)
¾¾: ;
;
¾¾; <
else
¿¿ 
if
¿¿ 
(
¿¿ 
curveEditingId
¿¿ +
==
¿¿, .
$num
¿¿/ 0
||
¿¿1 3
curveEditingId
¿¿4 B
==
¿¿C E
$num
¿¿F G
)
¿¿G H#
DrawBackgroundTexture
ÀÀ -
(
ÀÀ- .
	innerRect
ÀÀ. 7
,
ÀÀ7 8
$num
ÀÀ9 :
)
ÀÀ: ;
;
ÀÀ; <
Handles
ÃÃ 
.
ÃÃ 
color
ÃÃ !
=
ÃÃ" #
Color
ÃÃ$ )
.
ÃÃ) *
white
ÃÃ* /
;
ÃÃ/ 0
Handles
ÄÄ 
.
ÄÄ +
DrawSolidRectangleWithOutline
ÄÄ 9
(
ÄÄ9 :
	innerRect
ÄÄ: C
,
ÄÄC D
Color
ÄÄE J
.
ÄÄJ K
clear
ÄÄK P
,
ÄÄP Q
new
ÄÄR U
Color
ÄÄV [
(
ÄÄ[ \
$num
ÄÄ\ `
,
ÄÄ` a
$num
ÄÄb f
,
ÄÄf g
$num
ÄÄh l
,
ÄÄl m
$num
ÄÄn r
)
ÄÄr s
)
ÄÄs t
;
ÄÄt u
Handles
ÇÇ 
.
ÇÇ 
color
ÇÇ !
=
ÇÇ" #
new
ÇÇ$ '
Color
ÇÇ( -
(
ÇÇ- .
$num
ÇÇ. 0
,
ÇÇ0 1
$num
ÇÇ2 4
,
ÇÇ4 5
$num
ÇÇ6 8
,
ÇÇ8 9
$num
ÇÇ: ?
)
ÇÇ? @
;
ÇÇ@ A
int
ÈÈ 
hLines
ÈÈ 
=
ÈÈ  
(
ÈÈ! "
int
ÈÈ" %
)
ÈÈ% &
Mathf
ÈÈ& +
.
ÈÈ+ ,
Sqrt
ÈÈ, 0
(
ÈÈ0 1
	innerRect
ÈÈ1 :
.
ÈÈ: ;
width
ÈÈ; @
)
ÈÈ@ A
;
ÈÈA B
int
ÉÉ 
vLines
ÉÉ 
=
ÉÉ  
(
ÉÉ! "
int
ÉÉ" %
)
ÉÉ% &
(
ÉÉ& '
hLines
ÉÉ' -
/
ÉÉ. /
(
ÉÉ0 1
	innerRect
ÉÉ1 :
.
ÉÉ: ;
width
ÉÉ; @
/
ÉÉA B
	innerRect
ÉÉC L
.
ÉÉL M
height
ÉÉM S
)
ÉÉS T
)
ÉÉT U
;
ÉÉU V
int
ÌÌ 

gridOffset
ÌÌ "
=
ÌÌ# $
Mathf
ÌÌ% *
.
ÌÌ* +

FloorToInt
ÌÌ+ 5
(
ÌÌ5 6
	innerRect
ÌÌ6 ?
.
ÌÌ? @
width
ÌÌ@ E
/
ÌÌF G
hLines
ÌÌH N
)
ÌÌN O
;
ÌÌO P
int
ÍÍ 
gridPadding
ÍÍ #
=
ÍÍ$ %
(
ÍÍ& '
(
ÍÍ' (
int
ÍÍ( +
)
ÍÍ+ ,
(
ÍÍ, -
	innerRect
ÍÍ- 6
.
ÍÍ6 7
width
ÍÍ7 <
)
ÍÍ< =
%
ÍÍ> ?
hLines
ÍÍ@ F
)
ÍÍF G
/
ÍÍH I
$num
ÍÍJ K
;
ÍÍK L
for
ÏÏ 
(
ÏÏ 
int
ÏÏ 
i
ÏÏ 
=
ÏÏ  
$num
ÏÏ! "
;
ÏÏ" #
i
ÏÏ$ %
<
ÏÏ& '
hLines
ÏÏ( .
;
ÏÏ. /
i
ÏÏ0 1
++
ÏÏ1 3
)
ÏÏ3 4
{
ÐÐ 
var
ÑÑ 
offset
ÑÑ "
=
ÑÑ# $
i
ÑÑ% &
*
ÑÑ' (
Vector2
ÑÑ) 0
.
ÑÑ0 1
right
ÑÑ1 6
*
ÑÑ7 8

gridOffset
ÑÑ9 C
;
ÑÑC D
offset
ÒÒ 
.
ÒÒ 
x
ÒÒ  
+=
ÒÒ! #
gridPadding
ÒÒ$ /
;
ÒÒ/ 0
Handles
ÓÓ 
.
ÓÓ  
DrawLine
ÓÓ  (
(
ÓÓ( )
	innerRect
ÓÓ) 2
.
ÓÓ2 3
position
ÓÓ3 ;
+
ÓÓ< =
offset
ÓÓ> D
,
ÓÓD E
new
ÓÓF I
Vector2
ÓÓJ Q
(
ÓÓQ R
	innerRect
ÓÓR [
.
ÓÓ[ \
x
ÓÓ\ ]
,
ÓÓ] ^
	innerRect
ÓÓ_ h
.
ÓÓh i
yMax
ÓÓi m
-
ÓÓn o
$num
ÓÓp q
)
ÓÓq r
+
ÓÓs t
offset
ÓÓu {
)
ÓÓ{ |
;
ÓÓ| }
}
ÔÔ 

gridOffset
×× 
=
××  
Mathf
××! &
.
××& '

FloorToInt
××' 1
(
××1 2
	innerRect
××2 ;
.
××; <
height
××< B
/
××C D
vLines
××E K
)
××K L
;
××L M
gridPadding
ØØ 
=
ØØ  !
(
ØØ" #
(
ØØ# $
int
ØØ$ '
)
ØØ' (
(
ØØ( )
	innerRect
ØØ) 2
.
ØØ2 3
height
ØØ3 9
)
ØØ9 :
%
ØØ; <
vLines
ØØ= C
)
ØØC D
/
ØØE F
$num
ØØG H
;
ØØH I
for
ÚÚ 
(
ÚÚ 
int
ÚÚ 
i
ÚÚ 
=
ÚÚ  
$num
ÚÚ! "
;
ÚÚ" #
i
ÚÚ$ %
<
ÚÚ& '
vLines
ÚÚ( .
;
ÚÚ. /
i
ÚÚ0 1
++
ÚÚ1 3
)
ÚÚ3 4
{
ÛÛ 
var
ÜÜ 
offset
ÜÜ "
=
ÜÜ# $
i
ÜÜ% &
*
ÜÜ' (
Vector2
ÜÜ) 0
.
ÜÜ0 1
up
ÜÜ1 3
*
ÜÜ4 5

gridOffset
ÜÜ6 @
;
ÜÜ@ A
offset
ÝÝ 
.
ÝÝ 
y
ÝÝ  
+=
ÝÝ! #
gridPadding
ÝÝ$ /
;
ÝÝ/ 0
Handles
ÞÞ 
.
ÞÞ  
DrawLine
ÞÞ  (
(
ÞÞ( )
	innerRect
ÞÞ) 2
.
ÞÞ2 3
position
ÞÞ3 ;
+
ÞÞ< =
offset
ÞÞ> D
,
ÞÞD E
new
ÞÞF I
Vector2
ÞÞJ Q
(
ÞÞQ R
	innerRect
ÞÞR [
.
ÞÞ[ \
xMax
ÞÞ\ `
-
ÞÞa b
$num
ÞÞc d
,
ÞÞd e
	innerRect
ÞÞf o
.
ÞÞo p
y
ÞÞp q
)
ÞÞq r
+
ÞÞs t
offset
ÞÞu {
)
ÞÞ{ |
;
ÞÞ| }
}
ßß 
}
àà 
if
ãã 
(
ãã 
m_CurveEditor
ãã !
.
ãã! "
OnGUI
ãã" '
(
ãã' (
rect
ãã( ,
)
ãã, -
)
ãã- .
{
ää 
Repaint
åå 
(
åå 
)
åå 
;
åå 
GUI
ææ 
.
ææ 
changed
ææ 
=
ææ  !
true
ææ" &
;
ææ& '
}
çç 
if
éé 
(
éé 
Event
éé 
.
éé 
current
éé !
.
éé! "
type
éé" &
==
éé' )
	EventType
éé* 3
.
éé3 4
Repaint
éé4 ;
)
éé; <
{
êê 
Handles
ìì 
.
ìì 
color
ìì !
=
ìì" #
Color
ìì$ )
.
ìì) *
black
ìì* /
;
ìì/ 0
Handles
íí 
.
íí 
DrawLine
íí $
(
íí$ %
new
íí% (
Vector2
íí) 0
(
íí0 1
rect
íí1 5
.
íí5 6
x
íí6 7
,
íí7 8
rect
íí9 =
.
íí= >
y
íí> ?
-
íí@ A
$num
ííB E
)
ííE F
,
ííF G
new
ííH K
Vector2
ííL S
(
ííS T
rect
ííT X
.
ííX Y
xMax
ííY ]
,
íí] ^
rect
íí_ c
.
ííc d
y
ííd e
-
ííf g
$num
ííh k
)
íík l
)
ííl m
;
íím n
Handles
îî 
.
îî 
DrawLine
îî $
(
îî$ %
new
îî% (
Vector2
îî) 0
(
îî0 1
rect
îî1 5
.
îî5 6
x
îî6 7
,
îî7 8
rect
îî9 =
.
îî= >
y
îî> ?
-
îî@ A
$num
îîB E
)
îîE F
,
îîF G
new
îîH K
Vector2
îîL S
(
îîS T
rect
îîT X
.
îîX Y
x
îîY Z
,
îîZ [
rect
îî\ `
.
îî` a
yMax
îîa e
)
îîe f
)
îîf g
;
îîg h
Handles
ïï 
.
ïï 
DrawLine
ïï $
(
ïï$ %
new
ïï% (
Vector2
ïï) 0
(
ïï0 1
rect
ïï1 5
.
ïï5 6
x
ïï6 7
,
ïï7 8
rect
ïï9 =
.
ïï= >
yMax
ïï> B
)
ïïB C
,
ïïC D
new
ïïE H
Vector2
ïïI P
(
ïïP Q
rect
ïïQ U
.
ïïU V
xMax
ïïV Z
,
ïïZ [
rect
ïï\ `
.
ïï` a
yMax
ïïa e
)
ïïe f
)
ïïf g
;
ïïg h
Handles
ðð 
.
ðð 
DrawLine
ðð $
(
ðð$ %
new
ðð% (
Vector2
ðð) 0
(
ðð0 1
rect
ðð1 5
.
ðð5 6
xMax
ðð6 :
,
ðð: ;
rect
ðð< @
.
ðð@ A
yMax
ððA E
)
ððE F
,
ððF G
new
ððH K
Vector2
ððL S
(
ððS T
rect
ððT X
.
ððX Y
xMax
ððY ]
,
ðð] ^
rect
ðð_ c
.
ððc d
y
ððd e
-
ððf g
$num
ððh k
)
ððk l
)
ððl m
;
ððm n
var
óó 
	selection
óó !
=
óó" #
m_CurveEditor
óó$ 1
.
óó1 2
GetSelection
óó2 >
(
óó> ?
)
óó? @
;
óó@ A
if
õõ 
(
õõ 
	selection
õõ !
.
õõ! "
curve
õõ" '
!=
õõ( *
null
õõ+ /
&&
õõ0 2
	selection
õõ3 <
.
õõ< =
keyframeIndex
õõ= J
>
õõK L
-
õõM N
$num
õõN O
)
õõO P
{
öö 
var
÷÷ 
key
÷÷ 
=
÷÷  !
	selection
÷÷" +
.
÷÷+ ,
keyframe
÷÷, 4
.
÷÷4 5
Value
÷÷5 :
;
÷÷: ;
var
øø 
infoRect
øø $
=
øø% &
	innerRect
øø' 0
;
øø0 1
infoRect
ùù  
.
ùù  !
x
ùù! "
+=
ùù# %
$num
ùù& (
;
ùù( )
infoRect
úú  
.
úú  !
width
úú! &
=
úú' (
$num
úú) -
;
úú- .
infoRect
ûû  
.
ûû  !
height
ûû! '
=
ûû( )
$num
ûû* -
;
ûû- .
GUI
üü 
.
üü 
Label
üü !
(
üü! "
infoRect
üü" *
,
üü* +
string
üü, 2
.
üü2 3
Format
üü3 9
(
üü9 :
$str
üü: D
,
üüD E
key
üüF I
.
üüI J
time
üüJ N
.
üüN O
ToString
üüO W
(
üüW X
$str
üüX \
)
üü\ ]
,
üü] ^
key
üü_ b
.
üüb c
value
üüc h
.
üüh i
ToString
üüi q
(
üüq r
$str
üür v
)
üüv w
)
üüw x
,
üüx y
FxStylesüüz 
.üü 
preLabelüü 
)üü 
;üü 
}
ýý 
}
þþ 
}
ÿÿ 
EditorGUILayout
 
.
 
Space
 !
(
! "
)
" #
;
# $
	EditorGUI
 
.
 
indentLevel
 !
+=
" $
$num
% &
;
& '
}
 	
void
 #
DrawBackgroundTexture
 "
(
" #
Rect
# '
rect
( ,
,
, -
int
. 1
pass
2 6
)
6 7
{
 	
float
 
scale
 
=
 
EditorGUIUtility
 *
.
* +
pixelsPerPoint
+ 9
;
9 :
var
 
oldRt
 
=
 
RenderTexture
 %
.
% &
active
& ,
;
, -
var
 
rt
 
=
 
RenderTexture
 "
.
" #
GetTemporary
# /
(
/ 0
Mathf
0 5
.
5 6
	CeilToInt
6 ?
(
? @
rect
@ D
.
D E
width
E J
*
K L
scale
M R
)
R S
,
S T
Mathf
U Z
.
Z [
	CeilToInt
[ d
(
d e
rect
e i
.
i j
height
j p
*
q r
scale
s x
)
x y
,
y z
$num
{ |
,
| }"
RenderTextureFormat~ 
. 
ARGB32 
, &
RenderTextureReadWrite °
.° ±
Linear± ·
)· ¸
;¸ ¹
s_MaterialSpline
 
.
 
SetFloat
 %
(
% &
$str
& 6
,
6 7
GUI
8 ;
.
; <
enabled
< C
?
D E
$num
F H
:
I J
$num
K O
)
O P
;
P Q
s_MaterialSpline
 
.
 
SetFloat
 %
(
% &
$str
& 5
,
5 6
EditorGUIUtility
7 G
.
G H
pixelsPerPoint
H V
)
V W
;
W X
Graphics
 
.
 
Blit
 
(
 
null
 
,
 
rt
  "
,
" #
s_MaterialSpline
$ 4
,
4 5
pass
6 :
)
: ;
;
; <
RenderTexture
 
.
 
active
  
=
! "
oldRt
# (
;
( )
GUI
 
.
 
DrawTexture
 
(
 
rect
  
,
  !
rt
" $
)
$ %
;
% &
RenderTexture
 
.
 
ReleaseTemporary
 *
(
* +
rt
+ -
)
- .
;
. /
}
 	
}
 
}   ¶
ÂD:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Models\DefaultPostFxModelEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
public 

class $
DefaultPostFxModelEditor )
:* +%
PostProcessingModelEditor, E
{ 
List 
< 
SerializedProperty 
>  
m_Properties! -
=. /
new0 3
List4 8
<8 9
SerializedProperty9 K
>K L
(L M
)M N
;N O
public		 
override		 
void		 
OnEnable		 %
(		% &
)		& '
{

 	
var 
iter 
= 
m_SettingsProperty )
.) *
Copy* .
(. /
)/ 0
.0 1
GetEnumerator1 >
(> ?
)? @
;@ A
while 
( 
iter 
. 
MoveNext  
(  !
)! "
)" #
m_Properties 
. 
Add  
(  !
(! "
(" #
SerializedProperty# 5
)5 6
iter6 :
.: ;
Current; B
)B C
.C D
CopyD H
(H I
)I J
)J K
;K L
} 	
public 
override 
void 
OnInspectorGUI +
(+ ,
), -
{ 	
foreach 
( 
var 
property !
in" $
m_Properties% 1
)1 2
EditorGUILayout 
.  
PropertyField  -
(- .
property. 6
)6 7
;7 8
} 	
} 
} Ð
ÁD:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Models\DepthOfFieldModelEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[ %
PostProcessingModelEditor 
( 
typeof %
(% &
DepthOfFieldModel& 7
)7 8
)8 9
]9 :
public 

class #
DepthOfFieldModelEditor (
:) *%
PostProcessingModelEditor+ D
{		 
SerializedProperty

 
m_FocusDistance

 *
;

* +
SerializedProperty 

m_Aperture %
;% &
SerializedProperty 
m_FocalLength (
;( )
SerializedProperty 
m_UseCameraFov )
;) *
SerializedProperty 
m_KernelSize '
;' (
public 
override 
void 
OnEnable %
(% &
)& '
{ 	
m_FocusDistance 
= 
FindSetting )
() *
(* +
Settings+ 3
x4 5
)5 6
=>7 9
x: ;
.; <
focusDistance< I
)I J
;J K

m_Aperture 
= 
FindSetting $
($ %
(% &
Settings& .
x/ 0
)0 1
=>2 4
x5 6
.6 7
aperture7 ?
)? @
;@ A
m_FocalLength 
= 
FindSetting '
(' (
(( )
Settings) 1
x2 3
)3 4
=>5 7
x8 9
.9 :
focalLength: E
)E F
;F G
m_UseCameraFov 
= 
FindSetting (
(( )
() *
Settings* 2
x3 4
)4 5
=>6 8
x9 :
.: ;
useCameraFov; G
)G H
;H I
m_KernelSize 
= 
FindSetting &
(& '
(' (
Settings( 0
x1 2
)2 3
=>4 6
x7 8
.8 9

kernelSize9 C
)C D
;D E
} 	
public 
override 
void 
OnInspectorGUI +
(+ ,
), -
{ 	
EditorGUILayout 
. 
PropertyField )
() *
m_FocusDistance* 9
)9 :
;: ;
EditorGUILayout 
. 
PropertyField )
() *

m_Aperture* 4
,4 5
EditorGUIHelper6 E
.E F

GetContentF P
(P Q
$strQ d
)d e
)e f
;f g
EditorGUILayout 
. 
PropertyField )
() *
m_UseCameraFov* 8
,8 9
EditorGUIHelper: I
.I J

GetContentJ T
(T U
$strU e
)e f
)f g
;g h
if 
( 
! 
m_UseCameraFov 
.  
	boolValue  )
)) *
EditorGUILayout   
.    
PropertyField    -
(  - .
m_FocalLength  . ;
,  ; <
EditorGUIHelper  = L
.  L M

GetContent  M W
(  W X
$str  X k
)  k l
)  l m
;  m n
EditorGUILayout"" 
."" 
PropertyField"" )
("") *
m_KernelSize""* 6
)""6 7
;""7 8
}## 	
}$$ 
}%% 
¾D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Models\DitheringModelEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[ %
PostProcessingModelEditor 
( 
typeof %
(% &
DitheringModel& 4
)4 5
)5 6
]6 7
public 

class  
DitheringModelEditor %
:& '%
PostProcessingModelEditor( A
{ 
public 
override 
void 
OnInspectorGUI +
(+ ,
), -
{		 	
if

 
(

 
profile

 
.

 
grain

 
.

 
enabled

 %
&&

& (
target

) /
.

/ 0
enabled

0 7
)

7 8
EditorGUILayout 
.  
HelpBox  '
(' (
$str( _
,_ `
MessageTypea l
.l m
Warningm t
)t u
;u v
else 
EditorGUILayout 
.  
HelpBox  '
(' (
$str( @
,@ A
MessageTypeB M
.M N
InfoN R
)R S
;S T
} 	
} 
} öK
ÂD:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Models\EyeAdaptationModelEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[ %
PostProcessingModelEditor 
( 
typeof %
(% &
EyeAdaptationModel& 8
)8 9
)9 :
]: ;
public		 

class		 $
EyeAdaptationModelEditor		 )
:		* +%
PostProcessingModelEditor		, E
{

 
SerializedProperty 
m_LowPercent '
;' (
SerializedProperty 
m_HighPercent (
;( )
SerializedProperty 
m_MinLuminance )
;) *
SerializedProperty 
m_MaxLuminance )
;) *
SerializedProperty 

m_KeyValue %
;% &
SerializedProperty 
m_DynamicKeyValue ,
;, -
SerializedProperty 
m_AdaptationType +
;+ ,
SerializedProperty 
	m_SpeedUp $
;$ %
SerializedProperty 
m_SpeedDown &
;& '
SerializedProperty 
m_LogMin #
;# $
SerializedProperty 
m_LogMax #
;# $
public 
override 
void 
OnEnable %
(% &
)& '
{ 	
m_LowPercent 
= 
FindSetting &
(& '
(' (
Settings( 0
x1 2
)2 3
=>4 6
x7 8
.8 9

lowPercent9 C
)C D
;D E
m_HighPercent 
= 
FindSetting '
(' (
(( )
Settings) 1
x2 3
)3 4
=>5 7
x8 9
.9 :
highPercent: E
)E F
;F G
m_MinLuminance 
= 
FindSetting (
(( )
() *
Settings* 2
x3 4
)4 5
=>6 8
x9 :
.: ;
minLuminance; G
)G H
;H I
m_MaxLuminance 
= 
FindSetting (
(( )
() *
Settings* 2
x3 4
)4 5
=>6 8
x9 :
.: ;
maxLuminance; G
)G H
;H I

m_KeyValue 
= 
FindSetting $
($ %
(% &
Settings& .
x/ 0
)0 1
=>2 4
x5 6
.6 7
keyValue7 ?
)? @
;@ A
m_DynamicKeyValue 
= 
FindSetting  +
(+ ,
(, -
Settings- 5
x6 7
)7 8
=>9 ;
x< =
.= >
dynamicKeyValue> M
)M N
;N O
m_AdaptationType 
= 
FindSetting *
(* +
(+ ,
Settings, 4
x5 6
)6 7
=>8 :
x; <
.< =
adaptationType= K
)K L
;L M
	m_SpeedUp   
=   
FindSetting   #
(  # $
(  $ %
Settings  % -
x  . /
)  / 0
=>  1 3
x  4 5
.  5 6
speedUp  6 =
)  = >
;  > ?
m_SpeedDown!! 
=!! 
FindSetting!! %
(!!% &
(!!& '
Settings!!' /
x!!0 1
)!!1 2
=>!!3 5
x!!6 7
.!!7 8
	speedDown!!8 A
)!!A B
;!!B C
m_LogMin"" 
="" 
FindSetting"" "
(""" #
(""# $
Settings""$ ,
x""- .
)"". /
=>""0 2
x""3 4
.""4 5
logMin""5 ;
)""; <
;""< =
m_LogMax## 
=## 
FindSetting## "
(##" #
(### $
Settings##$ ,
x##- .
)##. /
=>##0 2
x##3 4
.##4 5
logMax##5 ;
)##; <
;##< =
}$$ 	
public&& 
override&& 
void&& 
OnInspectorGUI&& +
(&&+ ,
)&&, -
{'' 	
if(( 
((( 
!(( 
GraphicsUtils(( 
.(( 
supportsDX11(( +
)((+ ,
EditorGUILayout)) 
.))  
HelpBox))  '
())' (
$str	))( 
,
)) 
MessageType
))  
.
))  ¡
Warning
))¡ ¨
)
))¨ ©
;
))© ª
EditorGUILayout++ 
.++ 

LabelField++ &
(++& '
$str++' 9
,++9 :
EditorStyles++; G
.++G H
	boldLabel++H Q
)++Q R
;++R S
	EditorGUI,, 
.,, 
indentLevel,, !
++,,! #
;,,# $
EditorGUILayout-- 
.-- 
PropertyField-- )
(--) *
m_LogMin--* 2
,--2 3
EditorGUIHelper--4 C
.--C D

GetContent--D N
(--N O
$str--O ]
)--] ^
)--^ _
;--_ `
EditorGUILayout.. 
... 
PropertyField.. )
(..) *
m_LogMax..* 2
,..2 3
EditorGUIHelper..4 C
...C D

GetContent..D N
(..N O
$str..O ]
)..] ^
)..^ _
;.._ `
	EditorGUI// 
.// 
indentLevel// !
--//! #
;//# $
EditorGUILayout00 
.00 
Space00 !
(00! "
)00" #
;00# $
EditorGUILayout22 
.22 

LabelField22 &
(22& '
$str22' 6
,226 7
EditorStyles228 D
.22D E
	boldLabel22E N
)22N O
;22O P
	EditorGUI33 
.33 
indentLevel33 !
++33! #
;33# $
float44 
low44 
=44 
m_LowPercent44 $
.44$ %

floatValue44% /
;44/ 0
float55 
high55 
=55 
m_HighPercent55 &
.55& '

floatValue55' 1
;551 2
EditorGUILayout77 
.77 
MinMaxSlider77 (
(77( )
EditorGUIHelper77) 8
.778 9

GetContent779 C
(77C D
$str	77D ¯
)
77¯ °
,
77° ±
ref
77² µ
low
77¶ ¹
,
77¹ º
ref
77» ¾
high
77¿ Ã
,
77Ã Ä
$num
77Å Ç
,
77Ç È
$num
77É Ì
)
77Ì Í
;
77Í Î
m_LowPercent99 
.99 

floatValue99 #
=99$ %
low99& )
;99) *
m_HighPercent:: 
.:: 

floatValue:: $
=::% &
high::' +
;::+ ,
EditorGUILayout<< 
.<< 
PropertyField<< )
(<<) *
m_MinLuminance<<* 8
,<<8 9
EditorGUIHelper<<: I
.<<I J

GetContent<<J T
(<<T U
$str<<U c
)<<c d
)<<d e
;<<e f
EditorGUILayout== 
.== 
PropertyField== )
(==) *
m_MaxLuminance==* 8
,==8 9
EditorGUIHelper==: I
.==I J

GetContent==J T
(==T U
$str==U c
)==c d
)==d e
;==e f
EditorGUILayout>> 
.>> 
PropertyField>> )
(>>) *
m_DynamicKeyValue>>* ;
)>>; <
;>>< =
if@@ 
(@@ 
!@@ 
m_DynamicKeyValue@@ "
.@@" #
	boolValue@@# ,
)@@, -
EditorGUILayoutAA 
.AA  
PropertyFieldAA  -
(AA- .

m_KeyValueAA. 8
)AA8 9
;AA9 :
	EditorGUICC 
.CC 
indentLevelCC !
--CC! #
;CC# $
EditorGUILayoutDD 
.DD 
SpaceDD !
(DD! "
)DD" #
;DD# $
EditorGUILayoutFF 
.FF 

LabelFieldFF &
(FF& '
$strFF' 3
,FF3 4
EditorStylesFF5 A
.FFA B
	boldLabelFFB K
)FFK L
;FFL M
	EditorGUIGG 
.GG 
indentLevelGG !
++GG! #
;GG# $
EditorGUILayoutII 
.II 
PropertyFieldII )
(II) *
m_AdaptationTypeII* :
,II: ;
EditorGUIHelperII< K
.IIK L

GetContentIIL V
(IIV W
$strIIW ]
)II] ^
)II^ _
;II_ `
ifKK 
(KK 
m_AdaptationTypeKK  
.KK  !
intValueKK! )
==KK* ,
(KK- .
intKK. 1
)KK1 2
EyeAdaptationModelKK2 D
.KKD E
EyeAdaptationTypeKKE V
.KKV W
ProgressiveKKW b
)KKb c
{LL 
	EditorGUIMM 
.MM 
indentLevelMM %
++MM% '
;MM' (
EditorGUILayoutNN 
.NN  
PropertyFieldNN  -
(NN- .
	m_SpeedUpNN. 7
)NN7 8
;NN8 9
EditorGUILayoutOO 
.OO  
PropertyFieldOO  -
(OO- .
m_SpeedDownOO. 9
)OO9 :
;OO: ;
	EditorGUIPP 
.PP 
indentLevelPP %
--PP% '
;PP' (
}QQ 
	EditorGUISS 
.SS 
indentLevelSS !
--SS! #
;SS# $
}TT 	
}UU 
}VV ¡
¸D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Models\FogModelEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[ %
PostProcessingModelEditor 
( 
typeof %
(% &
FogModel& .
). /
)/ 0
]0 1
public 

class 
FogModelEditor 
:  !%
PostProcessingModelEditor" ;
{		 
SerializedProperty

 
m_ExcludeSkybox

 *
;

* +
public 
override 
void 
OnEnable %
(% &
)& '
{ 	
m_ExcludeSkybox 
= 
FindSetting )
() *
(* +
Settings+ 3
x4 5
)5 6
=>7 9
x: ;
.; <
excludeSkybox< I
)I J
;J K
} 	
public 
override 
void 
OnInspectorGUI +
(+ ,
), -
{ 	
EditorGUILayout 
. 
HelpBox #
(# $
$str	$ ä
,
ä å
MessageType
æ ñ
.
ñ ò
Info
ò ö
)
ö ÷
;
÷ ø
EditorGUILayout 
. 
PropertyField )
() *
m_ExcludeSkybox* 9
)9 :
;: ;
	EditorGUI 
. 
indentLevel !
--! #
;# $
} 	
} 
} Ø
ºD:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Models\GrainModelEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[ %
PostProcessingModelEditor 
( 
typeof %
(% &

GrainModel& 0
)0 1
)1 2
]2 3
public 

class 
GrainModelEditor !
:" #%
PostProcessingModelEditor$ =
{		 
SerializedProperty

 
	m_Colored

 $
;

$ %
SerializedProperty 
m_Intensity &
;& '
SerializedProperty 
m_Size !
;! "
SerializedProperty #
m_LuminanceContribution 2
;2 3
public 
override 
void 
OnEnable %
(% &
)& '
{ 	
	m_Colored 
= 
FindSetting #
(# $
($ %
Settings% -
x. /
)/ 0
=>1 3
x4 5
.5 6
colored6 =
)= >
;> ?
m_Intensity 
= 
FindSetting %
(% &
(& '
Settings' /
x0 1
)1 2
=>3 5
x6 7
.7 8
	intensity8 A
)A B
;B C
m_Size 
= 
FindSetting  
(  !
(! "
Settings" *
x+ ,
), -
=>. 0
x1 2
.2 3
size3 7
)7 8
;8 9#
m_LuminanceContribution #
=$ %
FindSetting& 1
(1 2
(2 3
Settings3 ;
x< =
)= >
=>? A
xB C
.C D!
luminanceContributionD Y
)Y Z
;Z [
} 	
public 
override 
void 
OnInspectorGUI +
(+ ,
), -
{ 	
EditorGUILayout 
. 
PropertyField )
() *
m_Intensity* 5
)5 6
;6 7
EditorGUILayout 
. 
PropertyField )
() *#
m_LuminanceContribution* A
)A B
;B C
EditorGUILayout 
. 
PropertyField )
() *
m_Size* 0
)0 1
;1 2
EditorGUILayout 
. 
PropertyField )
() *
	m_Colored* 3
)3 4
;4 5
} 	
} 
} 
¿D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Models\MotionBlurModelEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[ %
PostProcessingModelEditor 
( 
typeof %
(% &
MotionBlurModel& 5
)5 6
)6 7
]7 8
public		 

class		 !
MotionBlurModelEditor		 &
:		' (%
PostProcessingModelEditor		) B
{

 
SerializedProperty 
m_ShutterAngle )
;) *
SerializedProperty 
m_SampleCount (
;( )
SerializedProperty 
m_FrameBlending *
;* +
GraphDrawer 
m_GraphDrawer !
;! "
class 
GraphDrawer 
{ 	
const 
float 
k_Height  
=! "
$num# &
;& '
Texture 
m_BlendingIcon "
;" #
GUIStyle 
m_LowerCenterStyle '
;' (
GUIStyle 
m_MiddleCenterStyle (
;( )
Color 
m_ColorDark 
; 
Color 
m_ColorGray 
; 
Vector3 
[ 
] 
m_RectVertices $
=% &
new' *
Vector3+ 2
[2 3
$num3 4
]4 5
;5 6
public 
GraphDrawer 
( 
)  
{   
m_BlendingIcon!! 
=!!  
EditorResources!!! 0
.!!0 1
Load!!1 5
<!!5 6
Texture!!6 =
>!!= >
(!!> ?
$str!!? Z
)!!Z [
;!![ \
m_LowerCenterStyle## "
=### $
new##% (
GUIStyle##) 1
(##1 2
EditorStyles##2 >
.##> ?
	miniLabel##? H
)##H I
{##J K
	alignment##L U
=##V W

TextAnchor##X b
.##b c
LowerCenter##c n
}##o p
;##p q
m_MiddleCenterStyle$$ #
=$$$ %
new$$& )
GUIStyle$$* 2
($$2 3
EditorStyles$$3 ?
.$$? @
	miniLabel$$@ I
)$$I J
{$$K L
	alignment$$M V
=$$W X

TextAnchor$$Y c
.$$c d
MiddleCenter$$d p
}$$q r
;$$r s
if&& 
(&& 
EditorGUIUtility&& $
.&&$ %
	isProSkin&&% .
)&&. /
{'' 
m_ColorDark(( 
=((  !
new((" %
Color((& +
(((+ ,
$num((, 1
,((1 2
$num((3 8
,((8 9
$num((: ?
)((? @
;((@ A
m_ColorGray)) 
=))  !
new))" %
Color))& +
())+ ,
$num)), 1
,))1 2
$num))3 8
,))8 9
$num)): ?
)))? @
;))@ A
}** 
else++ 
{,, 
m_ColorDark-- 
=--  !
new--" %
Color--& +
(--+ ,
$num--, 1
,--1 2
$num--3 8
,--8 9
$num--: ?
)--? @
;--@ A
m_ColorGray.. 
=..  !
new.." %
Color..& +
(..+ ,
$num.., 1
,..1 2
$num..3 8
,..8 9
$num..: ?
)..? @
;..@ A
}// 
}00 
public22 
void22 
DrawShutterGraph22 (
(22( )
float22) .
angle22/ 4
)224 5
{33 
var44 
center44 
=44 
GUILayoutUtility44 -
.44- .
GetRect44. 5
(445 6
$num446 9
,449 :
k_Height44; C
)44C D
.44D E
center44E K
;44K L
var77 
zeroWhenOff77 
=77  !
Mathf77" '
.77' (
Min77( +
(77+ ,
$num77, .
,77. /
angle770 5
*776 7
$num778 <
)77< =
;77= >
var88 
zeroWhenFull88  
=88! "
Mathf88# (
.88( )
Min88) ,
(88, -
$num88- /
,88/ 0
(881 2
$num882 6
-887 8
angle889 >
)88> ?
*88@ A
$num88B G
)88G H
;88H I
var;; 

discCenter;; 
=;;  
center;;! '
-;;( )
new;;* -
Vector2;;. 5
(;;5 6
k_Height;;6 >
*;;? @
$num;;A E
,;;E F
$num;;G I
);;I J
;;;J K
DrawDisc== 
(== 

discCenter== #
,==# $
k_Height==% -
*==. /
Mathf==0 5
.==5 6
Lerp==6 :
(==: ;
$num==; ?
,==? @
$num==A F
,==F G
zeroWhenFull==H T
)==T U
,==U V
m_ColorGray==W b
)==b c
;==c d
DrawDisc?? 
(?? 

discCenter?? #
,??# $
k_Height??% -
*??. /
$num??0 5
*??6 7
zeroWhenFull??8 D
,??D E
m_ColorDark??F Q
)??Q R
;??R S
DrawArcAA 
(AA 

discCenterAA "
,AA" #
k_HeightAA$ ,
*AA- .
$numAA/ 3
,AA3 4
$numAA5 9
-AA: ;
angleAA< A
,AAA B
m_ColorDarkAAC N
)AAN O
;AAO P
DrawDiscCC 
(CC 

discCenterCC #
,CC# $
zeroWhenOffCC% 0
,CC0 1
m_ColorGrayCC2 =
)CC= >
;CC> ?
varFF 
	labelSizeFF 
=FF 
newFF  #
Vector2FF$ +
(FF+ ,
k_HeightFF, 4
,FF4 5
k_HeightFF6 >
)FF> ?
;FF? @
varGG 
labelOriginGG 
=GG  !

discCenterGG" ,
-GG- .
	labelSizeGG/ 8
*GG9 :
$numGG; ?
;GG? @
varHH 
	labelRectHH 
=HH 
newHH  #
RectHH$ (
(HH( )
labelOriginHH) 4
,HH4 5
	labelSizeHH6 ?
)HH? @
;HH@ A
ifJJ 
(JJ 
MathfJJ 
.JJ 
ApproximatelyJJ '
(JJ' (
angleJJ( -
,JJ- .
$numJJ/ 1
)JJ1 2
)JJ2 3
GUIKK 
.KK 
LabelKK 
(KK 
	labelRectKK '
,KK' (
$strKK) .
,KK. /
m_MiddleCenterStyleKK0 C
)KKC D
;KKD E
elseLL 
ifLL 
(LL 
MathfLL 
.LL 
ApproximatelyLL ,
(LL, -
angleLL- 2
,LL2 3
$numLL4 8
)LL8 9
)LL9 :
GUIMM 
.MM 
LabelMM 
(MM 
	labelRectMM '
,MM' (
$strMM) /
,MM/ 0
m_MiddleCenterStyleMM1 D
)MMD E
;MME F
varPP 
outerBarSizePP  
=PP! "
newPP# &
Vector2PP' .
(PP. /
$numPP/ 4
,PP4 5
$numPP6 :
)PP: ;
*PP< =
k_HeightPP> F
;PPF G
varQQ 
innerBarSizeQQ  
=QQ! "
outerBarSizeQQ# /
;QQ/ 0
innerBarSizeRR 
.RR 
xRR 
*=RR !
angleRR" '
/RR( )
$numRR* .
;RR. /
varTT 
	barCenterTT 
=TT 
centerTT  &
+TT' (
newTT) ,
Vector2TT- 4
(TT4 5
k_HeightTT5 =
*TT> ?
$numTT@ D
,TTD E
$numTTF H
)TTH I
;TTI J
varUU 
	barOriginUU 
=UU 
	barCenterUU  )
-UU* +
outerBarSizeUU, 8
*UU9 :
$numUU; ?
;UU? @
DrawRectWW 
(WW 
	barOriginWW "
,WW" #
outerBarSizeWW$ 0
,WW0 1
m_ColorDarkWW2 =
)WW= >
;WW> ?
DrawRectXX 
(XX 
	barOriginXX "
,XX" #
innerBarSizeXX$ 0
,XX0 1
m_ColorGrayXX2 =
)XX= >
;XX> ?
varZZ 
barTextZZ 
=ZZ 
$strZZ 0
+ZZ1 2
(ZZ3 4
angleZZ4 9
/ZZ: ;
$numZZ< @
)ZZ@ A
.ZZA B
ToStringZZB J
(ZZJ K
$strZZK N
)ZZN O
+ZZP Q
$strZZR [
;ZZ[ \
GUI[[ 
.[[ 
Label[[ 
([[ 
new[[ 
Rect[[ "
([[" #
	barOrigin[[# ,
,[[, -
outerBarSize[[. :
)[[: ;
,[[; <
barText[[= D
,[[D E
m_MiddleCenterStyle[[F Y
)[[Y Z
;[[Z [
}\\ 
public^^ 
void^^ 
DrawBlendingGraph^^ )
(^^) *
float^^* /
strength^^0 8
)^^8 9
{__ 
var`` 
center`` 
=`` 
GUILayoutUtility`` -
.``- .
GetRect``. 5
(``5 6
$num``6 9
,``9 :
k_Height``; C
)``C D
.``D E
center``E K
;``K L
varbb 
iconSizebb 
=bb 
newbb "
Vector2bb# *
(bb* +
k_Heightbb+ 3
,bb3 4
k_Heightbb5 =
)bb= >
;bb> ?
varcc 

iconStridecc 
=cc  
newcc! $
Vector2cc% ,
(cc, -
k_Heightcc- 5
*cc6 7
$numcc8 <
,cc< =
$numcc> @
)cc@ A
;ccA B
vardd 

iconOrigindd 
=dd  
centerdd! '
-dd( )
iconSizedd* 2
*dd3 4
$numdd5 9
-dd: ;

iconStridedd< F
*ddG H
$numddI K
;ddK L
forff 
(ff 
varff 
iff 
=ff 
$numff 
;ff 
iff  !
<ff" #
$numff$ %
;ff% &
iff' (
++ff( *
)ff* +
{gg 
varhh 
weighthh 
=hh  
BlendingWeighthh! /
(hh/ 0
strengthhh0 8
,hh8 9
ihh: ;
/hh< =
$numhh> A
)hhA B
;hhB C
varii 
rectii 
=ii 
newii "
Rectii# '
(ii' (

iconOriginii( 2
+ii3 4

iconStrideii5 ?
*ii@ A
iiiB C
,iiC D
iconSizeiiE M
)iiM N
;iiN O
varkk 
colorkk 
=kk 
m_ColorGraykk  +
;kk+ ,
colorll 
.ll 
all 
=ll 
weightll $
;ll$ %
GUInn 
.nn 
colornn 
=nn 
colornn  %
;nn% &
GUIoo 
.oo 
Labeloo 
(oo 
rectoo "
,oo" #
m_BlendingIconoo$ 2
)oo2 3
;oo3 4
GUIqq 
.qq 
colorqq 
=qq 
Colorqq  %
.qq% &
whiteqq& +
;qq+ ,
GUIrr 
.rr 
Labelrr 
(rr 
rectrr "
,rr" #
(rr$ %
weightrr% +
*rr, -
$numrr. 1
)rr1 2
.rr2 3
ToStringrr3 ;
(rr; <
$strrr< ?
)rr? @
+rrA B
$strrrC F
,rrF G
m_LowerCenterStylerrH Z
)rrZ [
;rr[ \
}ss 
}uu 
floatxx 
BlendingWeightxx  
(xx  !
floatxx! &
strengthxx' /
,xx/ 0
floatxx1 6
timexx7 ;
)xx; <
{yy 
ifzz 
(zz 
strengthzz 
>zz 
$numzz !
||zz" $
Mathfzz% *
.zz* +
Approximatelyzz+ 8
(zz8 9
timezz9 =
,zz= >
$numzz? A
)zzA B
)zzB C
return{{ 
Mathf{{  
.{{  !
Exp{{! $
({{$ %
-{{% &
time{{& *
*{{+ ,
Mathf{{- 2
.{{2 3
Lerp{{3 7
({{7 8
$num{{8 ;
,{{; <
$num{{= @
,{{@ A
strength{{B J
){{J K
){{K L
;{{L M
return}} 
$num}} 
;}} 
}~~ 
void
 
DrawDisc
 
(
 
Vector2
 !
center
" (
,
( )
float
* /
radius
0 6
,
6 7
Color
8 =
fill
> B
)
B C
{
 
Handles
 
.
 
color
 
=
 
fill
  $
;
$ %
Handles
 
.
 
DrawSolidDisc
 %
(
% &
center
& ,
,
, -
Vector3
. 5
.
5 6
forward
6 =
,
= >
radius
? E
)
E F
;
F G
}
 
void
 
DrawArc
 
(
 
Vector2
  
center
! '
,
' (
float
) .
radius
/ 5
,
5 6
float
7 <
angle
= B
,
B C
Color
D I
fill
J N
)
N O
{
 
var
 
start
 
=
 
new
 
Vector2
  '
(
' (
-
 
Mathf
 
.
 
Cos
 "
(
" #
Mathf
# (
.
( )
Deg2Rad
) 0
*
1 2
angle
3 8
/
9 :
$num
; =
)
= >
,
> ?
Mathf
 
.
 
Sin
 !
(
! "
Mathf
" '
.
' (
Deg2Rad
( /
*
0 1
angle
2 7
/
8 9
$num
: <
)
< =
)
 
;
 
Handles
 
.
 
color
 
=
 
fill
  $
;
$ %
Handles
 
.
 
DrawSolidArc
 $
(
$ %
center
% +
,
+ ,
Vector3
- 4
.
4 5
forward
5 <
,
< =
start
> C
,
C D
angle
E J
,
J K
radius
L R
)
R S
;
S T
}
 
void
 
DrawRect
 
(
 
Vector2
 !
origin
" (
,
( )
Vector2
* 1
size
2 6
,
6 7
Color
8 =
color
> C
)
C D
{
 
var
 
p0
 
=
 
origin
 
;
  
var
 
p1
 
=
 
origin
 
+
  !
size
" &
;
& '
m_RectVertices
 
[
 
$num
  
]
  !
=
" #
p0
$ &
;
& '
m_RectVertices
 
[
 
$num
  
]
  !
=
" #
new
$ '
Vector2
( /
(
/ 0
p1
0 2
.
2 3
x
3 4
,
4 5
p0
6 8
.
8 9
y
9 :
)
: ;
;
; <
m_RectVertices
 
[
 
$num
  
]
  !
=
" #
p1
$ &
;
& '
m_RectVertices
 
[
 
$num
  
]
  !
=
" #
new
$ '
Vector2
( /
(
/ 0
p0
0 2
.
2 3
x
3 4
,
4 5
p1
6 8
.
8 9
y
9 :
)
: ;
;
; <
Handles
 
.
 
color
 
=
 
Color
  %
.
% &
white
& +
;
+ ,
Handles
 
.
 +
DrawSolidRectangleWithOutline
 5
(
5 6
m_RectVertices
6 D
,
D E
color
F K
,
K L
Color
M R
.
R S
clear
S X
)
X Y
;
Y Z
}
   
}
¡¡ 	
public
££ 
override
££ 
void
££ 
OnEnable
££ %
(
££% &
)
££& '
{
¤¤ 	
m_ShutterAngle
¥¥ 
=
¥¥ 
FindSetting
¥¥ (
(
¥¥( )
(
¥¥) *
Settings
¥¥* 2
x
¥¥3 4
)
¥¥4 5
=>
¥¥6 8
x
¥¥9 :
.
¥¥: ;
shutterAngle
¥¥; G
)
¥¥G H
;
¥¥H I
m_SampleCount
¦¦ 
=
¦¦ 
FindSetting
¦¦ '
(
¦¦' (
(
¦¦( )
Settings
¦¦) 1
x
¦¦2 3
)
¦¦3 4
=>
¦¦5 7
x
¦¦8 9
.
¦¦9 :
sampleCount
¦¦: E
)
¦¦E F
;
¦¦F G
m_FrameBlending
§§ 
=
§§ 
FindSetting
§§ )
(
§§) *
(
§§* +
Settings
§§+ 3
x
§§4 5
)
§§5 6
=>
§§7 9
x
§§: ;
.
§§; <
frameBlending
§§< I
)
§§I J
;
§§J K
}
¨¨ 	
public
ªª 
override
ªª 
void
ªª 
OnInspectorGUI
ªª +
(
ªª+ ,
)
ªª, -
{
«« 	
if
¬¬ 
(
¬¬ 
m_GraphDrawer
¬¬ 
==
¬¬  
null
¬¬! %
)
¬¬% &
m_GraphDrawer
­­ 
=
­­ 
new
­­  #
GraphDrawer
­­$ /
(
­­/ 0
)
­­0 1
;
­­1 2
EditorGUILayout
¯¯ 
.
¯¯ 

LabelField
¯¯ &
(
¯¯& '
$str
¯¯' A
,
¯¯A B
EditorStyles
¯¯C O
.
¯¯O P
	boldLabel
¯¯P Y
)
¯¯Y Z
;
¯¯Z [
	EditorGUI
°° 
.
°° 
indentLevel
°° !
++
°°! #
;
°°# $
m_GraphDrawer
±± 
.
±± 
DrawShutterGraph
±± *
(
±±* +
m_ShutterAngle
±±+ 9
.
±±9 :

floatValue
±±: D
)
±±D E
;
±±E F
EditorGUILayout
²² 
.
²² 
PropertyField
²² )
(
²²) *
m_ShutterAngle
²²* 8
)
²²8 9
;
²²9 :
EditorGUILayout
³³ 
.
³³ 
PropertyField
³³ )
(
³³) *
m_SampleCount
³³* 7
)
³³7 8
;
³³8 9
	EditorGUI
´´ 
.
´´ 
indentLevel
´´ !
--
´´! #
;
´´# $
EditorGUILayout
µµ 
.
µµ 
Space
µµ !
(
µµ! "
)
µµ" #
;
µµ# $
EditorGUILayout
·· 
.
·· 

LabelField
·· &
(
··& '
$str
··' @
,
··@ A
EditorStyles
··B N
.
··N O
	boldLabel
··O X
)
··X Y
;
··Y Z
	EditorGUI
¸¸ 
.
¸¸ 
indentLevel
¸¸ !
++
¸¸! #
;
¸¸# $
float
ºº 
fbValue
ºº 
=
ºº 
m_FrameBlending
ºº +
.
ºº+ ,

floatValue
ºº, 6
;
ºº6 7
m_GraphDrawer
»» 
.
»» 
DrawBlendingGraph
»» +
(
»»+ ,
fbValue
»», 3
)
»»3 4
;
»»4 5
EditorGUILayout
¼¼ 
.
¼¼ 
PropertyField
¼¼ )
(
¼¼) *
m_FrameBlending
¼¼* 9
)
¼¼9 :
;
¼¼: ;
if
¾¾ 
(
¾¾ 
fbValue
¾¾ 
>
¾¾ 
$num
¾¾ 
)
¾¾ 
EditorGUILayout
¿¿ 
.
¿¿  
HelpBox
¿¿  '
(
¿¿' (
$str
¿¿( 
,¿¿ 
MessageType¿¿ 
.¿¿ 
Info¿¿ 
)¿¿ 
;¿¿ 
	EditorGUI
ÂÂ 
.
ÂÂ 
indentLevel
ÂÂ !
--
ÂÂ! #
;
ÂÂ# $
}
ÃÃ 	
}
ÄÄ 
}ÅÅ ¬T
ÊD:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Models\ScreenSpaceReflectionModelEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[ %
PostProcessingModelEditor 
( 
typeof %
(% &&
ScreenSpaceReflectionModel& @
)@ A
)A B
]B C
public		 

class		 ,
 ScreenSpaceReflectionModelEditor		 1
:		2 3%
PostProcessingModelEditor		4 M
{

 
struct 
IntensitySettings  
{ 	
public 
SerializedProperty % 
reflectionMultiplier& :
;: ;
public 
SerializedProperty %
fadeDistance& 2
;2 3
public 
SerializedProperty %
fresnelFade& 1
;1 2
public 
SerializedProperty %
fresnelFadePower& 6
;6 7
} 	
struct 
ReflectionSettings !
{ 	
public 
SerializedProperty %
	blendType& /
;/ 0
public 
SerializedProperty %
reflectionQuality& 7
;7 8
public 
SerializedProperty %
maxDistance& 1
;1 2
public 
SerializedProperty %
iterationCount& 4
;4 5
public 
SerializedProperty %
stepSize& .
;. /
public 
SerializedProperty %
widthModifier& 3
;3 4
public 
SerializedProperty %
reflectionBlur& 4
;4 5
public 
SerializedProperty %
reflectBackfaces& 6
;6 7
} 	
struct 
ScreenEdgeMask 
{   	
public!! 
SerializedProperty!! %
	intensity!!& /
;!!/ 0
}"" 	
IntensitySettings$$ 
m_Intensity$$ %
;$$% &
ReflectionSettings%% 
m_Reflection%% '
;%%' (
ScreenEdgeMask&& 
m_ScreenEdgeMask&& '
;&&' (
public(( 
override(( 
void(( 
OnEnable(( %
(((% &
)((& '
{)) 	
m_Intensity** 
=** 
new** 
IntensitySettings** /
{++  
reflectionMultiplier,, $
=,,% &
FindSetting,,' 2
(,,2 3
(,,3 4
Settings,,4 <
x,,= >
),,> ?
=>,,@ B
x,,C D
.,,D E
	intensity,,E N
.,,N O 
reflectionMultiplier,,O c
),,c d
,,,d e
fadeDistance-- 
=-- 
FindSetting-- *
(--* +
(--+ ,
Settings--, 4
x--5 6
)--6 7
=>--8 :
x--; <
.--< =
	intensity--= F
.--F G
fadeDistance--G S
)--S T
,--T U
fresnelFade.. 
=.. 
FindSetting.. )
(..) *
(..* +
Settings..+ 3
x..4 5
)..5 6
=>..7 9
x..: ;
...; <
	intensity..< E
...E F
fresnelFade..F Q
)..Q R
,..R S
fresnelFadePower//  
=//! "
FindSetting//# .
(//. /
(/// 0
Settings//0 8
x//9 :
)//: ;
=>//< >
x//? @
.//@ A
	intensity//A J
.//J K
fresnelFadePower//K [
)//[ \
}00 
;00 
m_Reflection22 
=22 
new22 
ReflectionSettings22 1
{33 
	blendType44 
=44 
FindSetting44 '
(44' (
(44( )
Settings44) 1
x442 3
)443 4
=>445 7
x448 9
.449 :

reflection44: D
.44D E
	blendType44E N
)44N O
,44O P
reflectionQuality55 !
=55" #
FindSetting55$ /
(55/ 0
(550 1
Settings551 9
x55: ;
)55; <
=>55= ?
x55@ A
.55A B

reflection55B L
.55L M
reflectionQuality55M ^
)55^ _
,55_ `
maxDistance66 
=66 
FindSetting66 )
(66) *
(66* +
Settings66+ 3
x664 5
)665 6
=>667 9
x66: ;
.66; <

reflection66< F
.66F G
maxDistance66G R
)66R S
,66S T
iterationCount77 
=77  
FindSetting77! ,
(77, -
(77- .
Settings77. 6
x777 8
)778 9
=>77: <
x77= >
.77> ?

reflection77? I
.77I J
iterationCount77J X
)77X Y
,77Y Z
stepSize88 
=88 
FindSetting88 &
(88& '
(88' (
Settings88( 0
x881 2
)882 3
=>884 6
x887 8
.888 9

reflection889 C
.88C D
stepSize88D L
)88L M
,88M N
widthModifier99 
=99 
FindSetting99  +
(99+ ,
(99, -
Settings99- 5
x996 7
)997 8
=>999 ;
x99< =
.99= >

reflection99> H
.99H I
widthModifier99I V
)99V W
,99W X
reflectionBlur:: 
=::  
FindSetting::! ,
(::, -
(::- .
Settings::. 6
x::7 8
)::8 9
=>::: <
x::= >
.::> ?

reflection::? I
.::I J
reflectionBlur::J X
)::X Y
,::Y Z
reflectBackfaces;;  
=;;! "
FindSetting;;# .
(;;. /
(;;/ 0
Settings;;0 8
x;;9 :
);;: ;
=>;;< >
x;;? @
.;;@ A

reflection;;A K
.;;K L
reflectBackfaces;;L \
);;\ ]
}<< 
;<< 
m_ScreenEdgeMask>> 
=>> 
new>> "
ScreenEdgeMask>># 1
{?? 
	intensity@@ 
=@@ 
FindSetting@@ '
(@@' (
(@@( )
Settings@@) 1
x@@2 3
)@@3 4
=>@@5 7
x@@8 9
.@@9 :
screenEdgeMask@@: H
.@@H I
	intensity@@I R
)@@R S
}AA 
;AA 
}BB 	
publicDD 
overrideDD 
voidDD 
OnInspectorGUIDD +
(DD+ ,
)DD, -
{EE 	
EditorGUILayoutFF 
.FF 
HelpBoxFF #
(FF# $
$strFF$ ^
,FF^ _
MessageTypeFF` k
.FFk l
InfoFFl p
)FFp q
;FFq r
EditorGUILayoutHH 
.HH 

LabelFieldHH &
(HH& '
$strHH' 3
,HH3 4
EditorStylesHH5 A
.HHA B
	boldLabelHHB K
)HHK L
;HHL M
	EditorGUIII 
.II 
indentLevelII !
++II! #
;II# $
EditorGUILayoutJJ 
.JJ 
PropertyFieldJJ )
(JJ) *
m_ReflectionJJ* 6
.JJ6 7
	blendTypeJJ7 @
)JJ@ A
;JJA B
EditorGUILayoutKK 
.KK 
PropertyFieldKK )
(KK) *
m_ReflectionKK* 6
.KK6 7
reflectionQualityKK7 H
)KKH I
;KKI J
EditorGUILayoutLL 
.LL 
PropertyFieldLL )
(LL) *
m_ReflectionLL* 6
.LL6 7
maxDistanceLL7 B
)LLB C
;LLC D
EditorGUILayoutMM 
.MM 
PropertyFieldMM )
(MM) *
m_ReflectionMM* 6
.MM6 7
iterationCountMM7 E
)MME F
;MMF G
EditorGUILayoutNN 
.NN 
PropertyFieldNN )
(NN) *
m_ReflectionNN* 6
.NN6 7
stepSizeNN7 ?
)NN? @
;NN@ A
EditorGUILayoutOO 
.OO 
PropertyFieldOO )
(OO) *
m_ReflectionOO* 6
.OO6 7
widthModifierOO7 D
)OOD E
;OOE F
EditorGUILayoutPP 
.PP 
PropertyFieldPP )
(PP) *
m_ReflectionPP* 6
.PP6 7
reflectionBlurPP7 E
)PPE F
;PPF G
EditorGUILayoutQQ 
.QQ 
PropertyFieldQQ )
(QQ) *
m_ReflectionQQ* 6
.QQ6 7
reflectBackfacesQQ7 G
)QQG H
;QQH I
	EditorGUIRR 
.RR 
indentLevelRR !
--RR! #
;RR# $
EditorGUILayoutTT 
.TT 
SpaceTT !
(TT! "
)TT" #
;TT# $
EditorGUILayoutUU 
.UU 

LabelFieldUU &
(UU& '
$strUU' 2
,UU2 3
EditorStylesUU4 @
.UU@ A
	boldLabelUUA J
)UUJ K
;UUK L
	EditorGUIVV 
.VV 
indentLevelVV !
++VV! #
;VV# $
EditorGUILayoutWW 
.WW 
PropertyFieldWW )
(WW) *
m_IntensityWW* 5
.WW5 6 
reflectionMultiplierWW6 J
)WWJ K
;WWK L
EditorGUILayoutXX 
.XX 
PropertyFieldXX )
(XX) *
m_IntensityXX* 5
.XX5 6
fadeDistanceXX6 B
)XXB C
;XXC D
EditorGUILayoutYY 
.YY 
PropertyFieldYY )
(YY) *
m_IntensityYY* 5
.YY5 6
fresnelFadeYY6 A
)YYA B
;YYB C
EditorGUILayoutZZ 
.ZZ 
PropertyFieldZZ )
(ZZ) *
m_IntensityZZ* 5
.ZZ5 6
fresnelFadePowerZZ6 F
)ZZF G
;ZZG H
	EditorGUI[[ 
.[[ 
indentLevel[[ !
--[[! #
;[[# $
EditorGUILayout]] 
.]] 
Space]] !
(]]! "
)]]" #
;]]# $
EditorGUILayout^^ 
.^^ 

LabelField^^ &
(^^& '
$str^^' 9
,^^9 :
EditorStyles^^; G
.^^G H
	boldLabel^^H Q
)^^Q R
;^^R S
	EditorGUI__ 
.__ 
indentLevel__ !
++__! #
;__# $
EditorGUILayout`` 
.`` 
PropertyField`` )
(``) *
m_ScreenEdgeMask``* :
.``: ;
	intensity``; D
)``D E
;``E F
	EditorGUIaa 
.aa 
indentLevelaa !
--aa! #
;aa# $
}bb 	
}cc 
}dd .
¼D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Models\UserLutModelEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[ %
PostProcessingModelEditor 
( 
typeof %
(% &
UserLutModel& 2
)2 3
)3 4
]4 5
public		 

class		 
UserLutModelEditor		 #
:		$ %%
PostProcessingModelEditor		& ?
{

 
SerializedProperty 
	m_Texture $
;$ %
SerializedProperty 
m_Contribution )
;) *
public 
override 
void 
OnEnable %
(% &
)& '
{ 	
	m_Texture 
= 
FindSetting #
(# $
($ %
Settings% -
x. /
)/ 0
=>1 3
x4 5
.5 6
lut6 9
)9 :
;: ;
m_Contribution 
= 
FindSetting (
(( )
() *
Settings* 2
x3 4
)4 5
=>6 8
x9 :
.: ;
contribution; G
)G H
;H I
} 	
public 
override 
void 
OnInspectorGUI +
(+ ,
), -
{ 	
var 
lut 
= 
( 
target 
as  
UserLutModel! -
)- .
.. /
settings/ 7
.7 8
lut8 ;
;; <
if 
( 
lut 
!= 
null 
) 
{ 
var 
importer 
= 
(  
TextureImporter  /
)/ 0
AssetImporter0 =
.= >
	GetAtPath> G
(G H
AssetDatabaseH U
.U V
GetAssetPathV b
(b c
lutc f
)f g
)g h
;h i
if 
( 
importer 
!= 
null  $
)$ %
{ 
bool   
valid   
=    
importer  ! )
.  ) *

anisoLevel  * 4
==  5 7
$num  8 9
&&!! 
importer!! #
.!!# $
mipmapEnabled!!$ 1
==!!2 4
false!!5 :
&&"" 
importer"" #
.""# $
sRGBTexture""$ /
==""0 2
false""3 8
&&## 
(## 
importer## $
.##$ %
textureCompression##% 7
==##8 :&
TextureImporterCompression##; U
.##U V
Uncompressed##V b
)##b c
;##c d
if++ 
(++ 
!++ 
valid++ 
)++ 
{,, 
EditorGUILayout-- '
.--' (
HelpBox--( /
(--/ 0
$str--0 N
,--N O
MessageType--P [
.--[ \
Warning--\ c
)--c d
;--d e
	GUILayout// !
.//! "
Space//" '
(//' (
-//( )
$num//) +
)//+ ,
;//, -
using00 
(00 
new00 "
EditorGUILayout00# 2
.002 3
HorizontalScope003 B
(00B C
)00C D
)00D E
{11 
	GUILayout22 %
.22% &
FlexibleSpace22& 3
(223 4
)224 5
;225 6
if33 
(33  
	GUILayout33  )
.33) *
Button33* 0
(330 1
$str331 6
,336 7
	GUILayout338 A
.33A B
Width33B G
(33G H
$num33H J
)33J K
)33K L
)33L M
{44  
SetLUTImportSettings55  4
(554 5
importer555 =
)55= >
;55> ?
AssetDatabase66  -
.66- .
Refresh66. 5
(665 6
)666 7
;667 8
}77 
	GUILayout88 %
.88% &
Space88& +
(88+ ,
$num88, -
)88- .
;88. /
}99 
	GUILayout:: !
.::! "
Space::" '
(::' (
$num::( *
)::* +
;::+ ,
};; 
}<< 
else== 
{>> 
	m_Texture?? 
.??  
objectReferenceValue?? 2
=??3 4
null??5 9
;??9 :
}@@ 
}AA 
EditorGUILayoutCC 
.CC 
PropertyFieldCC )
(CC) *
	m_TextureCC* 3
)CC3 4
;CC4 5
EditorGUILayoutDD 
.DD 
PropertyFieldDD )
(DD) *
m_ContributionDD* 8
)DD8 9
;DD9 :
}EE 	
voidGG  
SetLUTImportSettingsGG !
(GG! "
TextureImporterGG" 1
importerGG2 :
)GG: ;
{HH 	
importerJJ 
.JJ 
textureTypeJJ  
=JJ! "
TextureImporterTypeJJ# 6
.JJ6 7
DefaultJJ7 >
;JJ> ?
importerKK 
.KK 
sRGBTextureKK  
=KK! "
falseKK# (
;KK( )
importerLL 
.LL 
textureCompressionLL '
=LL( )&
TextureImporterCompressionLL* D
.LLD E
UncompressedLLE Q
;LLQ R
importerRR 
.RR 

anisoLevelRR 
=RR  !
$numRR" #
;RR# $
importerSS 
.SS 
mipmapEnabledSS "
=SS# $
falseSS% *
;SS* +
importerTT 
.TT 
SaveAndReimportTT $
(TT$ %
)TT% &
;TT& '
}UU 	
}VV 
}WW ÞJ
½D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Models\VignetteModelEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[		 %
PostProcessingModelEditor		 
(		 
typeof		 %
(		% &
VignetteModel		& 3
)		3 4
)		4 5
]		5 6
public

 

class

 
VignetteModelEditor

 $
:

% &%
PostProcessingModelEditor

' @
{ 
SerializedProperty 
m_Mode !
;! "
SerializedProperty 
m_Color "
;" #
SerializedProperty 
m_Center #
;# $
SerializedProperty 
m_Intensity &
;& '
SerializedProperty 
m_Smoothness '
;' (
SerializedProperty 
m_Roundness &
;& '
SerializedProperty 
m_Mask !
;! "
SerializedProperty 
	m_Opacity $
;$ %
SerializedProperty 
	m_Rounded $
;$ %
public 
override 
void 
OnEnable %
(% &
)& '
{ 	
m_Mode 
= 
FindSetting  
(  !
(! "
Settings" *
x+ ,
), -
=>. 0
x1 2
.2 3
mode3 7
)7 8
;8 9
m_Color 
= 
FindSetting !
(! "
(" #
Settings# +
x, -
)- .
=>/ 1
x2 3
.3 4
color4 9
)9 :
;: ;
m_Center 
= 
FindSetting "
(" #
(# $
Settings$ ,
x- .
). /
=>0 2
x3 4
.4 5
center5 ;
); <
;< =
m_Intensity 
= 
FindSetting %
(% &
(& '
Settings' /
x0 1
)1 2
=>3 5
x6 7
.7 8
	intensity8 A
)A B
;B C
m_Smoothness 
= 
FindSetting &
(& '
(' (
Settings( 0
x1 2
)2 3
=>4 6
x7 8
.8 9

smoothness9 C
)C D
;D E
m_Roundness 
= 
FindSetting %
(% &
(& '
Settings' /
x0 1
)1 2
=>3 5
x6 7
.7 8
	roundness8 A
)A B
;B C
m_Mask 
= 
FindSetting  
(  !
(! "
Settings" *
x+ ,
), -
=>. 0
x1 2
.2 3
mask3 7
)7 8
;8 9
	m_Opacity 
= 
FindSetting #
(# $
($ %
Settings% -
x. /
)/ 0
=>1 3
x4 5
.5 6
opacity6 =
)= >
;> ?
	m_Rounded   
=   
FindSetting   #
(  # $
(  $ %
Settings  % -
x  . /
)  / 0
=>  1 3
x  4 5
.  5 6
rounded  6 =
)  = >
;  > ?
}!! 	
public## 
override## 
void## 
OnInspectorGUI## +
(##+ ,
)##, -
{$$ 	
EditorGUILayout%% 
.%% 
PropertyField%% )
(%%) *
m_Mode%%* 0
)%%0 1
;%%1 2
EditorGUILayout&& 
.&& 
PropertyField&& )
(&&) *
m_Color&&* 1
)&&1 2
;&&2 3
if(( 
((( 
m_Mode(( 
.(( 
intValue(( 
<((  !
(((" #
int((# &
)((& '
VignetteMode((' 3
.((3 4
Masked((4 :
)((: ;
{)) 
EditorGUILayout** 
.**  
PropertyField**  -
(**- .
m_Center**. 6
)**6 7
;**7 8
EditorGUILayout++ 
.++  
PropertyField++  -
(++- .
m_Intensity++. 9
)++9 :
;++: ;
EditorGUILayout,, 
.,,  
PropertyField,,  -
(,,- .
m_Smoothness,,. :
),,: ;
;,,; <
EditorGUILayout-- 
.--  
PropertyField--  -
(--- .
m_Roundness--. 9
)--9 :
;--: ;
EditorGUILayout.. 
...  
PropertyField..  -
(..- .
	m_Rounded... 7
)..7 8
;..8 9
}// 
else00 
{11 
var22 
mask22 
=22 
(22 
target22 "
as22# %
VignetteModel22& 3
)223 4
.224 5
settings225 =
.22= >
mask22> B
;22B C
if55 
(55 
mask55 
!=55 
null55  
)55  !
{66 
var77 
importer77  
=77! "
AssetImporter77# 0
.770 1
	GetAtPath771 :
(77: ;
AssetDatabase77; H
.77H I
GetAssetPath77I U
(77U V
mask77V Z
)77Z [
)77[ \
as77] _
TextureImporter77` o
;77o p
if99 
(99 
importer99  
!=99! #
null99$ (
)99( )
{:: 
bool<< 
valid<< "
=<<# $
importer<<% -
.<<- .

anisoLevel<<. 8
==<<9 ;
$num<<< =
&&== 
importer== '
.==' (
mipmapEnabled==( 5
====6 8
false==9 >
&&?? 
importer?? '
.??' (
alphaSource??( 3
==??4 6&
TextureImporterAlphaSource??7 Q
.??Q R
FromGrayScale??R _
&&@@ 
importer@@ '
.@@' (
textureCompression@@( :
==@@; =&
TextureImporterCompression@@> X
.@@X Y
Uncompressed@@Y e
&&AA 
importerAA '
.AA' (
wrapModeAA( 0
==AA1 3
TextureWrapModeAA4 C
.AAC D
ClampAAD I
;AAI J
ifJJ 
(JJ 
!JJ 
validJJ "
)JJ" #
{KK 
EditorGUILayoutLL +
.LL+ ,
HelpBoxLL, 3
(LL3 4
$strLL4 S
,LLS T
MessageTypeLLU `
.LL` a
WarningLLa h
)LLh i
;LLi j
	GUILayoutNN %
.NN% &
SpaceNN& +
(NN+ ,
-NN, -
$numNN- /
)NN/ 0
;NN0 1
usingOO !
(OO" #
newOO# &
EditorGUILayoutOO' 6
.OO6 7
HorizontalScopeOO7 F
(OOF G
)OOG H
)OOH I
{PP 
	GUILayoutQQ  )
.QQ) *
FlexibleSpaceQQ* 7
(QQ7 8
)QQ8 9
;QQ9 :
ifRR  "
(RR# $
	GUILayoutRR$ -
.RR- .
ButtonRR. 4
(RR4 5
$strRR5 :
,RR: ;
	GUILayoutRR< E
.RRE F
WidthRRF K
(RRK L
$numRRL N
)RRN O
)RRO P
)RRP Q
{SS  !!
SetMaskImportSettingsTT$ 9
(TT9 :
importerTT: B
)TTB C
;TTC D
AssetDatabaseUU$ 1
.UU1 2
RefreshUU2 9
(UU9 :
)UU: ;
;UU; <
}VV  !
	GUILayoutWW  )
.WW) *
SpaceWW* /
(WW/ 0
$numWW0 1
)WW1 2
;WW2 3
}XX 
	GUILayoutYY %
.YY% &
SpaceYY& +
(YY+ ,
$numYY, .
)YY. /
;YY/ 0
}ZZ 
}[[ 
}\\ 
EditorGUILayout^^ 
.^^  
PropertyField^^  -
(^^- .
m_Mask^^. 4
)^^4 5
;^^5 6
EditorGUILayout__ 
.__  
PropertyField__  -
(__- .
	m_Opacity__. 7
)__7 8
;__8 9
}`` 
}aa 	
voidcc !
SetMaskImportSettingscc "
(cc" #
TextureImportercc# 2
importercc3 ;
)cc; <
{dd 	
importerff 
.ff 
textureTypeff  
=ff! "
TextureImporterTypeff# 6
.ff6 7
SingleChannelff7 D
;ffD E
importerhh 
.hh 
alphaSourcehh  
=hh! "&
TextureImporterAlphaSourcehh# =
.hh= >
FromGrayScalehh> K
;hhK L
importerii 
.ii 
textureCompressionii '
=ii( )&
TextureImporterCompressionii* D
.iiD E
UncompressediiE Q
;iiQ R
importerpp 
.pp 

anisoLevelpp 
=pp  !
$numpp" #
;pp# $
importerqq 
.qq 
mipmapEnabledqq "
=qq# $
falseqq% *
;qq* +
importerrr 
.rr 
wrapModerr 
=rr 
TextureWrapModerr  /
.rr/ 0
Clamprr0 5
;rr5 6
importerss 
.ss 
SaveAndReimportss $
(ss$ %
)ss% &
;ss& '
}tt 	
}uu 
}vv Õ
¼D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Monitors\HistogramMonitor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
public		 

class		 
HistogramMonitor		 !
:		" #!
PostProcessingMonitor		$ 9
{

 
static 

GUIContent 
s_MonitorTitle (
=) *
new+ .

GUIContent/ 9
(9 :
$str: E
)E F
;F G
ComputeShader 
m_ComputeShader %
;% &
ComputeBuffer 
m_Buffer 
; 
Material 

m_Material 
; 
RenderTexture 
m_HistogramTexture (
;( )
Rect 
m_MonitorAreaRect 
; 
public 
HistogramMonitor 
(  
)  !
{ 	
m_ComputeShader 
= 
EditorResources -
.- .
Load. 2
<2 3
ComputeShader3 @
>@ A
(A B
$strB e
)e f
;f g
} 	
public 
override 
void 
Dispose $
($ %
)% &
{ 	
GraphicsUtils 
. 
Destroy !
(! "

m_Material" ,
), -
;- .
GraphicsUtils 
. 
Destroy !
(! "
m_HistogramTexture" 4
)4 5
;5 6
if 
( 
m_Buffer 
!= 
null  
)  !
m_Buffer 
. 
Release  
(  !
)! "
;" #

m_Material   
=   
null   
;   
m_HistogramTexture!! 
=!!  
null!!! %
;!!% &
m_Buffer"" 
="" 
null"" 
;"" 
}## 	
public%% 
override%% 
bool%% 
IsSupported%% (
(%%( )
)%%) *
{&& 	
return'' 
m_ComputeShader'' "
!=''# %
null''& *
&&''+ -
GraphicsUtils''. ;
.''; <
supportsDX11''< H
;''H I
}(( 	
public** 
override** 

GUIContent** "
GetMonitorTitle**# 2
(**2 3
)**3 4
{++ 	
return,, 
s_MonitorTitle,, !
;,,! "
}-- 	
public// 
override// 
void// 
OnMonitorSettings// .
(//. /
)/// 0
{00 	
	EditorGUI11 
.11 
BeginChangeCheck11 &
(11& '
)11' (
;11( )
bool33 
refreshOnPlay33 
=33  
m_MonitorSettings33! 2
.332 3
refreshOnPlay333 @
;33@ A
var44 
mode44 
=44 
m_MonitorSettings44 (
.44( )
histogramMode44) 6
;446 7
refreshOnPlay66 
=66 
	GUILayout66 %
.66% &
Toggle66& ,
(66, -
refreshOnPlay66- :
,66: ;
new66< ?

GUIContent66@ J
(66J K
FxStyles66K S
.66S T
playIcon66T \
,66\ ]
$str	66^ ©
)
66© ª
,
66ª «
FxStyles
66¬ ´
.
66´ µ
	preButton
66µ ¾
)
66¾ ¿
;
66¿ À
mode77 
=77 
(77 
HistogramMode77 !
)77! "
EditorGUILayout77" 1
.771 2
	EnumPopup772 ;
(77; <
mode77< @
,77@ A
FxStyles77B J
.77J K
preDropdown77K V
,77V W
	GUILayout77X a
.77a b
MaxWidth77b j
(77j k
$num77k o
)77o p
)77p q
;77q r
if99 
(99 
	EditorGUI99 
.99 
EndChangeCheck99 (
(99( )
)99) *
)99* +
{:: 
Undo;; 
.;; 
RecordObject;; !
(;;! "
m_BaseEditor;;" .
.;;. /
serializedObject;;/ ?
.;;? @
targetObject;;@ L
,;;L M
$str;;N j
);;j k
;;;k l
m_MonitorSettings<< !
.<<! "
refreshOnPlay<<" /
=<<0 1
refreshOnPlay<<2 ?
;<<? @
m_MonitorSettings== !
.==! "
histogramMode==" /
===0 1
mode==2 6
;==6 7!
InternalEditorUtility>> %
.>>% &
RepaintAllViews>>& 5
(>>5 6
)>>6 7
;>>7 8
}?? 
}@@ 	
publicBB 
overrideBB 
voidBB 
OnMonitorGUIBB )
(BB) *
RectBB* .
rBB/ 0
)BB0 1
{CC 	
ifDD 
(DD 
EventDD 
.DD 
currentDD 
.DD 
typeDD "
==DD# %
	EventTypeDD& /
.DD/ 0
RepaintDD0 7
)DD7 8
{EE 
ifGG 
(GG 
MathfGG 
.GG 
ApproximatelyGG '
(GG' (
m_MonitorAreaRectGG( 9
.GG9 :
widthGG: ?
,GG? @
$numGGA B
)GGB C
&&GGD F
MathfGGG L
.GGL M
ApproximatelyGGM Z
(GGZ [
m_MonitorAreaRectGG[ l
.GGl m
heightGGm s
,GGs t
$numGGu v
)GGv w
)GGw x!
InternalEditorUtilityHH )
.HH) *
RepaintAllViewsHH* 9
(HH9 :
)HH: ;
;HH; <
floatKK 
widthKK 
=KK 
m_HistogramTextureKK 0
!=KK1 3
nullKK4 8
?LL 
MathfLL 
.LL 
MinLL 
(LL  
m_HistogramTextureLL  2
.LL2 3
widthLL3 8
,LL8 9
rLL: ;
.LL; <
widthLL< A
-LLB C
$numLLD G
)LLG H
:MM 
rMM 
.MM 
widthMM 
;MM 
floatNN 
heightNN 
=NN 
m_HistogramTextureNN 1
!=NN2 4
nullNN5 9
?OO 
MathfOO 
.OO 
MinOO 
(OO  
m_HistogramTextureOO  2
.OO2 3
heightOO3 9
,OO9 :
rOO; <
.OO< =
heightOO= C
-OOD E
$numOOF I
)OOI J
:PP 
rPP 
.PP 
heightPP 
;PP 
m_MonitorAreaRectRR !
=RR" #
newRR$ '
RectRR( ,
(RR, -
MathfSS 
.SS 
FloorSS #
(SS# $
rSS$ %
.SS% &
xSS& '
+SS( )
rSS* +
.SS+ ,
widthSS, 1
/SS2 3
$numSS4 6
-SS7 8
widthSS9 >
/SS? @
$numSSA C
)SSC D
,SSD E
MathfTT 
.TT 
FloorTT #
(TT# $
rTT$ %
.TT% &
yTT& '
+TT( )
rTT* +
.TT+ ,
heightTT, 2
/TT3 4
$numTT5 7
-TT8 9
heightTT: @
/TTA B
$numTTC E
-TTF G
$numTTH J
)TTJ K
,TTK L
widthUU 
,UU 
heightUU %
)VV 
;VV 
ifXX 
(XX 
m_HistogramTextureXX &
!=XX' )
nullXX* .
)XX. /
{YY 
GraphicsZZ 
.ZZ 
DrawTextureZZ (
(ZZ( )
m_MonitorAreaRectZZ) :
,ZZ: ;
m_HistogramTextureZZ< N
)ZZN O
;ZZO P
var\\ 
color\\ 
=\\ 
Color\\  %
.\\% &
white\\& +
;\\+ ,
const]] 
float]] 
	kTickSize]]  )
=]]* +
$num]], .
;]]. /
if`` 
(`` 
m_MonitorSettings`` )
.``) *
histogramMode``* 7
==``8 :
HistogramMode``; H
.``H I
RGBSplit``I Q
)``Q R
{aa 
vargg 
Agg 
=gg 
newgg  #
Vector3gg$ +
(gg+ ,
m_MonitorAreaRectgg, =
.gg= >
xgg> ?
-gg@ A
$numggB D
,ggD E
m_MonitorAreaRectggF W
.ggW X
yggX Y
-ggZ [
$numgg\ ^
)gg^ _
;gg_ `
varhh 
Ehh 
=hh 
newhh  #
Vector3hh$ +
(hh+ ,
Ahh, -
.hh- .
xhh. /
+hh0 1
m_MonitorAreaRecthh2 C
.hhC D
widthhhD I
+hhJ K
$numhhL N
,hhN O
m_MonitorAreaRecthhP a
.hha b
yhhb c
-hhd e
$numhhf h
)hhh i
;hhi j
varii 
Hii 
=ii 
newii  #
Vector3ii$ +
(ii+ ,
Eii, -
.ii- .
xii. /
,ii/ 0
Eii1 2
.ii2 3
yii3 4
+ii5 6
m_MonitorAreaRectii7 H
.iiH I
heightiiI O
+iiP Q
$numiiR T
)iiT U
;iiU V
varjj 
Ljj 
=jj 
newjj  #
Vector3jj$ +
(jj+ ,
Ajj, -
.jj- .
xjj. /
,jj/ 0
Hjj1 2
.jj2 3
yjj3 4
)jj4 5
;jj5 6
varll 
Nll 
=ll 
newll  #
Vector3ll$ +
(ll+ ,
All, -
.ll- .
xll. /
,ll/ 0
All1 2
.ll2 3
yll3 4
+ll5 6
(ll7 8
Lll8 9
.ll9 :
yll: ;
-ll< =
All> ?
.ll? @
yll@ A
)llA B
/llC D
$numllE G
)llG H
;llH I
varmm 
Mmm 
=mm 
newmm  #
Vector3mm$ +
(mm+ ,
Amm, -
.mm- .
xmm. /
,mm/ 0
Amm1 2
.mm2 3
ymm3 4
+mm5 6
(mm7 8
Lmm8 9
.mm9 :
ymm: ;
-mm< =
Amm> ?
.mm? @
ymm@ A
)mmA B
*mmC D
$nummmE G
/mmH I
$nummmJ L
)mmL M
;mmM N
varnn 
Fnn 
=nn 
newnn  #
Vector3nn$ +
(nn+ ,
Enn, -
.nn- .
xnn. /
,nn/ 0
Enn1 2
.nn2 3
ynn3 4
+nn5 6
(nn7 8
Hnn8 9
.nn9 :
ynn: ;
-nn< =
Enn> ?
.nn? @
ynn@ A
)nnA B
/nnC D
$numnnE G
)nnG H
;nnH I
varoo 
Goo 
=oo 
newoo  #
Vector3oo$ +
(oo+ ,
Eoo, -
.oo- .
xoo. /
,oo/ 0
Eoo1 2
.oo2 3
yoo3 4
+oo5 6
(oo7 8
Hoo8 9
.oo9 :
yoo: ;
-oo< =
Eoo> ?
.oo? @
yoo@ A
)ooA B
*ooC D
$numooE G
/ooH I
$numooJ L
)ooL M
;ooM N
varqq 
Cqq 
=qq 
newqq  #
Vector3qq$ +
(qq+ ,
Aqq, -
.qq- .
xqq. /
+qq0 1
(qq2 3
Eqq3 4
.qq4 5
xqq5 6
-qq7 8
Aqq9 :
.qq: ;
xqq; <
)qq< =
/qq> ?
$numqq@ B
,qqB C
AqqD E
.qqE F
yqqF G
)qqG H
;qqH I
varrr 
Jrr 
=rr 
newrr  #
Vector3rr$ +
(rr+ ,
Lrr, -
.rr- .
xrr. /
+rr0 1
(rr2 3
Hrr3 4
.rr4 5
xrr5 6
-rr7 8
Lrr9 :
.rr: ;
xrr; <
)rr< =
/rr> ?
$numrr@ B
,rrB C
LrrD E
.rrE F
yrrF G
)rrG H
;rrH I
vartt 
Btt 
=tt 
newtt  #
Vector3tt$ +
(tt+ ,
Att, -
.tt- .
xtt. /
+tt0 1
(tt2 3
Ctt3 4
.tt4 5
xtt5 6
-tt7 8
Att9 :
.tt: ;
xtt; <
)tt< =
/tt> ?
$numtt@ B
,ttB C
AttD E
.ttE F
yttF G
)ttG H
;ttH I
varuu 
Duu 
=uu 
newuu  #
Vector3uu$ +
(uu+ ,
Cuu, -
.uu- .
xuu. /
+uu0 1
(uu2 3
Euu3 4
.uu4 5
xuu5 6
-uu7 8
Cuu9 :
.uu: ;
xuu; <
)uu< =
/uu> ?
$numuu@ B
,uuB C
CuuD E
.uuE F
yuuF G
)uuG H
;uuH I
varvv 
Ivv 
=vv 
newvv  #
Vector3vv$ +
(vv+ ,
Jvv, -
.vv- .
xvv. /
+vv0 1
(vv2 3
Hvv3 4
.vv4 5
xvv5 6
-vv7 8
Jvv9 :
.vv: ;
xvv; <
)vv< =
/vv> ?
$numvv@ B
,vvB C
JvvD E
.vvE F
yvvF G
)vvG H
;vvH I
varww 
Kww 
=ww 
newww  #
Vector3ww$ +
(ww+ ,
Lww, -
.ww- .
xww. /
+ww0 1
(ww2 3
Jww3 4
.ww4 5
xww5 6
-ww7 8
Lww9 :
.ww: ;
xww; <
)ww< =
/ww> ?
$numww@ B
,wwB C
LwwD E
.wwE F
ywwF G
)wwG H
;wwH I
Handleszz 
.zz  
colorzz  %
=zz& '
colorzz( -
;zz- .
Handles{{ 
.{{  
DrawLine{{  (
({{( )
A{{) *
,{{* +
E{{, -
){{- .
;{{. /
Handles|| 
.||  
DrawLine||  (
(||( )
E||) *
,||* +
H||, -
)||- .
;||. /
Handles}} 
.}}  
DrawLine}}  (
(}}( )
H}}) *
,}}* +
L}}, -
)}}- .
;}}. /
Handles~~ 
.~~  
DrawLine~~  (
(~~( )
L~~) *
,~~* +
new~~, /
Vector3~~0 7
(~~7 8
A~~8 9
.~~9 :
x~~: ;
,~~; <
A~~= >
.~~> ?
y~~? @
-~~A B
$num~~C E
)~~E F
)~~F G
;~~G H
Handles
 
.
  
DrawLine
  (
(
( )
A
) *
,
* +
new
, /
Vector3
0 7
(
7 8
A
8 9
.
9 :
x
: ;
-
< =
	kTickSize
> G
,
G H
A
I J
.
J K
y
K L
)
L M
)
M N
;
N O
Handles
 
.
  
DrawLine
  (
(
( )
N
) *
,
* +
new
, /
Vector3
0 7
(
7 8
N
8 9
.
9 :
x
: ;
-
< =
	kTickSize
> G
,
G H
N
I J
.
J K
y
K L
)
L M
)
M N
;
N O
Handles
 
.
  
DrawLine
  (
(
( )
M
) *
,
* +
new
, /
Vector3
0 7
(
7 8
M
8 9
.
9 :
x
: ;
-
< =
	kTickSize
> G
,
G H
M
I J
.
J K
y
K L
)
L M
)
M N
;
N O
Handles
 
.
  
DrawLine
  (
(
( )
L
) *
,
* +
new
, /
Vector3
0 7
(
7 8
L
8 9
.
9 :
x
: ;
-
< =
	kTickSize
> G
,
G H
L
I J
.
J K
y
K L
)
L M
)
M N
;
N O
Handles
 
.
  
DrawLine
  (
(
( )
E
) *
,
* +
new
, /
Vector3
0 7
(
7 8
E
8 9
.
9 :
x
: ;
+
< =
	kTickSize
> G
,
G H
E
I J
.
J K
y
K L
)
L M
)
M N
;
N O
Handles
 
.
  
DrawLine
  (
(
( )
F
) *
,
* +
new
, /
Vector3
0 7
(
7 8
F
8 9
.
9 :
x
: ;
+
< =
	kTickSize
> G
,
G H
F
I J
.
J K
y
K L
)
L M
)
M N
;
N O
Handles
 
.
  
DrawLine
  (
(
( )
G
) *
,
* +
new
, /
Vector3
0 7
(
7 8
G
8 9
.
9 :
x
: ;
+
< =
	kTickSize
> G
,
G H
G
I J
.
J K
y
K L
)
L M
)
M N
;
N O
Handles
 
.
  
DrawLine
  (
(
( )
H
) *
,
* +
new
, /
Vector3
0 7
(
7 8
H
8 9
.
9 :
x
: ;
+
< =
	kTickSize
> G
,
G H
H
I J
.
J K
y
K L
)
L M
)
M N
;
N O
Handles
 
.
  
DrawLine
  (
(
( )
A
) *
,
* +
new
, /
Vector3
0 7
(
7 8
A
8 9
.
9 :
x
: ;
,
; <
A
= >
.
> ?
y
? @
-
A B
	kTickSize
C L
)
L M
)
M N
;
N O
Handles
 
.
  
DrawLine
  (
(
( )
B
) *
,
* +
new
, /
Vector3
0 7
(
7 8
B
8 9
.
9 :
x
: ;
,
; <
B
= >
.
> ?
y
? @
-
A B
	kTickSize
C L
)
L M
)
M N
;
N O
Handles
 
.
  
DrawLine
  (
(
( )
C
) *
,
* +
new
, /
Vector3
0 7
(
7 8
C
8 9
.
9 :
x
: ;
,
; <
C
= >
.
> ?
y
? @
-
A B
	kTickSize
C L
)
L M
)
M N
;
N O
Handles
 
.
  
DrawLine
  (
(
( )
D
) *
,
* +
new
, /
Vector3
0 7
(
7 8
D
8 9
.
9 :
x
: ;
,
; <
D
= >
.
> ?
y
? @
-
A B
	kTickSize
C L
)
L M
)
M N
;
N O
Handles
 
.
  
DrawLine
  (
(
( )
E
) *
,
* +
new
, /
Vector3
0 7
(
7 8
E
8 9
.
9 :
x
: ;
,
; <
E
= >
.
> ?
y
? @
-
A B
	kTickSize
C L
)
L M
)
M N
;
N O
Handles
 
.
  
DrawLine
  (
(
( )
L
) *
,
* +
new
, /
Vector3
0 7
(
7 8
L
8 9
.
9 :
x
: ;
,
; <
L
= >
.
> ?
y
? @
+
A B
	kTickSize
C L
)
L M
)
M N
;
N O
Handles
 
.
  
DrawLine
  (
(
( )
K
) *
,
* +
new
, /
Vector3
0 7
(
7 8
K
8 9
.
9 :
x
: ;
,
; <
K
= >
.
> ?
y
? @
+
A B
	kTickSize
C L
)
L M
)
M N
;
N O
Handles
 
.
  
DrawLine
  (
(
( )
J
) *
,
* +
new
, /
Vector3
0 7
(
7 8
J
8 9
.
9 :
x
: ;
,
; <
J
= >
.
> ?
y
? @
+
A B
	kTickSize
C L
)
L M
)
M N
;
N O
Handles
 
.
  
DrawLine
  (
(
( )
I
) *
,
* +
new
, /
Vector3
0 7
(
7 8
I
8 9
.
9 :
x
: ;
,
; <
I
= >
.
> ?
y
? @
+
A B
	kTickSize
C L
)
L M
)
M N
;
N O
Handles
 
.
  
DrawLine
  (
(
( )
H
) *
,
* +
new
, /
Vector3
0 7
(
7 8
H
8 9
.
9 :
x
: ;
,
; <
H
= >
.
> ?
y
? @
+
A B
	kTickSize
C L
)
L M
)
M N
;
N O
Handles
 
.
  
DrawLine
  (
(
( )
N
) *
,
* +
F
, -
)
- .
;
. /
Handles
 
.
  
DrawLine
  (
(
( )
M
) *
,
* +
G
, -
)
- .
;
. /
GUI
 
.
 
color
 !
=
" #
color
$ )
;
) *
GUI
 
.
 
Label
 !
(
! "
new
" %
Rect
& *
(
* +
L
+ ,
.
, -
x
- .
-
/ 0
$num
1 4
,
4 5
L
6 7
.
7 8
y
8 9
+
: ;
	kTickSize
< E
-
F G
$num
H J
,
J K
$num
L O
,
O P
$num
Q T
)
T U
,
U V
$str
W \
,
\ ]
FxStyles
^ f
.
f g
tickStyleCenter
g v
)
v w
;
w x
GUI
 
.
 
Label
 !
(
! "
new
" %
Rect
& *
(
* +
J
+ ,
.
, -
x
- .
-
/ 0
$num
1 4
,
4 5
J
6 7
.
7 8
y
8 9
+
: ;
	kTickSize
< E
-
F G
$num
H J
,
J K
$num
L O
,
O P
$num
Q T
)
T U
,
U V
$str
W \
,
\ ]
FxStyles
^ f
.
f g
tickStyleCenter
g v
)
v w
;
w x
GUI
   
.
   
Label
   !
(
  ! "
new
  " %
Rect
  & *
(
  * +
H
  + ,
.
  , -
x
  - .
-
  / 0
$num
  1 4
,
  4 5
H
  6 7
.
  7 8
y
  8 9
+
  : ;
	kTickSize
  < E
-
  F G
$num
  H J
,
  J K
$num
  L O
,
  O P
$num
  Q T
)
  T U
,
  U V
$str
  W \
,
  \ ]
FxStyles
  ^ f
.
  f g
tickStyleCenter
  g v
)
  v w
;
  w x
}
¡¡ 
else
¢¢ 
{
££ 
var
ªª 
A
ªª 
=
ªª 
new
ªª  #
Vector3
ªª$ +
(
ªª+ ,
m_MonitorAreaRect
ªª, =
.
ªª= >
x
ªª> ?
,
ªª? @
m_MonitorAreaRect
ªªA R
.
ªªR S
y
ªªS T
)
ªªT U
;
ªªU V
var
«« 
E
«« 
=
«« 
new
««  #
Vector3
««$ +
(
««+ ,
A
««, -
.
««- .
x
««. /
+
««0 1
m_MonitorAreaRect
««2 C
.
««C D
width
««D I
+
««J K
$num
««L N
,
««N O
m_MonitorAreaRect
««P a
.
««a b
y
««b c
)
««c d
;
««d e
var
¬¬ 
I
¬¬ 
=
¬¬ 
new
¬¬  #
Vector3
¬¬$ +
(
¬¬+ ,
E
¬¬, -
.
¬¬- .
x
¬¬. /
,
¬¬/ 0
E
¬¬1 2
.
¬¬2 3
y
¬¬3 4
+
¬¬5 6
m_MonitorAreaRect
¬¬7 H
.
¬¬H I
height
¬¬I O
+
¬¬P Q
$num
¬¬R T
)
¬¬T U
;
¬¬U V
var
­­ 
M
­­ 
=
­­ 
new
­­  #
Vector3
­­$ +
(
­­+ ,
A
­­, -
.
­­- .
x
­­. /
,
­­/ 0
I
­­1 2
.
­­2 3
y
­­3 4
)
­­4 5
;
­­5 6
var
¯¯ 
C
¯¯ 
=
¯¯ 
new
¯¯  #
Vector3
¯¯$ +
(
¯¯+ ,
A
¯¯, -
.
¯¯- .
x
¯¯. /
+
¯¯0 1
(
¯¯2 3
E
¯¯3 4
.
¯¯4 5
x
¯¯5 6
-
¯¯7 8
A
¯¯9 :
.
¯¯: ;
x
¯¯; <
)
¯¯< =
/
¯¯> ?
$num
¯¯@ B
,
¯¯B C
A
¯¯D E
.
¯¯E F
y
¯¯F G
)
¯¯G H
;
¯¯H I
var
°° 
G
°° 
=
°° 
new
°°  #
Vector3
°°$ +
(
°°+ ,
E
°°, -
.
°°- .
x
°°. /
,
°°/ 0
E
°°1 2
.
°°2 3
y
°°3 4
+
°°5 6
(
°°7 8
I
°°8 9
.
°°9 :
y
°°: ;
-
°°< =
E
°°> ?
.
°°? @
y
°°@ A
)
°°A B
/
°°C D
$num
°°E G
)
°°G H
;
°°H I
var
±± 
K
±± 
=
±± 
new
±±  #
Vector3
±±$ +
(
±±+ ,
M
±±, -
.
±±- .
x
±±. /
+
±±0 1
(
±±2 3
I
±±3 4
.
±±4 5
x
±±5 6
-
±±7 8
M
±±9 :
.
±±: ;
x
±±; <
)
±±< =
/
±±> ?
$num
±±@ B
,
±±B C
M
±±D E
.
±±E F
y
±±F G
)
±±G H
;
±±H I
var
²² 
O
²² 
=
²² 
new
²²  #
Vector3
²²$ +
(
²²+ ,
A
²², -
.
²²- .
x
²². /
,
²²/ 0
A
²²1 2
.
²²2 3
y
²²3 4
+
²²5 6
(
²²7 8
M
²²8 9
.
²²9 :
y
²²: ;
-
²²< =
A
²²> ?
.
²²? @
y
²²@ A
)
²²A B
/
²²C D
$num
²²E G
)
²²G H
;
²²H I
var
´´ 
P
´´ 
=
´´ 
new
´´  #
Vector3
´´$ +
(
´´+ ,
A
´´, -
.
´´- .
x
´´. /
,
´´/ 0
A
´´1 2
.
´´2 3
y
´´3 4
+
´´5 6
(
´´7 8
O
´´8 9
.
´´9 :
y
´´: ;
-
´´< =
A
´´> ?
.
´´? @
y
´´@ A
)
´´A B
/
´´C D
$num
´´E G
)
´´G H
;
´´H I
var
µµ 
F
µµ 
=
µµ 
new
µµ  #
Vector3
µµ$ +
(
µµ+ ,
E
µµ, -
.
µµ- .
x
µµ. /
,
µµ/ 0
E
µµ1 2
.
µµ2 3
y
µµ3 4
+
µµ5 6
(
µµ7 8
G
µµ8 9
.
µµ9 :
y
µµ: ;
-
µµ< =
E
µµ> ?
.
µµ? @
y
µµ@ A
)
µµA B
/
µµC D
$num
µµE G
)
µµG H
;
µµH I
var
¶¶ 
N
¶¶ 
=
¶¶ 
new
¶¶  #
Vector3
¶¶$ +
(
¶¶+ ,
A
¶¶, -
.
¶¶- .
x
¶¶. /
,
¶¶/ 0
O
¶¶1 2
.
¶¶2 3
y
¶¶3 4
+
¶¶5 6
(
¶¶7 8
M
¶¶8 9
.
¶¶9 :
y
¶¶: ;
-
¶¶< =
O
¶¶> ?
.
¶¶? @
y
¶¶@ A
)
¶¶A B
/
¶¶C D
$num
¶¶E G
)
¶¶G H
;
¶¶H I
var
·· 
H
·· 
=
·· 
new
··  #
Vector3
··$ +
(
··+ ,
E
··, -
.
··- .
x
··. /
,
··/ 0
G
··1 2
.
··2 3
y
··3 4
+
··5 6
(
··7 8
I
··8 9
.
··9 :
y
··: ;
-
··< =
G
··> ?
.
··? @
y
··@ A
)
··A B
/
··C D
$num
··E G
)
··G H
;
··H I
var
¹¹ 
B
¹¹ 
=
¹¹ 
new
¹¹  #
Vector3
¹¹$ +
(
¹¹+ ,
A
¹¹, -
.
¹¹- .
x
¹¹. /
+
¹¹0 1
(
¹¹2 3
C
¹¹3 4
.
¹¹4 5
x
¹¹5 6
-
¹¹7 8
A
¹¹9 :
.
¹¹: ;
x
¹¹; <
)
¹¹< =
/
¹¹> ?
$num
¹¹@ B
,
¹¹B C
A
¹¹D E
.
¹¹E F
y
¹¹F G
)
¹¹G H
;
¹¹H I
var
ºº 
L
ºº 
=
ºº 
new
ºº  #
Vector3
ºº$ +
(
ºº+ ,
M
ºº, -
.
ºº- .
x
ºº. /
+
ºº0 1
(
ºº2 3
K
ºº3 4
.
ºº4 5
x
ºº5 6
-
ºº7 8
M
ºº9 :
.
ºº: ;
x
ºº; <
)
ºº< =
/
ºº> ?
$num
ºº@ B
,
ººB C
M
ººD E
.
ººE F
y
ººF G
)
ººG H
;
ººH I
var
»» 
D
»» 
=
»» 
new
»»  #
Vector3
»»$ +
(
»»+ ,
C
»», -
.
»»- .
x
»». /
+
»»0 1
(
»»2 3
E
»»3 4
.
»»4 5
x
»»5 6
-
»»7 8
C
»»9 :
.
»»: ;
x
»»; <
)
»»< =
/
»»> ?
$num
»»@ B
,
»»B C
A
»»D E
.
»»E F
y
»»F G
)
»»G H
;
»»H I
var
¼¼ 
J
¼¼ 
=
¼¼ 
new
¼¼  #
Vector3
¼¼$ +
(
¼¼+ ,
K
¼¼, -
.
¼¼- .
x
¼¼. /
+
¼¼0 1
(
¼¼2 3
I
¼¼3 4
.
¼¼4 5
x
¼¼5 6
-
¼¼7 8
K
¼¼9 :
.
¼¼: ;
x
¼¼; <
)
¼¼< =
/
¼¼> ?
$num
¼¼@ B
,
¼¼B C
M
¼¼D E
.
¼¼E F
y
¼¼F G
)
¼¼G H
;
¼¼H I
Handles
¿¿ 
.
¿¿  
color
¿¿  %
=
¿¿& '
color
¿¿( -
;
¿¿- .
Handles
ÀÀ 
.
ÀÀ  
DrawLine
ÀÀ  (
(
ÀÀ( )
A
ÀÀ) *
,
ÀÀ* +
E
ÀÀ, -
)
ÀÀ- .
;
ÀÀ. /
Handles
ÁÁ 
.
ÁÁ  
DrawLine
ÁÁ  (
(
ÁÁ( )
E
ÁÁ) *
,
ÁÁ* +
I
ÁÁ, -
)
ÁÁ- .
;
ÁÁ. /
Handles
ÂÂ 
.
ÂÂ  
DrawLine
ÂÂ  (
(
ÂÂ( )
I
ÂÂ) *
,
ÂÂ* +
M
ÂÂ, -
)
ÂÂ- .
;
ÂÂ. /
Handles
ÃÃ 
.
ÃÃ  
DrawLine
ÃÃ  (
(
ÃÃ( )
M
ÃÃ) *
,
ÃÃ* +
new
ÃÃ, /
Vector3
ÃÃ0 7
(
ÃÃ7 8
A
ÃÃ8 9
.
ÃÃ9 :
x
ÃÃ: ;
,
ÃÃ; <
A
ÃÃ= >
.
ÃÃ> ?
y
ÃÃ? @
-
ÃÃA B
$num
ÃÃC E
)
ÃÃE F
)
ÃÃF G
;
ÃÃG H
Handles
ÆÆ 
.
ÆÆ  
DrawLine
ÆÆ  (
(
ÆÆ( )
A
ÆÆ) *
,
ÆÆ* +
new
ÆÆ, /
Vector3
ÆÆ0 7
(
ÆÆ7 8
A
ÆÆ8 9
.
ÆÆ9 :
x
ÆÆ: ;
-
ÆÆ< =
	kTickSize
ÆÆ> G
,
ÆÆG H
A
ÆÆI J
.
ÆÆJ K
y
ÆÆK L
)
ÆÆL M
)
ÆÆM N
;
ÆÆN O
Handles
ÇÇ 
.
ÇÇ  
DrawLine
ÇÇ  (
(
ÇÇ( )
P
ÇÇ) *
,
ÇÇ* +
new
ÇÇ, /
Vector3
ÇÇ0 7
(
ÇÇ7 8
P
ÇÇ8 9
.
ÇÇ9 :
x
ÇÇ: ;
-
ÇÇ< =
	kTickSize
ÇÇ> G
,
ÇÇG H
P
ÇÇI J
.
ÇÇJ K
y
ÇÇK L
)
ÇÇL M
)
ÇÇM N
;
ÇÇN O
Handles
ÈÈ 
.
ÈÈ  
DrawLine
ÈÈ  (
(
ÈÈ( )
O
ÈÈ) *
,
ÈÈ* +
new
ÈÈ, /
Vector3
ÈÈ0 7
(
ÈÈ7 8
O
ÈÈ8 9
.
ÈÈ9 :
x
ÈÈ: ;
-
ÈÈ< =
	kTickSize
ÈÈ> G
,
ÈÈG H
O
ÈÈI J
.
ÈÈJ K
y
ÈÈK L
)
ÈÈL M
)
ÈÈM N
;
ÈÈN O
Handles
ÉÉ 
.
ÉÉ  
DrawLine
ÉÉ  (
(
ÉÉ( )
N
ÉÉ) *
,
ÉÉ* +
new
ÉÉ, /
Vector3
ÉÉ0 7
(
ÉÉ7 8
N
ÉÉ8 9
.
ÉÉ9 :
x
ÉÉ: ;
-
ÉÉ< =
	kTickSize
ÉÉ> G
,
ÉÉG H
N
ÉÉI J
.
ÉÉJ K
y
ÉÉK L
)
ÉÉL M
)
ÉÉM N
;
ÉÉN O
Handles
ÊÊ 
.
ÊÊ  
DrawLine
ÊÊ  (
(
ÊÊ( )
M
ÊÊ) *
,
ÊÊ* +
new
ÊÊ, /
Vector3
ÊÊ0 7
(
ÊÊ7 8
M
ÊÊ8 9
.
ÊÊ9 :
x
ÊÊ: ;
-
ÊÊ< =
	kTickSize
ÊÊ> G
,
ÊÊG H
M
ÊÊI J
.
ÊÊJ K
y
ÊÊK L
)
ÊÊL M
)
ÊÊM N
;
ÊÊN O
Handles
ÌÌ 
.
ÌÌ  
DrawLine
ÌÌ  (
(
ÌÌ( )
E
ÌÌ) *
,
ÌÌ* +
new
ÌÌ, /
Vector3
ÌÌ0 7
(
ÌÌ7 8
E
ÌÌ8 9
.
ÌÌ9 :
x
ÌÌ: ;
+
ÌÌ< =
	kTickSize
ÌÌ> G
,
ÌÌG H
E
ÌÌI J
.
ÌÌJ K
y
ÌÌK L
)
ÌÌL M
)
ÌÌM N
;
ÌÌN O
Handles
ÍÍ 
.
ÍÍ  
DrawLine
ÍÍ  (
(
ÍÍ( )
F
ÍÍ) *
,
ÍÍ* +
new
ÍÍ, /
Vector3
ÍÍ0 7
(
ÍÍ7 8
F
ÍÍ8 9
.
ÍÍ9 :
x
ÍÍ: ;
+
ÍÍ< =
	kTickSize
ÍÍ> G
,
ÍÍG H
F
ÍÍI J
.
ÍÍJ K
y
ÍÍK L
)
ÍÍL M
)
ÍÍM N
;
ÍÍN O
Handles
ÎÎ 
.
ÎÎ  
DrawLine
ÎÎ  (
(
ÎÎ( )
G
ÎÎ) *
,
ÎÎ* +
new
ÎÎ, /
Vector3
ÎÎ0 7
(
ÎÎ7 8
G
ÎÎ8 9
.
ÎÎ9 :
x
ÎÎ: ;
+
ÎÎ< =
	kTickSize
ÎÎ> G
,
ÎÎG H
G
ÎÎI J
.
ÎÎJ K
y
ÎÎK L
)
ÎÎL M
)
ÎÎM N
;
ÎÎN O
Handles
ÏÏ 
.
ÏÏ  
DrawLine
ÏÏ  (
(
ÏÏ( )
H
ÏÏ) *
,
ÏÏ* +
new
ÏÏ, /
Vector3
ÏÏ0 7
(
ÏÏ7 8
H
ÏÏ8 9
.
ÏÏ9 :
x
ÏÏ: ;
+
ÏÏ< =
	kTickSize
ÏÏ> G
,
ÏÏG H
H
ÏÏI J
.
ÏÏJ K
y
ÏÏK L
)
ÏÏL M
)
ÏÏM N
;
ÏÏN O
Handles
ÐÐ 
.
ÐÐ  
DrawLine
ÐÐ  (
(
ÐÐ( )
I
ÐÐ) *
,
ÐÐ* +
new
ÐÐ, /
Vector3
ÐÐ0 7
(
ÐÐ7 8
I
ÐÐ8 9
.
ÐÐ9 :
x
ÐÐ: ;
+
ÐÐ< =
	kTickSize
ÐÐ> G
,
ÐÐG H
I
ÐÐI J
.
ÐÐJ K
y
ÐÐK L
)
ÐÐL M
)
ÐÐM N
;
ÐÐN O
Handles
ÓÓ 
.
ÓÓ  
DrawLine
ÓÓ  (
(
ÓÓ( )
A
ÓÓ) *
,
ÓÓ* +
new
ÓÓ, /
Vector3
ÓÓ0 7
(
ÓÓ7 8
A
ÓÓ8 9
.
ÓÓ9 :
x
ÓÓ: ;
,
ÓÓ; <
A
ÓÓ= >
.
ÓÓ> ?
y
ÓÓ? @
-
ÓÓA B
	kTickSize
ÓÓC L
)
ÓÓL M
)
ÓÓM N
;
ÓÓN O
Handles
ÔÔ 
.
ÔÔ  
DrawLine
ÔÔ  (
(
ÔÔ( )
B
ÔÔ) *
,
ÔÔ* +
new
ÔÔ, /
Vector3
ÔÔ0 7
(
ÔÔ7 8
B
ÔÔ8 9
.
ÔÔ9 :
x
ÔÔ: ;
,
ÔÔ; <
B
ÔÔ= >
.
ÔÔ> ?
y
ÔÔ? @
-
ÔÔA B
	kTickSize
ÔÔC L
)
ÔÔL M
)
ÔÔM N
;
ÔÔN O
Handles
ÕÕ 
.
ÕÕ  
DrawLine
ÕÕ  (
(
ÕÕ( )
C
ÕÕ) *
,
ÕÕ* +
new
ÕÕ, /
Vector3
ÕÕ0 7
(
ÕÕ7 8
C
ÕÕ8 9
.
ÕÕ9 :
x
ÕÕ: ;
,
ÕÕ; <
C
ÕÕ= >
.
ÕÕ> ?
y
ÕÕ? @
-
ÕÕA B
	kTickSize
ÕÕC L
)
ÕÕL M
)
ÕÕM N
;
ÕÕN O
Handles
ÖÖ 
.
ÖÖ  
DrawLine
ÖÖ  (
(
ÖÖ( )
D
ÖÖ) *
,
ÖÖ* +
new
ÖÖ, /
Vector3
ÖÖ0 7
(
ÖÖ7 8
D
ÖÖ8 9
.
ÖÖ9 :
x
ÖÖ: ;
,
ÖÖ; <
D
ÖÖ= >
.
ÖÖ> ?
y
ÖÖ? @
-
ÖÖA B
	kTickSize
ÖÖC L
)
ÖÖL M
)
ÖÖM N
;
ÖÖN O
Handles
×× 
.
××  
DrawLine
××  (
(
××( )
E
××) *
,
××* +
new
××, /
Vector3
××0 7
(
××7 8
E
××8 9
.
××9 :
x
××: ;
,
××; <
E
××= >
.
××> ?
y
××? @
-
××A B
	kTickSize
××C L
)
××L M
)
××M N
;
××N O
Handles
ÙÙ 
.
ÙÙ  
DrawLine
ÙÙ  (
(
ÙÙ( )
M
ÙÙ) *
,
ÙÙ* +
new
ÙÙ, /
Vector3
ÙÙ0 7
(
ÙÙ7 8
M
ÙÙ8 9
.
ÙÙ9 :
x
ÙÙ: ;
,
ÙÙ; <
M
ÙÙ= >
.
ÙÙ> ?
y
ÙÙ? @
+
ÙÙA B
	kTickSize
ÙÙC L
)
ÙÙL M
)
ÙÙM N
;
ÙÙN O
Handles
ÚÚ 
.
ÚÚ  
DrawLine
ÚÚ  (
(
ÚÚ( )
L
ÚÚ) *
,
ÚÚ* +
new
ÚÚ, /
Vector3
ÚÚ0 7
(
ÚÚ7 8
L
ÚÚ8 9
.
ÚÚ9 :
x
ÚÚ: ;
,
ÚÚ; <
L
ÚÚ= >
.
ÚÚ> ?
y
ÚÚ? @
+
ÚÚA B
	kTickSize
ÚÚC L
)
ÚÚL M
)
ÚÚM N
;
ÚÚN O
Handles
ÛÛ 
.
ÛÛ  
DrawLine
ÛÛ  (
(
ÛÛ( )
K
ÛÛ) *
,
ÛÛ* +
new
ÛÛ, /
Vector3
ÛÛ0 7
(
ÛÛ7 8
K
ÛÛ8 9
.
ÛÛ9 :
x
ÛÛ: ;
,
ÛÛ; <
K
ÛÛ= >
.
ÛÛ> ?
y
ÛÛ? @
+
ÛÛA B
	kTickSize
ÛÛC L
)
ÛÛL M
)
ÛÛM N
;
ÛÛN O
Handles
ÜÜ 
.
ÜÜ  
DrawLine
ÜÜ  (
(
ÜÜ( )
J
ÜÜ) *
,
ÜÜ* +
new
ÜÜ, /
Vector3
ÜÜ0 7
(
ÜÜ7 8
J
ÜÜ8 9
.
ÜÜ9 :
x
ÜÜ: ;
,
ÜÜ; <
J
ÜÜ= >
.
ÜÜ> ?
y
ÜÜ? @
+
ÜÜA B
	kTickSize
ÜÜC L
)
ÜÜL M
)
ÜÜM N
;
ÜÜN O
Handles
ÝÝ 
.
ÝÝ  
DrawLine
ÝÝ  (
(
ÝÝ( )
I
ÝÝ) *
,
ÝÝ* +
new
ÝÝ, /
Vector3
ÝÝ0 7
(
ÝÝ7 8
I
ÝÝ8 9
.
ÝÝ9 :
x
ÝÝ: ;
,
ÝÝ; <
I
ÝÝ= >
.
ÝÝ> ?
y
ÝÝ? @
+
ÝÝA B
	kTickSize
ÝÝC L
)
ÝÝL M
)
ÝÝM N
;
ÝÝN O
GUI
àà 
.
àà 
color
àà !
=
àà" #
color
àà$ )
;
àà) *
GUI
áá 
.
áá 
Label
áá !
(
áá! "
new
áá" %
Rect
áá& *
(
áá* +
A
áá+ ,
.
áá, -
x
áá- .
-
áá/ 0
	kTickSize
áá1 :
-
áá; <
$num
áá= @
,
áá@ A
A
ááB C
.
ááC D
y
ááD E
-
ááF G
$num
ááH K
,
ááK L
$num
ááM P
,
ááP Q
$num
ááR U
)
ááU V
,
ááV W
$str
ááX ]
,
áá] ^
FxStyles
áá_ g
.
áág h
tickStyleRight
ááh v
)
ááv w
;
ááw x
GUI
ââ 
.
ââ 
Label
ââ !
(
ââ! "
new
ââ" %
Rect
ââ& *
(
ââ* +
O
ââ+ ,
.
ââ, -
x
ââ- .
-
ââ/ 0
	kTickSize
ââ1 :
-
ââ; <
$num
ââ= @
,
ââ@ A
O
ââB C
.
ââC D
y
ââD E
-
ââF G
$num
ââH K
,
ââK L
$num
ââM P
,
ââP Q
$num
ââR U
)
ââU V
,
ââV W
$str
ââX ]
,
ââ] ^
FxStyles
ââ_ g
.
ââg h
tickStyleRight
ââh v
)
ââv w
;
ââw x
GUI
ãã 
.
ãã 
Label
ãã !
(
ãã! "
new
ãã" %
Rect
ãã& *
(
ãã* +
M
ãã+ ,
.
ãã, -
x
ãã- .
-
ãã/ 0
	kTickSize
ãã1 :
-
ãã; <
$num
ãã= @
,
ãã@ A
M
ããB C
.
ããC D
y
ããD E
-
ããF G
$num
ããH K
,
ããK L
$num
ããM P
,
ããP Q
$num
ããR U
)
ããU V
,
ããV W
$str
ããX ]
,
ãã] ^
FxStyles
ãã_ g
.
ããg h
tickStyleRight
ããh v
)
ããv w
;
ããw x
GUI
åå 
.
åå 
Label
åå !
(
åå! "
new
åå" %
Rect
åå& *
(
åå* +
E
åå+ ,
.
åå, -
x
åå- .
+
åå/ 0
	kTickSize
åå1 :
+
åå; <
$num
åå= ?
,
åå? @
E
ååA B
.
ååB C
y
ååC D
-
ååE F
$num
ååG J
,
ååJ K
$num
ååL O
,
ååO P
$num
ååQ T
)
ååT U
,
ååU V
$str
ååW \
,
åå\ ]
FxStyles
åå^ f
.
ååf g
tickStyleLeft
ååg t
)
ååt u
;
ååu v
GUI
ææ 
.
ææ 
Label
ææ !
(
ææ! "
new
ææ" %
Rect
ææ& *
(
ææ* +
G
ææ+ ,
.
ææ, -
x
ææ- .
+
ææ/ 0
	kTickSize
ææ1 :
+
ææ; <
$num
ææ= ?
,
ææ? @
G
ææA B
.
ææB C
y
ææC D
-
ææE F
$num
ææG J
,
ææJ K
$num
ææL O
,
ææO P
$num
ææQ T
)
ææT U
,
ææU V
$str
ææW \
,
ææ\ ]
FxStyles
ææ^ f
.
ææf g
tickStyleLeft
ææg t
)
ææt u
;
ææu v
GUI
çç 
.
çç 
Label
çç !
(
çç! "
new
çç" %
Rect
çç& *
(
çç* +
I
çç+ ,
.
çç, -
x
çç- .
+
çç/ 0
	kTickSize
çç1 :
+
çç; <
$num
çç= ?
,
çç? @
I
ççA B
.
ççB C
y
ççC D
-
ççE F
$num
ççG J
,
ççJ K
$num
ççL O
,
ççO P
$num
ççQ T
)
ççT U
,
ççU V
$str
ççW \
,
çç\ ]
FxStyles
çç^ f
.
ççf g
tickStyleLeft
ççg t
)
ççt u
;
ççu v
GUI
éé 
.
éé 
Label
éé !
(
éé! "
new
éé" %
Rect
éé& *
(
éé* +
M
éé+ ,
.
éé, -
x
éé- .
-
éé/ 0
$num
éé1 4
,
éé4 5
M
éé6 7
.
éé7 8
y
éé8 9
+
éé: ;
	kTickSize
éé< E
-
ééF G
$num
ééH J
,
ééJ K
$num
ééL O
,
ééO P
$num
ééQ T
)
ééT U
,
ééU V
$str
ééW \
,
éé\ ]
FxStyles
éé^ f
.
ééf g
tickStyleCenter
éég v
)
éév w
;
ééw x
GUI
êê 
.
êê 
Label
êê !
(
êê! "
new
êê" %
Rect
êê& *
(
êê* +
K
êê+ ,
.
êê, -
x
êê- .
-
êê/ 0
$num
êê1 4
,
êê4 5
K
êê6 7
.
êê7 8
y
êê8 9
+
êê: ;
	kTickSize
êê< E
-
êêF G
$num
êêH J
,
êêJ K
$num
êêL O
,
êêO P
$num
êêQ T
)
êêT U
,
êêU V
$str
êêW \
,
êê\ ]
FxStyles
êê^ f
.
êêf g
tickStyleCenter
êêg v
)
êêv w
;
êêw x
GUI
ëë 
.
ëë 
Label
ëë !
(
ëë! "
new
ëë" %
Rect
ëë& *
(
ëë* +
I
ëë+ ,
.
ëë, -
x
ëë- .
-
ëë/ 0
$num
ëë1 4
,
ëë4 5
I
ëë6 7
.
ëë7 8
y
ëë8 9
+
ëë: ;
	kTickSize
ëë< E
-
ëëF G
$num
ëëH J
,
ëëJ K
$num
ëëL O
,
ëëO P
$num
ëëQ T
)
ëëT U
,
ëëU V
$str
ëëW \
,
ëë\ ]
FxStyles
ëë^ f
.
ëëf g
tickStyleCenter
ëëg v
)
ëëv w
;
ëëw x
}
ìì 
}
íí 
}
îî 
}
ïï 	
public
ññ 
override
ññ 
void
ññ 
OnFrameData
ññ (
(
ññ( )
RenderTexture
ññ) 6
source
ññ7 =
)
ññ= >
{
òò 	
if
óó 
(
óó 
Application
óó 
.
óó 
	isPlaying
óó %
&&
óó& (
!
óó) *
m_MonitorSettings
óó* ;
.
óó; <
refreshOnPlay
óó< I
)
óóI J
return
ôô 
;
ôô 
if
öö 
(
öö 
Mathf
öö 
.
öö 
Approximately
öö #
(
öö# $
m_MonitorAreaRect
öö$ 5
.
öö5 6
width
öö6 ;
,
öö; <
$num
öö= >
)
öö> ?
||
öö@ B
Mathf
ööC H
.
ööH I
Approximately
ööI V
(
ööV W
m_MonitorAreaRect
ööW h
.
ööh i
height
ööi o
,
ööo p
$num
ööq r
)
öör s
)
öös t
return
÷÷ 
;
÷÷ 
float
ùù 
ratio
ùù 
=
ùù 
(
ùù 
float
ùù  
)
ùù  !
source
ùù! '
.
ùù' (
width
ùù( -
/
ùù. /
(
ùù0 1
float
ùù1 6
)
ùù6 7
source
ùù7 =
.
ùù= >
height
ùù> D
;
ùùD E
int
úú 
h
úú 
=
úú 
$num
úú 
;
úú 
int
ûû 
w
ûû 
=
ûû 
Mathf
ûû 
.
ûû 

FloorToInt
ûû $
(
ûû$ %
h
ûû% &
*
ûû' (
ratio
ûû) .
)
ûû. /
;
ûû/ 0
var
ýý 
rt
ýý 
=
ýý 
RenderTexture
ýý "
.
ýý" #
GetTemporary
ýý# /
(
ýý/ 0
w
ýý0 1
,
ýý1 2
h
ýý3 4
,
ýý4 5
$num
ýý6 7
,
ýý7 8
source
ýý9 ?
.
ýý? @
format
ýý@ F
)
ýýF G
;
ýýG H
Graphics
þþ 
.
þþ 
Blit
þþ 
(
þþ 
source
þþ  
,
þþ  !
rt
þþ" $
)
þþ$ %
;
þþ% &
ComputeHistogram
ÿÿ 
(
ÿÿ 
rt
ÿÿ 
)
ÿÿ  
;
ÿÿ  !
m_BaseEditor
 
.
 
Repaint
  
(
  !
)
! "
;
" #
RenderTexture
 
.
 
ReleaseTemporary
 *
(
* +
rt
+ -
)
- .
;
. /
}
 	
void
 
CreateBuffer
 
(
 
int
 
width
 #
,
# $
int
% (
height
) /
)
/ 0
{
 	
m_Buffer
 
=
 
new
 
ComputeBuffer
 (
(
( )
width
) .
*
/ 0
height
1 7
,
7 8
sizeof
9 ?
(
? @
uint
@ D
)
D E
<<
F H
$num
I J
)
J K
;
K L
}
 	
void
 
ComputeHistogram
 
(
 
RenderTexture
 +
source
, 2
)
2 3
{
 	
if
 
(
 
m_Buffer
 
==
 
null
  
)
  !
{
 
CreateBuffer
 
(
 
$num
  
,
  !
$num
" #
)
# $
;
$ %
}
 
else
 
if
 
(
 
m_Buffer
 
.
 
count
 #
!=
$ &
$num
' *
)
* +
{
 
m_Buffer
 
.
 
Release
  
(
  !
)
! "
;
" #
CreateBuffer
 
(
 
$num
  
,
  !
$num
" #
)
# $
;
$ %
}
 
if
 
(
 

m_Material
 
==
 
null
 "
)
" #
{
 

m_Material
 
=
 
new
  
Material
! )
(
) *
Shader
* 0
.
0 1
Find
1 5
(
5 6
$str
6 `
)
` a
)
a b
{
c d
	hideFlags
e n
=
o p
	HideFlags
q z
.
z {
DontSave{ 
} 
; 
}
 
var
 
channels
 
=
 
Vector4
 "
.
" #
zero
# '
;
' (
switch
 
(
 
m_MonitorSettings
 %
.
% &
histogramMode
& 3
)
3 4
{
 
case
 
HistogramMode
 "
.
" #
Red
# &
:
& '
channels
( 0
.
0 1
x
1 2
=
3 4
$num
5 7
;
7 8
break
9 >
;
> ?
case
 
HistogramMode
 "
.
" #
Green
# (
:
( )
channels
* 2
.
2 3
y
3 4
=
5 6
$num
7 9
;
9 :
break
; @
;
@ A
case
 
HistogramMode
 "
.
" #
Blue
# '
:
' (
channels
) 1
.
1 2
z
2 3
=
4 5
$num
6 8
;
8 9
break
: ?
;
? @
case
   
HistogramMode
   "
.
  " #
	Luminance
  # ,
:
  , -
channels
  . 6
.
  6 7
w
  7 8
=
  9 :
$num
  ; =
;
  = >
break
  ? D
;
  D E
default
¡¡ 
:
¡¡ 
channels
¡¡ !
=
¡¡" #
new
¡¡$ '
Vector4
¡¡( /
(
¡¡/ 0
$num
¡¡0 2
,
¡¡2 3
$num
¡¡4 6
,
¡¡6 7
$num
¡¡8 :
,
¡¡: ;
$num
¡¡< >
)
¡¡> ?
;
¡¡? @
break
¡¡A F
;
¡¡F G
}
¢¢ 
var
¤¤ 
cs
¤¤ 
=
¤¤ 
m_ComputeShader
¤¤ $
;
¤¤$ %
int
¦¦ 
kernel
¦¦ 
=
¦¦ 
cs
¦¦ 
.
¦¦ 

FindKernel
¦¦ &
(
¦¦& '
$str
¦¦' 8
)
¦¦8 9
;
¦¦9 :
cs
§§ 
.
§§ 
	SetBuffer
§§ 
(
§§ 
kernel
§§ 
,
§§  
$str
§§! -
,
§§- .
m_Buffer
§§/ 7
)
§§7 8
;
§§8 9
cs
¨¨ 
.
¨¨ 
Dispatch
¨¨ 
(
¨¨ 
kernel
¨¨ 
,
¨¨ 
$num
¨¨  !
,
¨¨! "
$num
¨¨# $
,
¨¨$ %
$num
¨¨& '
)
¨¨' (
;
¨¨( )
kernel
ªª 
=
ªª 
cs
ªª 
.
ªª 

FindKernel
ªª "
(
ªª" #
$str
ªª# 5
)
ªª5 6
;
ªª6 7
cs
«« 
.
«« 
	SetBuffer
«« 
(
«« 
kernel
«« 
,
««  
$str
««! -
,
««- .
m_Buffer
««/ 7
)
««7 8
;
««8 9
cs
¬¬ 
.
¬¬ 

SetTexture
¬¬ 
(
¬¬ 
kernel
¬¬  
,
¬¬  !
$str
¬¬" +
,
¬¬+ ,
source
¬¬- 3
)
¬¬3 4
;
¬¬4 5
cs
­­ 
.
­­ 
SetInt
­­ 
(
­­ 
$str
­­ !
,
­­! "
GraphicsUtils
­­# 0
.
­­0 1 
isLinearColorSpace
­­1 C
?
­­D E
$num
­­F G
:
­­H I
$num
­­J K
)
­­K L
;
­­L M
cs
®® 
.
®® 
	SetVector
®® 
(
®® 
$str
®® 
,
®®  
new
®®! $
Vector4
®®% ,
(
®®, -
source
®®- 3
.
®®3 4
width
®®4 9
,
®®9 :
source
®®; A
.
®®A B
height
®®B H
,
®®H I
$num
®®J L
,
®®L M
$num
®®N P
)
®®P Q
)
®®Q R
;
®®R S
cs
¯¯ 
.
¯¯ 
	SetVector
¯¯ 
(
¯¯ 
$str
¯¯ $
,
¯¯$ %
channels
¯¯& .
)
¯¯. /
;
¯¯/ 0
cs
°° 
.
°° 
Dispatch
°° 
(
°° 
kernel
°° 
,
°° 
Mathf
°°  %
.
°°% &
	CeilToInt
°°& /
(
°°/ 0
source
°°0 6
.
°°6 7
width
°°7 <
/
°°= >
$num
°°? B
)
°°B C
,
°°C D
Mathf
°°E J
.
°°J K
	CeilToInt
°°K T
(
°°T U
source
°°U [
.
°°[ \
height
°°\ b
/
°°c d
$num
°°e h
)
°°h i
,
°°i j
$num
°°k l
)
°°l m
;
°°m n
kernel
²² 
=
²² 
cs
²² 
.
²² 

FindKernel
²² "
(
²²" #
$str
²²# 4
)
²²4 5
;
²²5 6
cs
³³ 
.
³³ 
	SetBuffer
³³ 
(
³³ 
kernel
³³ 
,
³³  
$str
³³! -
,
³³- .
m_Buffer
³³/ 7
)
³³7 8
;
³³8 9
cs
´´ 
.
´´ 
Dispatch
´´ 
(
´´ 
kernel
´´ 
,
´´ 
$num
´´  !
,
´´! "
$num
´´# $
,
´´$ %
$num
´´& '
)
´´' (
;
´´( )
if
¶¶ 
(
¶¶  
m_HistogramTexture
¶¶ "
==
¶¶# %
null
¶¶& *
||
¶¶+ - 
m_HistogramTexture
¶¶. @
.
¶¶@ A
width
¶¶A F
!=
¶¶G I
source
¶¶J P
.
¶¶P Q
width
¶¶Q V
||
¶¶W Y 
m_HistogramTexture
¶¶Z l
.
¶¶l m
height
¶¶m s
!=
¶¶t v
source
¶¶w }
.
¶¶} ~
height¶¶~ 
)¶¶ 
{
·· 
GraphicsUtils
¸¸ 
.
¸¸ 
Destroy
¸¸ %
(
¸¸% & 
m_HistogramTexture
¸¸& 8
)
¸¸8 9
;
¸¸9 : 
m_HistogramTexture
¹¹ "
=
¹¹# $
new
¹¹% (
RenderTexture
¹¹) 6
(
¹¹6 7
source
¹¹7 =
.
¹¹= >
width
¹¹> C
,
¹¹C D
source
¹¹E K
.
¹¹K L
height
¹¹L R
,
¹¹R S
$num
¹¹T U
,
¹¹U V!
RenderTextureFormat
¹¹W j
.
¹¹j k
ARGB32
¹¹k q
,
¹¹q r%
RenderTextureReadWrite¹¹s 
.¹¹ 
Linear¹¹ 
)¹¹ 
{
ºº 
	hideFlags
»» 
=
»» 
	HideFlags
»»  )
.
»») *
DontSave
»»* 2
,
»»2 3
wrapMode
¼¼ 
=
¼¼ 
TextureWrapMode
¼¼ .
.
¼¼. /
Clamp
¼¼/ 4
,
¼¼4 5

filterMode
½½ 
=
½½  

FilterMode
½½! +
.
½½+ ,
Bilinear
½½, 4
}
¾¾ 
;
¾¾ 
}
¿¿ 

m_Material
ÁÁ 
.
ÁÁ 
	SetBuffer
ÁÁ  
(
ÁÁ  !
$str
ÁÁ! -
,
ÁÁ- .
m_Buffer
ÁÁ/ 7
)
ÁÁ7 8
;
ÁÁ8 9

m_Material
ÂÂ 
.
ÂÂ 
	SetVector
ÂÂ  
(
ÂÂ  !
$str
ÂÂ! (
,
ÂÂ( )
new
ÂÂ* -
Vector2
ÂÂ. 5
(
ÂÂ5 6 
m_HistogramTexture
ÂÂ6 H
.
ÂÂH I
width
ÂÂI N
,
ÂÂN O 
m_HistogramTexture
ÂÂP b
.
ÂÂb c
height
ÂÂc i
)
ÂÂi j
)
ÂÂj k
;
ÂÂk l

m_Material
ÃÃ 
.
ÃÃ 
SetColor
ÃÃ 
(
ÃÃ  
$str
ÃÃ  )
,
ÃÃ) *
new
ÃÃ+ .
Color
ÃÃ/ 4
(
ÃÃ4 5
$num
ÃÃ5 7
,
ÃÃ7 8
$num
ÃÃ9 ;
,
ÃÃ; <
$num
ÃÃ= ?
,
ÃÃ? @
$num
ÃÃA C
)
ÃÃC D
)
ÃÃD E
;
ÃÃE F

m_Material
ÄÄ 
.
ÄÄ 
SetColor
ÄÄ 
(
ÄÄ  
$str
ÄÄ  )
,
ÄÄ) *
new
ÄÄ+ .
Color
ÄÄ/ 4
(
ÄÄ4 5
$num
ÄÄ5 7
,
ÄÄ7 8
$num
ÄÄ9 ;
,
ÄÄ; <
$num
ÄÄ= ?
,
ÄÄ? @
$num
ÄÄA C
)
ÄÄC D
)
ÄÄD E
;
ÄÄE F

m_Material
ÅÅ 
.
ÅÅ 
SetColor
ÅÅ 
(
ÅÅ  
$str
ÅÅ  )
,
ÅÅ) *
new
ÅÅ+ .
Color
ÅÅ/ 4
(
ÅÅ4 5
$num
ÅÅ5 7
,
ÅÅ7 8
$num
ÅÅ9 ;
,
ÅÅ; <
$num
ÅÅ= ?
,
ÅÅ? @
$num
ÅÅA C
)
ÅÅC D
)
ÅÅD E
;
ÅÅE F

m_Material
ÆÆ 
.
ÆÆ 
SetColor
ÆÆ 
(
ÆÆ  
$str
ÆÆ  )
,
ÆÆ) *
new
ÆÆ+ .
Color
ÆÆ/ 4
(
ÆÆ4 5
$num
ÆÆ5 7
,
ÆÆ7 8
$num
ÆÆ9 ;
,
ÆÆ; <
$num
ÆÆ= ?
,
ÆÆ? @
$num
ÆÆA C
)
ÆÆC D
)
ÆÆD E
;
ÆÆE F

m_Material
ÇÇ 
.
ÇÇ 
SetInt
ÇÇ 
(
ÇÇ 
$str
ÇÇ (
,
ÇÇ( )
(
ÇÇ* +
int
ÇÇ+ .
)
ÇÇ. /
m_MonitorSettings
ÇÇ/ @
.
ÇÇ@ A
histogramMode
ÇÇA N
)
ÇÇN O
;
ÇÇO P
int
ÉÉ 
pass
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
if
ÊÊ 
(
ÊÊ 
m_MonitorSettings
ÊÊ !
.
ÊÊ! "
histogramMode
ÊÊ" /
==
ÊÊ0 2
HistogramMode
ÊÊ3 @
.
ÊÊ@ A
	RGBMerged
ÊÊA J
)
ÊÊJ K
pass
ËË 
=
ËË 
$num
ËË 
;
ËË 
else
ÌÌ 
if
ÌÌ 
(
ÌÌ 
m_MonitorSettings
ÌÌ &
.
ÌÌ& '
histogramMode
ÌÌ' 4
==
ÌÌ5 7
HistogramMode
ÌÌ8 E
.
ÌÌE F
RGBSplit
ÌÌF N
)
ÌÌN O
pass
ÍÍ 
=
ÍÍ 
$num
ÍÍ 
;
ÍÍ 
Graphics
ÏÏ 
.
ÏÏ 
Blit
ÏÏ 
(
ÏÏ 
null
ÏÏ 
,
ÏÏ  
m_HistogramTexture
ÏÏ  2
,
ÏÏ2 3

m_Material
ÏÏ4 >
,
ÏÏ> ?
pass
ÏÏ@ D
)
ÏÏD E
;
ÏÏE F
}
ÐÐ 	
}
ÑÑ 
}ÒÒ íÇ
¹D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Monitors\ParadeMonitor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
public 

class 
ParadeMonitor 
:  !
PostProcessingMonitor! 6
{ 
static		 

GUIContent		 
s_MonitorTitle		 (
=		) *
new		+ .

GUIContent		/ 9
(		9 :
$str		: B
)		B C
;		C D
ComputeShader 
m_ComputeShader %
;% &
ComputeBuffer 
m_Buffer 
; 
Material 

m_Material 
; 
RenderTexture 
m_WaveformTexture '
;' (
Rect 
m_MonitorAreaRect 
; 
public 
ParadeMonitor 
( 
) 
{ 	
m_ComputeShader 
= 
EditorResources -
.- .
Load. 2
<2 3
ComputeShader3 @
>@ A
(A B
$strB d
)d e
;e f
} 	
public 
override 
void 
Dispose $
($ %
)% &
{ 	
GraphicsUtils 
. 
Destroy !
(! "

m_Material" ,
), -
;- .
GraphicsUtils 
. 
Destroy !
(! "
m_WaveformTexture" 3
)3 4
;4 5
if 
( 
m_Buffer 
!= 
null  
)  !
m_Buffer 
. 
Release  
(  !
)! "
;" #

m_Material 
= 
null 
; 
m_WaveformTexture 
= 
null  $
;$ %
m_Buffer   
=   
null   
;   
}!! 	
public## 
override## 
bool## 
IsSupported## (
(##( )
)##) *
{$$ 	
return%% 
m_ComputeShader%% "
!=%%# %
null%%& *
&&%%+ -
GraphicsUtils%%. ;
.%%; <
supportsDX11%%< H
;%%H I
}&& 	
public(( 
override(( 

GUIContent(( "
GetMonitorTitle((# 2
(((2 3
)((3 4
{)) 	
return** 
s_MonitorTitle** !
;**! "
}++ 	
public-- 
override-- 
void-- 
OnMonitorSettings-- .
(--. /
)--/ 0
{.. 	
	EditorGUI// 
.// 
BeginChangeCheck// &
(//& '
)//' (
;//( )
bool11 
refreshOnPlay11 
=11  
m_MonitorSettings11! 2
.112 3
refreshOnPlay113 @
;11@ A
float22 
exposure22 
=22 
m_MonitorSettings22 .
.22. /
paradeExposure22/ =
;22= >
refreshOnPlay44 
=44 
	GUILayout44 %
.44% &
Toggle44& ,
(44, -
refreshOnPlay44- :
,44: ;
new44< ?

GUIContent44@ J
(44J K
FxStyles44K S
.44S T
playIcon44T \
,44\ ]
$str	44^ ¦
)
44¦ §
,
44§ ¨
FxStyles
44© ±
.
44± ²
	preButton
44² »
)
44» ¼
;
44¼ ½
exposure55 
=55 
	GUILayout55  
.55  !
HorizontalSlider55! 1
(551 2
exposure552 :
,55: ;
$num55< A
,55A B
$num55C G
,55G H
FxStyles55I Q
.55Q R
	preSlider55R [
,55[ \
FxStyles55] e
.55e f
preSliderThumb55f t
,55t u
	GUILayout55v 
.	55 
Width
55 
(
55 
$num
55 
)
55 
)
55 
;
55 
if77 
(77 
	EditorGUI77 
.77 
EndChangeCheck77 (
(77( )
)77) *
)77* +
{88 
Undo99 
.99 
RecordObject99 !
(99! "
m_BaseEditor99" .
.99. /
serializedObject99/ ?
.99? @
targetObject99@ L
,99L M
$str99N g
)99g h
;99h i
m_MonitorSettings:: !
.::! "
refreshOnPlay::" /
=::0 1
refreshOnPlay::2 ?
;::? @
m_MonitorSettings;; !
.;;! "
paradeExposure;;" 0
=;;1 2
exposure;;3 ;
;;;; <!
InternalEditorUtility<< %
.<<% &
RepaintAllViews<<& 5
(<<5 6
)<<6 7
;<<7 8
}== 
}>> 	
public@@ 
override@@ 
void@@ 
OnMonitorGUI@@ )
(@@) *
Rect@@* .
r@@/ 0
)@@0 1
{AA 	
ifBB 
(BB 
EventBB 
.BB 
currentBB 
.BB 
typeBB "
==BB# %
	EventTypeBB& /
.BB/ 0
RepaintBB0 7
)BB7 8
{CC 
ifEE 
(EE 
MathfEE 
.EE 
ApproximatelyEE '
(EE' (
m_MonitorAreaRectEE( 9
.EE9 :
widthEE: ?
,EE? @
$numEEA B
)EEB C
&&EED F
MathfEEG L
.EEL M
ApproximatelyEEM Z
(EEZ [
m_MonitorAreaRectEE[ l
.EEl m
heightEEm s
,EEs t
$numEEu v
)EEv w
)EEw x!
InternalEditorUtilityFF )
.FF) *
RepaintAllViewsFF* 9
(FF9 :
)FF: ;
;FF; <
floatII 
widthII 
=II 
m_WaveformTextureII /
!=II0 2
nullII3 7
?JJ 
MathfJJ 
.JJ 
MinJJ 
(JJ  
m_WaveformTextureJJ  1
.JJ1 2
widthJJ2 7
,JJ7 8
rJJ9 :
.JJ: ;
widthJJ; @
-JJA B
$numJJC F
)JJF G
:KK 
rKK 
.KK 
widthKK 
;KK 
floatLL 
heightLL 
=LL 
m_WaveformTextureLL 0
!=LL1 3
nullLL4 8
?MM 
MathfMM 
.MM 
MinMM 
(MM  
m_WaveformTextureMM  1
.MM1 2
heightMM2 8
,MM8 9
rMM: ;
.MM; <
heightMM< B
-MMC D
$numMME H
)MMH I
:NN 
rNN 
.NN 
heightNN 
;NN 
m_MonitorAreaRectPP !
=PP" #
newPP$ '
RectPP( ,
(PP, -
MathfQQ 
.QQ 
FloorQQ #
(QQ# $
rQQ$ %
.QQ% &
xQQ& '
+QQ( )
rQQ* +
.QQ+ ,
widthQQ, 1
/QQ2 3
$numQQ4 6
-QQ7 8
widthQQ9 >
/QQ? @
$numQQA C
)QQC D
,QQD E
MathfRR 
.RR 
FloorRR #
(RR# $
rRR$ %
.RR% &
yRR& '
+RR( )
rRR* +
.RR+ ,
heightRR, 2
/RR3 4
$numRR5 7
-RR8 9
heightRR: @
/RRA B
$numRRC E
-RRF G
$numRRH J
)RRJ K
,RRK L
widthSS 
,SS 
heightSS %
)TT 
;TT 
ifVV 
(VV 
m_WaveformTextureVV %
!=VV& (
nullVV) -
)VV- .
{WW 

m_MaterialXX 
.XX 
SetFloatXX '
(XX' (
$strXX( 3
,XX3 4
m_MonitorSettingsXX5 F
.XXF G
paradeExposureXXG U
)XXU V
;XXV W
varZZ 
	oldActiveZZ !
=ZZ" #
RenderTextureZZ$ 1
.ZZ1 2
activeZZ2 8
;ZZ8 9
Graphics[[ 
.[[ 
Blit[[ !
([[! "
null[[" &
,[[& '
m_WaveformTexture[[( 9
,[[9 :

m_Material[[; E
,[[E F
$num[[G H
)[[H I
;[[I J
RenderTexture\\ !
.\\! "
active\\" (
=\\) *
	oldActive\\+ 4
;\\4 5
Graphics^^ 
.^^ 
DrawTexture^^ (
(^^( )
m_MonitorAreaRect^^) :
,^^: ;
m_WaveformTexture^^< M
)^^M N
;^^N O
var`` 
color`` 
=`` 
Color``  %
.``% &
white``& +
;``+ ,
constaa 
floataa 
	kTickSizeaa  )
=aa* +
$numaa, .
;aa. /
varjj 
Ajj 
=jj 
newjj 
Vector3jj  '
(jj' (
m_MonitorAreaRectjj( 9
.jj9 :
xjj: ;
,jj; <
m_MonitorAreaRectjj= N
.jjN O
yjjO P
)jjP Q
;jjQ R
varkk 
Dkk 
=kk 
newkk 
Vector3kk  '
(kk' (
Akk( )
.kk) *
xkk* +
+kk, -
m_MonitorAreaRectkk. ?
.kk? @
widthkk@ E
+kkF G
$numkkH J
,kkJ K
m_MonitorAreaRectkkL ]
.kk] ^
ykk^ _
)kk_ `
;kk` a
varll 
Hll 
=ll 
newll 
Vector3ll  '
(ll' (
Dll( )
.ll) *
xll* +
,ll+ ,
Dll- .
.ll. /
yll/ 0
+ll1 2
m_MonitorAreaRectll3 D
.llD E
heightllE K
+llL M
$numllN P
)llP Q
;llQ R
varmm 
Kmm 
=mm 
newmm 
Vector3mm  '
(mm' (
Amm( )
.mm) *
xmm* +
,mm+ ,
Hmm- .
.mm. /
ymm/ 0
)mm0 1
;mm1 2
varoo 
Foo 
=oo 
newoo 
Vector3oo  '
(oo' (
Doo( )
.oo) *
xoo* +
,oo+ ,
Doo- .
.oo. /
yoo/ 0
+oo1 2
(oo3 4
Hoo4 5
.oo5 6
yoo6 7
-oo8 9
Doo: ;
.oo; <
yoo< =
)oo= >
/oo? @
$numooA C
)ooC D
;ooD E
varpp 
Mpp 
=pp 
newpp 
Vector3pp  '
(pp' (
App( )
.pp) *
xpp* +
,pp+ ,
App- .
.pp. /
ypp/ 0
+pp1 2
(pp3 4
Kpp4 5
.pp5 6
ypp6 7
-pp8 9
App: ;
.pp; <
ypp< =
)pp= >
/pp? @
$numppA C
)ppC D
;ppD E
varrr 
Brr 
=rr 
newrr 
Vector3rr  '
(rr' (
Arr( )
.rr) *
xrr* +
+rr, -
(rr. /
Drr/ 0
.rr0 1
xrr1 2
-rr3 4
Arr5 6
.rr6 7
xrr7 8
)rr8 9
/rr: ;
$numrr< >
,rr> ?
Arr@ A
.rrA B
yrrB C
)rrC D
;rrD E
varss 
Css 
=ss 
newss 
Vector3ss  '
(ss' (
Ass( )
.ss) *
xss* +
+ss, -
(ss. /
Dss/ 0
.ss0 1
xss1 2
-ss3 4
Ass5 6
.ss6 7
xss7 8
)ss8 9
*ss: ;
$numss< >
/ss? @
$numssA C
,ssC D
AssE F
.ssF G
yssG H
)ssH I
;ssI J
vartt 
Itt 
=tt 
newtt 
Vector3tt  '
(tt' (
Ktt( )
.tt) *
xtt* +
+tt, -
(tt. /
Htt/ 0
.tt0 1
xtt1 2
-tt3 4
Ktt5 6
.tt6 7
xtt7 8
)tt8 9
*tt: ;
$numtt< >
/tt? @
$numttA C
,ttC D
KttE F
.ttF G
yttG H
)ttH I
;ttI J
varuu 
Juu 
=uu 
newuu 
Vector3uu  '
(uu' (
Kuu( )
.uu) *
xuu* +
+uu, -
(uu. /
Huu/ 0
.uu0 1
xuu1 2
-uu3 4
Kuu5 6
.uu6 7
xuu7 8
)uu8 9
/uu: ;
$numuu< >
,uu> ?
Kuu@ A
.uuA B
yuuB C
)uuC D
;uuD E
varww 
Nww 
=ww 
newww 
Vector3ww  '
(ww' (
Aww( )
.ww) *
xww* +
,ww+ ,
Aww- .
.ww. /
yww/ 0
+ww1 2
(ww3 4
Mww4 5
.ww5 6
yww6 7
-ww8 9
Aww: ;
.ww; <
yww< =
)ww= >
/ww? @
$numwwA C
)wwC D
;wwD E
varxx 
Lxx 
=xx 
newxx 
Vector3xx  '
(xx' (
Axx( )
.xx) *
xxx* +
,xx+ ,
Mxx- .
.xx. /
yxx/ 0
+xx1 2
(xx3 4
Kxx4 5
.xx5 6
yxx6 7
-xx8 9
Mxx: ;
.xx; <
yxx< =
)xx= >
/xx? @
$numxxA C
)xxC D
;xxD E
varyy 
Eyy 
=yy 
newyy 
Vector3yy  '
(yy' (
Dyy( )
.yy) *
xyy* +
,yy+ ,
Dyy- .
.yy. /
yyy/ 0
+yy1 2
(yy3 4
Fyy4 5
.yy5 6
yyy6 7
-yy8 9
Dyy: ;
.yy; <
yyy< =
)yy= >
/yy? @
$numyyA C
)yyC D
;yyD E
varzz 
Gzz 
=zz 
newzz 
Vector3zz  '
(zz' (
Dzz( )
.zz) *
xzz* +
,zz+ ,
Fzz- .
.zz. /
yzz/ 0
+zz1 2
(zz3 4
Hzz4 5
.zz5 6
yzz6 7
-zz8 9
Fzz: ;
.zz; <
yzz< =
)zz= >
/zz? @
$numzzA C
)zzC D
;zzD E
var|| 
O|| 
=|| 
new|| 
Vector3||  '
(||' (
A||( )
.||) *
x||* +
+||, -
(||. /
B||/ 0
.||0 1
x||1 2
-||3 4
A||5 6
.||6 7
x||7 8
)||8 9
/||: ;
$num||< >
,||> ?
A||@ A
.||A B
y||B C
)||C D
;||D E
var}} 
P}} 
=}} 
new}} 
Vector3}}  '
(}}' (
B}}( )
.}}) *
x}}* +
+}}, -
(}}. /
C}}/ 0
.}}0 1
x}}1 2
-}}3 4
B}}5 6
.}}6 7
x}}7 8
)}}8 9
/}}: ;
$num}}< >
,}}> ?
B}}@ A
.}}A B
y}}B C
)}}C D
;}}D E
var~~ 
Q~~ 
=~~ 
new~~ 
Vector3~~  '
(~~' (
C~~( )
.~~) *
x~~* +
+~~, -
(~~. /
D~~/ 0
.~~0 1
x~~1 2
-~~3 4
C~~5 6
.~~6 7
x~~7 8
)~~8 9
/~~: ;
$num~~< >
,~~> ?
C~~@ A
.~~A B
y~~B C
)~~C D
;~~D E
var
 
R
 
=
 
new
 
Vector3
  '
(
' (
I
( )
.
) *
x
* +
+
, -
(
. /
H
/ 0
.
0 1
x
1 2
-
3 4
I
5 6
.
6 7
x
7 8
)
8 9
/
: ;
$num
< >
,
> ?
I
@ A
.
A B
y
B C
)
C D
;
D E
var
 
S
 
=
 
new
 
Vector3
  '
(
' (
J
( )
.
) *
x
* +
+
, -
(
. /
I
/ 0
.
0 1
x
1 2
-
3 4
J
5 6
.
6 7
x
7 8
)
8 9
/
: ;
$num
< >
,
> ?
J
@ A
.
A B
y
B C
)
C D
;
D E
var
 
T
 
=
 
new
 
Vector3
  '
(
' (
K
( )
.
) *
x
* +
+
, -
(
. /
J
/ 0
.
0 1
x
1 2
-
3 4
K
5 6
.
6 7
x
7 8
)
8 9
/
: ;
$num
< >
,
> ?
K
@ A
.
A B
y
B C
)
C D
;
D E
Handles
 
.
 
color
 !
=
" #
color
$ )
;
) *
Handles
 
.
 
DrawLine
 $
(
$ %
A
% &
,
& '
D
( )
)
) *
;
* +
Handles
 
.
 
DrawLine
 $
(
$ %
D
% &
,
& '
H
( )
)
) *
;
* +
Handles
 
.
 
DrawLine
 $
(
$ %
H
% &
,
& '
K
( )
)
) *
;
* +
Handles
 
.
 
DrawLine
 $
(
$ %
K
% &
,
& '
new
( +
Vector3
, 3
(
3 4
A
4 5
.
5 6
x
6 7
,
7 8
A
9 :
.
: ;
y
; <
-
= >
$num
? A
)
A B
)
B C
;
C D
Handles
 
.
 
DrawLine
 $
(
$ %
B
% &
,
& '
J
( )
)
) *
;
* +
Handles
 
.
 
DrawLine
 $
(
$ %
C
% &
,
& '
I
( )
)
) *
;
* +
Handles
 
.
 
DrawLine
 $
(
$ %
A
% &
,
& '
new
( +
Vector3
, 3
(
3 4
A
4 5
.
5 6
x
6 7
-
8 9
	kTickSize
: C
,
C D
A
E F
.
F G
y
G H
)
H I
)
I J
;
J K
Handles
 
.
 
DrawLine
 $
(
$ %
N
% &
,
& '
new
( +
Vector3
, 3
(
3 4
N
4 5
.
5 6
x
6 7
-
8 9
	kTickSize
: C
,
C D
N
E F
.
F G
y
G H
)
H I
)
I J
;
J K
Handles
 
.
 
DrawLine
 $
(
$ %
M
% &
,
& '
new
( +
Vector3
, 3
(
3 4
M
4 5
.
5 6
x
6 7
-
8 9
	kTickSize
: C
,
C D
M
E F
.
F G
y
G H
)
H I
)
I J
;
J K
Handles
 
.
 
DrawLine
 $
(
$ %
L
% &
,
& '
new
( +
Vector3
, 3
(
3 4
L
4 5
.
5 6
x
6 7
-
8 9
	kTickSize
: C
,
C D
L
E F
.
F G
y
G H
)
H I
)
I J
;
J K
Handles
 
.
 
DrawLine
 $
(
$ %
K
% &
,
& '
new
( +
Vector3
, 3
(
3 4
K
4 5
.
5 6
x
6 7
-
8 9
	kTickSize
: C
,
C D
K
E F
.
F G
y
G H
)
H I
)
I J
;
J K
Handles
 
.
 
DrawLine
 $
(
$ %
D
% &
,
& '
new
( +
Vector3
, 3
(
3 4
D
4 5
.
5 6
x
6 7
+
8 9
	kTickSize
: C
,
C D
D
E F
.
F G
y
G H
)
H I
)
I J
;
J K
Handles
 
.
 
DrawLine
 $
(
$ %
E
% &
,
& '
new
( +
Vector3
, 3
(
3 4
E
4 5
.
5 6
x
6 7
+
8 9
	kTickSize
: C
,
C D
E
E F
.
F G
y
G H
)
H I
)
I J
;
J K
Handles
 
.
 
DrawLine
 $
(
$ %
F
% &
,
& '
new
( +
Vector3
, 3
(
3 4
F
4 5
.
5 6
x
6 7
+
8 9
	kTickSize
: C
,
C D
F
E F
.
F G
y
G H
)
H I
)
I J
;
J K
Handles
 
.
 
DrawLine
 $
(
$ %
G
% &
,
& '
new
( +
Vector3
, 3
(
3 4
G
4 5
.
5 6
x
6 7
+
8 9
	kTickSize
: C
,
C D
G
E F
.
F G
y
G H
)
H I
)
I J
;
J K
Handles
 
.
 
DrawLine
 $
(
$ %
H
% &
,
& '
new
( +
Vector3
, 3
(
3 4
H
4 5
.
5 6
x
6 7
+
8 9
	kTickSize
: C
,
C D
H
E F
.
F G
y
G H
)
H I
)
I J
;
J K
Handles
 
.
 
DrawLine
 $
(
$ %
A
% &
,
& '
new
( +
Vector3
, 3
(
3 4
A
4 5
.
5 6
x
6 7
,
7 8
A
9 :
.
: ;
y
; <
-
= >
	kTickSize
? H
)
H I
)
I J
;
J K
Handles
 
.
 
DrawLine
 $
(
$ %
B
% &
,
& '
new
( +
Vector3
, 3
(
3 4
B
4 5
.
5 6
x
6 7
,
7 8
B
9 :
.
: ;
y
; <
-
= >
	kTickSize
? H
)
H I
)
I J
;
J K
Handles
 
.
 
DrawLine
 $
(
$ %
C
% &
,
& '
new
( +
Vector3
, 3
(
3 4
C
4 5
.
5 6
x
6 7
,
7 8
C
9 :
.
: ;
y
; <
-
= >
	kTickSize
? H
)
H I
)
I J
;
J K
Handles
 
.
 
DrawLine
 $
(
$ %
D
% &
,
& '
new
( +
Vector3
, 3
(
3 4
D
4 5
.
5 6
x
6 7
,
7 8
D
9 :
.
: ;
y
; <
-
= >
	kTickSize
? H
)
H I
)
I J
;
J K
Handles
   
.
   
DrawLine
   $
(
  $ %
O
  % &
,
  & '
new
  ( +
Vector3
  , 3
(
  3 4
O
  4 5
.
  5 6
x
  6 7
,
  7 8
O
  9 :
.
  : ;
y
  ; <
-
  = >
	kTickSize
  ? H
)
  H I
)
  I J
;
  J K
Handles
¡¡ 
.
¡¡ 
DrawLine
¡¡ $
(
¡¡$ %
P
¡¡% &
,
¡¡& '
new
¡¡( +
Vector3
¡¡, 3
(
¡¡3 4
P
¡¡4 5
.
¡¡5 6
x
¡¡6 7
,
¡¡7 8
P
¡¡9 :
.
¡¡: ;
y
¡¡; <
-
¡¡= >
	kTickSize
¡¡? H
)
¡¡H I
)
¡¡I J
;
¡¡J K
Handles
¢¢ 
.
¢¢ 
DrawLine
¢¢ $
(
¢¢$ %
Q
¢¢% &
,
¢¢& '
new
¢¢( +
Vector3
¢¢, 3
(
¢¢3 4
Q
¢¢4 5
.
¢¢5 6
x
¢¢6 7
,
¢¢7 8
Q
¢¢9 :
.
¢¢: ;
y
¢¢; <
-
¢¢= >
	kTickSize
¢¢? H
)
¢¢H I
)
¢¢I J
;
¢¢J K
Handles
¤¤ 
.
¤¤ 
DrawLine
¤¤ $
(
¤¤$ %
H
¤¤% &
,
¤¤& '
new
¤¤( +
Vector3
¤¤, 3
(
¤¤3 4
H
¤¤4 5
.
¤¤5 6
x
¤¤6 7
,
¤¤7 8
H
¤¤9 :
.
¤¤: ;
y
¤¤; <
+
¤¤= >
	kTickSize
¤¤? H
)
¤¤H I
)
¤¤I J
;
¤¤J K
Handles
¥¥ 
.
¥¥ 
DrawLine
¥¥ $
(
¥¥$ %
I
¥¥% &
,
¥¥& '
new
¥¥( +
Vector3
¥¥, 3
(
¥¥3 4
I
¥¥4 5
.
¥¥5 6
x
¥¥6 7
,
¥¥7 8
I
¥¥9 :
.
¥¥: ;
y
¥¥; <
+
¥¥= >
	kTickSize
¥¥? H
)
¥¥H I
)
¥¥I J
;
¥¥J K
Handles
¦¦ 
.
¦¦ 
DrawLine
¦¦ $
(
¦¦$ %
J
¦¦% &
,
¦¦& '
new
¦¦( +
Vector3
¦¦, 3
(
¦¦3 4
J
¦¦4 5
.
¦¦5 6
x
¦¦6 7
,
¦¦7 8
J
¦¦9 :
.
¦¦: ;
y
¦¦; <
+
¦¦= >
	kTickSize
¦¦? H
)
¦¦H I
)
¦¦I J
;
¦¦J K
Handles
§§ 
.
§§ 
DrawLine
§§ $
(
§§$ %
K
§§% &
,
§§& '
new
§§( +
Vector3
§§, 3
(
§§3 4
K
§§4 5
.
§§5 6
x
§§6 7
,
§§7 8
K
§§9 :
.
§§: ;
y
§§; <
+
§§= >
	kTickSize
§§? H
)
§§H I
)
§§I J
;
§§J K
Handles
¨¨ 
.
¨¨ 
DrawLine
¨¨ $
(
¨¨$ %
R
¨¨% &
,
¨¨& '
new
¨¨( +
Vector3
¨¨, 3
(
¨¨3 4
R
¨¨4 5
.
¨¨5 6
x
¨¨6 7
,
¨¨7 8
R
¨¨9 :
.
¨¨: ;
y
¨¨; <
+
¨¨= >
	kTickSize
¨¨? H
)
¨¨H I
)
¨¨I J
;
¨¨J K
Handles
©© 
.
©© 
DrawLine
©© $
(
©©$ %
S
©©% &
,
©©& '
new
©©( +
Vector3
©©, 3
(
©©3 4
S
©©4 5
.
©©5 6
x
©©6 7
,
©©7 8
S
©©9 :
.
©©: ;
y
©©; <
+
©©= >
	kTickSize
©©? H
)
©©H I
)
©©I J
;
©©J K
Handles
ªª 
.
ªª 
DrawLine
ªª $
(
ªª$ %
T
ªª% &
,
ªª& '
new
ªª( +
Vector3
ªª, 3
(
ªª3 4
T
ªª4 5
.
ªª5 6
x
ªª6 7
,
ªª7 8
T
ªª9 :
.
ªª: ;
y
ªª; <
+
ªª= >
	kTickSize
ªª? H
)
ªªH I
)
ªªI J
;
ªªJ K
GUI
­­ 
.
­­ 
color
­­ 
=
­­ 
color
­­  %
;
­­% &
GUI
®® 
.
®® 
Label
®® 
(
®® 
new
®® !
Rect
®®" &
(
®®& '
A
®®' (
.
®®( )
x
®®) *
-
®®+ ,
	kTickSize
®®- 6
-
®®7 8
$num
®®9 <
,
®®< =
A
®®> ?
.
®®? @
y
®®@ A
-
®®B C
$num
®®D G
,
®®G H
$num
®®I L
,
®®L M
$num
®®N Q
)
®®Q R
,
®®R S
$str
®®T Y
,
®®Y Z
FxStyles
®®[ c
.
®®c d
tickStyleRight
®®d r
)
®®r s
;
®®s t
GUI
¯¯ 
.
¯¯ 
Label
¯¯ 
(
¯¯ 
new
¯¯ !
Rect
¯¯" &
(
¯¯& '
M
¯¯' (
.
¯¯( )
x
¯¯) *
-
¯¯+ ,
	kTickSize
¯¯- 6
-
¯¯7 8
$num
¯¯9 <
,
¯¯< =
M
¯¯> ?
.
¯¯? @
y
¯¯@ A
-
¯¯B C
$num
¯¯D G
,
¯¯G H
$num
¯¯I L
,
¯¯L M
$num
¯¯N Q
)
¯¯Q R
,
¯¯R S
$str
¯¯T Y
,
¯¯Y Z
FxStyles
¯¯[ c
.
¯¯c d
tickStyleRight
¯¯d r
)
¯¯r s
;
¯¯s t
GUI
°° 
.
°° 
Label
°° 
(
°° 
new
°° !
Rect
°°" &
(
°°& '
K
°°' (
.
°°( )
x
°°) *
-
°°+ ,
	kTickSize
°°- 6
-
°°7 8
$num
°°9 <
,
°°< =
K
°°> ?
.
°°? @
y
°°@ A
-
°°B C
$num
°°D G
,
°°G H
$num
°°I L
,
°°L M
$num
°°N Q
)
°°Q R
,
°°R S
$str
°°T Y
,
°°Y Z
FxStyles
°°[ c
.
°°c d
tickStyleRight
°°d r
)
°°r s
;
°°s t
GUI
²² 
.
²² 
Label
²² 
(
²² 
new
²² !
Rect
²²" &
(
²²& '
D
²²' (
.
²²( )
x
²²) *
+
²²+ ,
	kTickSize
²²- 6
+
²²7 8
$num
²²9 ;
,
²²; <
D
²²= >
.
²²> ?
y
²²? @
-
²²A B
$num
²²C F
,
²²F G
$num
²²H K
,
²²K L
$num
²²M P
)
²²P Q
,
²²Q R
$str
²²S X
,
²²X Y
FxStyles
²²Z b
.
²²b c
tickStyleLeft
²²c p
)
²²p q
;
²²q r
GUI
³³ 
.
³³ 
Label
³³ 
(
³³ 
new
³³ !
Rect
³³" &
(
³³& '
F
³³' (
.
³³( )
x
³³) *
+
³³+ ,
	kTickSize
³³- 6
+
³³7 8
$num
³³9 ;
,
³³; <
F
³³= >
.
³³> ?
y
³³? @
-
³³A B
$num
³³C F
,
³³F G
$num
³³H K
,
³³K L
$num
³³M P
)
³³P Q
,
³³Q R
$str
³³S X
,
³³X Y
FxStyles
³³Z b
.
³³b c
tickStyleLeft
³³c p
)
³³p q
;
³³q r
GUI
´´ 
.
´´ 
Label
´´ 
(
´´ 
new
´´ !
Rect
´´" &
(
´´& '
H
´´' (
.
´´( )
x
´´) *
+
´´+ ,
	kTickSize
´´- 6
+
´´7 8
$num
´´9 ;
,
´´; <
H
´´= >
.
´´> ?
y
´´? @
-
´´A B
$num
´´C F
,
´´F G
$num
´´H K
,
´´K L
$num
´´M P
)
´´P Q
,
´´Q R
$str
´´S X
,
´´X Y
FxStyles
´´Z b
.
´´b c
tickStyleLeft
´´c p
)
´´p q
;
´´q r
}
µµ 
}
¶¶ 
}
·· 	
public
¹¹ 
override
¹¹ 
void
¹¹ 
OnFrameData
¹¹ (
(
¹¹( )
RenderTexture
¹¹) 6
source
¹¹7 =
)
¹¹= >
{
ºº 	
if
»» 
(
»» 
Application
»» 
.
»» 
	isPlaying
»» %
&&
»»& (
!
»») *
m_MonitorSettings
»»* ;
.
»»; <
refreshOnPlay
»»< I
)
»»I J
return
¼¼ 
;
¼¼ 
if
¾¾ 
(
¾¾ 
Mathf
¾¾ 
.
¾¾ 
Approximately
¾¾ #
(
¾¾# $
m_MonitorAreaRect
¾¾$ 5
.
¾¾5 6
width
¾¾6 ;
,
¾¾; <
$num
¾¾= >
)
¾¾> ?
||
¾¾@ B
Mathf
¾¾C H
.
¾¾H I
Approximately
¾¾I V
(
¾¾V W
m_MonitorAreaRect
¾¾W h
.
¾¾h i
height
¾¾i o
,
¾¾o p
$num
¾¾q r
)
¾¾r s
)
¾¾s t
return
¿¿ 
;
¿¿ 
float
ÁÁ 
ratio
ÁÁ 
=
ÁÁ 
(
ÁÁ 
(
ÁÁ 
float
ÁÁ !
)
ÁÁ! "
source
ÁÁ" (
.
ÁÁ( )
width
ÁÁ) .
/
ÁÁ/ 0
(
ÁÁ1 2
float
ÁÁ2 7
)
ÁÁ7 8
source
ÁÁ8 >
.
ÁÁ> ?
height
ÁÁ? E
)
ÁÁE F
/
ÁÁG H
$num
ÁÁI K
;
ÁÁK L
int
ÂÂ 
h
ÂÂ 
=
ÂÂ 
$num
ÂÂ 
;
ÂÂ 
int
ÃÃ 
w
ÃÃ 
=
ÃÃ 
Mathf
ÃÃ 
.
ÃÃ 

FloorToInt
ÃÃ $
(
ÃÃ$ %
h
ÃÃ% &
*
ÃÃ' (
ratio
ÃÃ) .
)
ÃÃ. /
;
ÃÃ/ 0
var
ÅÅ 
rt
ÅÅ 
=
ÅÅ 
RenderTexture
ÅÅ "
.
ÅÅ" #
GetTemporary
ÅÅ# /
(
ÅÅ/ 0
w
ÅÅ0 1
,
ÅÅ1 2
h
ÅÅ3 4
,
ÅÅ4 5
$num
ÅÅ6 7
,
ÅÅ7 8
source
ÅÅ9 ?
.
ÅÅ? @
format
ÅÅ@ F
)
ÅÅF G
;
ÅÅG H
Graphics
ÆÆ 
.
ÆÆ 
Blit
ÆÆ 
(
ÆÆ 
source
ÆÆ  
,
ÆÆ  !
rt
ÆÆ" $
)
ÆÆ$ %
;
ÆÆ% &
ComputeWaveform
ÇÇ 
(
ÇÇ 
rt
ÇÇ 
)
ÇÇ 
;
ÇÇ  
m_BaseEditor
ÈÈ 
.
ÈÈ 
Repaint
ÈÈ  
(
ÈÈ  !
)
ÈÈ! "
;
ÈÈ" #
RenderTexture
ÉÉ 
.
ÉÉ 
ReleaseTemporary
ÉÉ *
(
ÉÉ* +
rt
ÉÉ+ -
)
ÉÉ- .
;
ÉÉ. /
}
ÊÊ 	
void
ÌÌ 
CreateBuffer
ÌÌ 
(
ÌÌ 
int
ÌÌ 
width
ÌÌ #
,
ÌÌ# $
int
ÌÌ% (
height
ÌÌ) /
)
ÌÌ/ 0
{
ÍÍ 	
m_Buffer
ÎÎ 
=
ÎÎ 
new
ÎÎ 
ComputeBuffer
ÎÎ (
(
ÎÎ( )
width
ÎÎ) .
*
ÎÎ/ 0
height
ÎÎ1 7
,
ÎÎ7 8
sizeof
ÎÎ9 ?
(
ÎÎ? @
uint
ÎÎ@ D
)
ÎÎD E
<<
ÎÎF H
$num
ÎÎI J
)
ÎÎJ K
;
ÎÎK L
}
ÏÏ 	
void
ÑÑ 
ComputeWaveform
ÑÑ 
(
ÑÑ 
RenderTexture
ÑÑ *
source
ÑÑ+ 1
)
ÑÑ1 2
{
ÒÒ 	
if
ÓÓ 
(
ÓÓ 
m_Buffer
ÓÓ 
==
ÓÓ 
null
ÓÓ  
)
ÓÓ  !
{
ÔÔ 
CreateBuffer
ÕÕ 
(
ÕÕ 
source
ÕÕ #
.
ÕÕ# $
width
ÕÕ$ )
,
ÕÕ) *
source
ÕÕ+ 1
.
ÕÕ1 2
height
ÕÕ2 8
)
ÕÕ8 9
;
ÕÕ9 :
}
ÖÖ 
else
×× 
if
×× 
(
×× 
m_Buffer
×× 
.
×× 
count
×× #
!=
××$ &
(
××' (
source
××( .
.
××. /
width
××/ 4
*
××5 6
source
××7 =
.
××= >
height
××> D
)
××D E
)
××E F
{
ØØ 
m_Buffer
ÙÙ 
.
ÙÙ 
Release
ÙÙ  
(
ÙÙ  !
)
ÙÙ! "
;
ÙÙ" #
CreateBuffer
ÚÚ 
(
ÚÚ 
source
ÚÚ #
.
ÚÚ# $
width
ÚÚ$ )
,
ÚÚ) *
source
ÚÚ+ 1
.
ÚÚ1 2
height
ÚÚ2 8
)
ÚÚ8 9
;
ÚÚ9 :
}
ÛÛ 
var
ÝÝ 
channels
ÝÝ 
=
ÝÝ 
m_MonitorSettings
ÝÝ ,
.
ÝÝ, -
	waveformY
ÝÝ- 6
?
ÞÞ 
new
ÞÞ 
Vector4
ÞÞ 
(
ÞÞ 
$num
ÞÞ  
,
ÞÞ  !
$num
ÞÞ" $
,
ÞÞ$ %
$num
ÞÞ& (
,
ÞÞ( )
$num
ÞÞ* ,
)
ÞÞ, -
:
ßß 
new
ßß 
Vector4
ßß 
(
ßß 
m_MonitorSettings
ßß /
.
ßß/ 0
	waveformR
ßß0 9
?
ßß: ;
$num
ßß< >
:
ßß? @
$num
ßßA C
,
ßßC D
m_MonitorSettings
ßßE V
.
ßßV W
	waveformG
ßßW `
?
ßßa b
$num
ßßc e
:
ßßf g
$num
ßßh j
,
ßßj k
m_MonitorSettings
ßßl }
.
ßß} ~
	waveformBßß~ 
?ßß 
$numßß 
:ßß 
$numßß 
,ßß 
$numßß 
)ßß 
;ßß 
var
áá 
cs
áá 
=
áá 
m_ComputeShader
áá $
;
áá$ %
int
ãã 
kernel
ãã 
=
ãã 
cs
ãã 
.
ãã 

FindKernel
ãã &
(
ãã& '
$str
ãã' 7
)
ãã7 8
;
ãã8 9
cs
ää 
.
ää 
	SetBuffer
ää 
(
ää 
kernel
ää 
,
ää  
$str
ää! ,
,
ää, -
m_Buffer
ää. 6
)
ää6 7
;
ää7 8
cs
åå 
.
åå 
Dispatch
åå 
(
åå 
kernel
åå 
,
åå 
source
åå  &
.
åå& '
width
åå' ,
,
åå, -
$num
åå. /
,
åå/ 0
$num
åå1 2
)
åå2 3
;
åå3 4
kernel
çç 
=
çç 
cs
çç 
.
çç 

FindKernel
çç "
(
çç" #
$str
çç# .
)
çç. /
;
çç/ 0
cs
èè 
.
èè 
	SetBuffer
èè 
(
èè 
kernel
èè 
,
èè  
$str
èè! ,
,
èè, -
m_Buffer
èè. 6
)
èè6 7
;
èè7 8
cs
éé 
.
éé 

SetTexture
éé 
(
éé 
kernel
éé  
,
éé  !
$str
éé" +
,
éé+ ,
source
éé- 3
)
éé3 4
;
éé4 5
cs
êê 
.
êê 
SetInt
êê 
(
êê 
$str
êê !
,
êê! "
GraphicsUtils
êê# 0
.
êê0 1 
isLinearColorSpace
êê1 C
?
êêD E
$num
êêF G
:
êêH I
$num
êêJ K
)
êêK L
;
êêL M
cs
ëë 
.
ëë 
	SetVector
ëë 
(
ëë 
$str
ëë $
,
ëë$ %
channels
ëë& .
)
ëë. /
;
ëë/ 0
cs
ìì 
.
ìì 
Dispatch
ìì 
(
ìì 
kernel
ìì 
,
ìì 
source
ìì  &
.
ìì& '
width
ìì' ,
,
ìì, -
$num
ìì. /
,
ìì/ 0
$num
ìì1 2
)
ìì2 3
;
ìì3 4
if
îî 
(
îî 
m_WaveformTexture
îî !
==
îî" $
null
îî% )
||
îî* ,
m_WaveformTexture
îî- >
.
îî> ?
width
îî? D
!=
îîE G
(
îîH I
source
îîI O
.
îîO P
width
îîP U
*
îîV W
$num
îîX Y
)
îîY Z
||
îî[ ]
m_WaveformTexture
îî^ o
.
îîo p
height
îîp v
!=
îîw y
sourceîîz 
.îî 
heightîî 
)îî 
{
ïï 
GraphicsUtils
ðð 
.
ðð 
Destroy
ðð %
(
ðð% &
m_WaveformTexture
ðð& 7
)
ðð7 8
;
ðð8 9
m_WaveformTexture
ññ !
=
ññ" #
new
ññ$ '
RenderTexture
ññ( 5
(
ññ5 6
source
ññ6 <
.
ññ< =
width
ññ= B
*
ññC D
$num
ññE F
,
ññF G
source
ññH N
.
ññN O
height
ññO U
,
ññU V
$num
ññW X
,
ññX Y!
RenderTextureFormat
ññZ m
.
ññm n
ARGB32
ññn t
,
ññt u%
RenderTextureReadWriteññv 
.ññ 
Linearññ 
)ññ 
{
òò 
	hideFlags
óó 
=
óó 
	HideFlags
óó  )
.
óó) *
DontSave
óó* 2
,
óó2 3
wrapMode
ôô 
=
ôô 
TextureWrapMode
ôô .
.
ôô. /
Clamp
ôô/ 4
,
ôô4 5

filterMode
õõ 
=
õõ  

FilterMode
õõ! +
.
õõ+ ,
Bilinear
õõ, 4
}
öö 
;
öö 
}
÷÷ 
if
ùù 
(
ùù 

m_Material
ùù 
==
ùù 
null
ùù "
)
ùù" #

m_Material
úú 
=
úú 
new
úú  
Material
úú! )
(
úú) *
Shader
úú* 0
.
úú0 1
Find
úú1 5
(
úú5 6
$str
úú6 ]
)
úú] ^
)
úú^ _
{
úú` a
	hideFlags
úúb k
=
úúl m
	HideFlags
úún w
.
úúw x
DontSaveúúx 
}úú 
;úú 

m_Material
üü 
.
üü 
	SetBuffer
üü  
(
üü  !
$str
üü! ,
,
üü, -
m_Buffer
üü. 6
)
üü6 7
;
üü7 8

m_Material
ýý 
.
ýý 
	SetVector
ýý  
(
ýý  !
$str
ýý! (
,
ýý( )
new
ýý* -
Vector2
ýý. 5
(
ýý5 6
m_WaveformTexture
ýý6 G
.
ýýG H
width
ýýH M
,
ýýM N
m_WaveformTexture
ýýO `
.
ýý` a
height
ýýa g
)
ýýg h
)
ýýh i
;
ýýi j

m_Material
þþ 
.
þþ 
	SetVector
þþ  
(
þþ  !
$str
þþ! ,
,
þþ, -
channels
þþ. 6
)
þþ6 7
;
þþ7 8
}
ÿÿ 	
}
 
} ö
¾D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Monitors\VectorscopeMonitor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
public 

class 
VectorscopeMonitor #
:$ %!
PostProcessingMonitor& ;
{ 
static		 

GUIContent		 
s_MonitorTitle		 (
=		) *
new		+ .

GUIContent		/ 9
(		9 :
$str		: G
)		G H
;		H I
ComputeShader 
m_ComputeShader %
;% &
ComputeBuffer 
m_Buffer 
; 
Material 

m_Material 
; 
RenderTexture  
m_VectorscopeTexture *
;* +
Rect 
m_MonitorAreaRect 
; 
public 
VectorscopeMonitor !
(! "
)" #
{ 	
m_ComputeShader 
= 
EditorResources -
.- .
Load. 2
<2 3
ComputeShader3 @
>@ A
(A B
$strB g
)g h
;h i
} 	
public 
override 
void 
Dispose $
($ %
)% &
{ 	
GraphicsUtils 
. 
Destroy !
(! "

m_Material" ,
), -
;- .
GraphicsUtils 
. 
Destroy !
(! " 
m_VectorscopeTexture" 6
)6 7
;7 8
if 
( 
m_Buffer 
!= 
null  
)  !
m_Buffer 
. 
Release  
(  !
)! "
;" #

m_Material 
= 
null 
;  
m_VectorscopeTexture  
=! "
null# '
;' (
m_Buffer   
=   
null   
;   
}!! 	
public## 
override## 
bool## 
IsSupported## (
(##( )
)##) *
{$$ 	
return%% 
m_ComputeShader%% "
!=%%# %
null%%& *
&&%%+ -
GraphicsUtils%%. ;
.%%; <
supportsDX11%%< H
;%%H I
}&& 	
public(( 
override(( 

GUIContent(( "
GetMonitorTitle((# 2
(((2 3
)((3 4
{)) 	
return** 
s_MonitorTitle** !
;**! "
}++ 	
public-- 
override-- 
void-- 
OnMonitorSettings-- .
(--. /
)--/ 0
{.. 	
	EditorGUI// 
.// 
BeginChangeCheck// &
(//& '
)//' (
;//( )
bool11 
refreshOnPlay11 
=11  
m_MonitorSettings11! 2
.112 3
refreshOnPlay113 @
;11@ A
float22 
exposure22 
=22 
m_MonitorSettings22 .
.22. /
vectorscopeExposure22/ B
;22B C
bool33 
showBackground33 
=33  !
m_MonitorSettings33" 3
.333 4%
vectorscopeShowBackground334 M
;33M N
refreshOnPlay55 
=55 
	GUILayout55 %
.55% &
Toggle55& ,
(55, -
refreshOnPlay55- :
,55: ;
new55< ?

GUIContent55@ J
(55J K
FxStyles55K S
.55S T
playIcon55T \
,55\ ]
$str	55^ «
)
55« ¬
,
55¬ ­
FxStyles
55® ¶
.
55¶ ·
	preButton
55· À
)
55À Á
;
55Á Â
exposure66 
=66 
	GUILayout66  
.66  !
HorizontalSlider66! 1
(661 2
exposure662 :
,66: ;
$num66< A
,66A B
$num66C G
,66G H
FxStyles66I Q
.66Q R
	preSlider66R [
,66[ \
FxStyles66] e
.66e f
preSliderThumb66f t
,66t u
	GUILayout66v 
.	66 
Width
66 
(
66 
$num
66 
)
66 
)
66 
;
66 
showBackground77 
=77 
	GUILayout77 &
.77& '
Toggle77' -
(77- .
showBackground77. <
,77< =
new77> A

GUIContent77B L
(77L M
FxStyles77M U
.77U V
checkerIcon77V a
,77a b
$str	77c 
)
77 
,
77 
FxStyles
77 
.
77 
	preButton
77 ¤
)
77¤ ¥
;
77¥ ¦
if99 
(99 
	EditorGUI99 
.99 
EndChangeCheck99 (
(99( )
)99) *
)99* +
{:: 
Undo;; 
.;; 
RecordObject;; !
(;;! "
m_BaseEditor;;" .
.;;. /
serializedObject;;/ ?
.;;? @
targetObject;;@ L
,;;L M
$str;;N l
);;l m
;;;m n
m_MonitorSettings<< !
.<<! "
refreshOnPlay<<" /
=<<0 1
refreshOnPlay<<2 ?
;<<? @
m_MonitorSettings== !
.==! "
vectorscopeExposure==" 5
===6 7
exposure==8 @
;==@ A
m_MonitorSettings>> !
.>>! "%
vectorscopeShowBackground>>" ;
=>>< =
showBackground>>> L
;>>L M!
InternalEditorUtility?? %
.??% &
RepaintAllViews??& 5
(??5 6
)??6 7
;??7 8
}@@ 
}AA 	
publicCC 
overrideCC 
voidCC 
OnMonitorGUICC )
(CC) *
RectCC* .
rCC/ 0
)CC0 1
{DD 	
ifEE 
(EE 
EventEE 
.EE 
currentEE 
.EE 
typeEE "
==EE# %
	EventTypeEE& /
.EE/ 0
RepaintEE0 7
)EE7 8
{FF 
ifHH 
(HH 
MathfHH 
.HH 
ApproximatelyHH '
(HH' (
m_MonitorAreaRectHH( 9
.HH9 :
widthHH: ?
,HH? @
$numHHA B
)HHB C
&&HHD F
MathfHHG L
.HHL M
ApproximatelyHHM Z
(HHZ [
m_MonitorAreaRectHH[ l
.HHl m
heightHHm s
,HHs t
$numHHu v
)HHv w
)HHw x!
InternalEditorUtilityII )
.II) *
RepaintAllViewsII* 9
(II9 :
)II: ;
;II; <
floatLL 
sizeLL 
=LL 
$numLL 
;LL  
ifNN 
(NN 
rNN 
.NN 
widthNN 
<NN 
rNN 
.NN  
heightNN  &
)NN& '
{OO 
sizePP 
=PP  
m_VectorscopeTexturePP /
!=PP0 2
nullPP3 7
?QQ 
MathfQQ 
.QQ  
MinQQ  #
(QQ# $ 
m_VectorscopeTextureQQ$ 8
.QQ8 9
widthQQ9 >
,QQ> ?
rQQ@ A
.QQA B
widthQQB G
-QQH I
$numQQJ M
)QQM N
:RR 
rRR 
.RR 
widthRR !
;RR! "
}SS 
elseTT 
{UU 
sizeVV 
=VV  
m_VectorscopeTextureVV /
!=VV0 2
nullVV3 7
?WW 
MathfWW 
.WW  
MinWW  #
(WW# $ 
m_VectorscopeTextureWW$ 8
.WW8 9
heightWW9 ?
,WW? @
rWWA B
.WWB C
heightWWC I
-WWJ K
$numWWL O
)WWO P
:XX 
rXX 
.XX 
heightXX "
;XX" #
}YY 
m_MonitorAreaRect[[ !
=[[" #
new[[$ '
Rect[[( ,
([[, -
Mathf\\ 
.\\ 
Floor\\ #
(\\# $
r\\$ %
.\\% &
x\\& '
+\\( )
r\\* +
.\\+ ,
width\\, 1
/\\2 3
$num\\4 6
-\\7 8
size\\9 =
/\\> ?
$num\\@ B
)\\B C
,\\C D
Mathf]] 
.]] 
Floor]] #
(]]# $
r]]$ %
.]]% &
y]]& '
+]]( )
r]]* +
.]]+ ,
height]], 2
/]]3 4
$num]]5 7
-]]8 9
size]]: >
/]]? @
$num]]A C
-]]D E
$num]]F H
)]]H I
,]]I J
size^^ 
,^^ 
size^^ "
)__ 
;__ 
ifaa 
(aa  
m_VectorscopeTextureaa (
!=aa) +
nullaa, 0
)aa0 1
{bb 

m_Materialcc 
.cc 
SetFloatcc '
(cc' (
$strcc( 3
,cc3 4
m_MonitorSettingscc5 F
.ccF G
vectorscopeExposureccG Z
)ccZ [
;cc[ \
varee 
	oldActiveee !
=ee" #
RenderTextureee$ 1
.ee1 2
activeee2 8
;ee8 9
Graphicsff 
.ff 
Blitff !
(ff! "
nullff" &
,ff& ' 
m_VectorscopeTextureff( <
,ff< =

m_Materialff> H
,ffH I
m_MonitorSettingsffJ [
.ff[ \%
vectorscopeShowBackgroundff\ u
?ffv w
$numffx y
:ffz {
$numff| }
)ff} ~
;ff~ 
RenderTexturegg !
.gg! "
activegg" (
=gg) *
	oldActivegg+ 4
;gg4 5
Graphicsii 
.ii 
DrawTextureii (
(ii( )
m_MonitorAreaRectii) :
,ii: ; 
m_VectorscopeTextureii< P
)iiP Q
;iiQ R
varkk 
colorkk 
=kk 
Colorkk  %
.kk% &
whitekk& +
;kk+ ,
constll 
floatll 
	kTickSizell  )
=ll* +
$numll, /
;ll/ 0
constmm 
intmm 

kTickCountmm (
=mm) *
$nummm+ -
;mm- .
floatoo 
radiusoo  
=oo! "
m_MonitorAreaRectoo# 4
.oo4 5
widthoo5 :
/oo; <
$numoo= ?
;oo? @
floatpp 
midXpp 
=pp  
m_MonitorAreaRectpp! 2
.pp2 3
xpp3 4
+pp5 6
radiuspp7 =
;pp= >
floatqq 
midYqq 
=qq  
m_MonitorAreaRectqq! 2
.qq2 3
yqq3 4
+qq5 6
radiusqq7 =
;qq= >
varrr 
centerrr 
=rr  
newrr! $
Vector2rr% ,
(rr, -
midXrr- 1
,rr1 2
midYrr3 7
)rr7 8
;rr8 9
coloruu 
.uu 
auu 
*=uu 
$numuu #
;uu# $
Handlesvv 
.vv 
colorvv !
=vv" #
colorvv$ )
;vv) *
Handlesww 
.ww 
DrawLineww $
(ww$ %
newww% (
Vector2ww) 0
(ww0 1
midXww1 5
,ww5 6
m_MonitorAreaRectww7 H
.wwH I
ywwI J
)wwJ K
,wwK L
newwwM P
Vector2wwQ X
(wwX Y
midXwwY ]
,ww] ^
m_MonitorAreaRectww_ p
.wwp q
ywwq r
+wws t
m_MonitorAreaRect	wwu 
.
ww 
height
ww 
)
ww 
)
ww 
;
ww 
Handlesxx 
.xx 
DrawLinexx $
(xx$ %
newxx% (
Vector2xx) 0
(xx0 1
m_MonitorAreaRectxx1 B
.xxB C
xxxC D
,xxD E
midYxxF J
)xxJ K
,xxK L
newxxM P
Vector2xxQ X
(xxX Y
m_MonitorAreaRectxxY j
.xxj k
xxxk l
+xxm n
m_MonitorAreaRect	xxo 
.
xx 
width
xx 
,
xx 
midY
xx 
)
xx 
)
xx 
;
xx 
ifzz 
(zz 
m_MonitorAreaRectzz )
.zz) *
widthzz* /
>zz0 1
$numzz2 6
)zz6 7
{{{ 
color|| 
.|| 
a|| 
=||  !
$num||" $
;||$ %
Handles 
.  
color  %
=& '
color( -
;- .
for
 
(
 
int
  
i
! "
=
# $
$num
% &
;
& '
i
( )
<
* +

kTickCount
, 6
;
6 7
i
8 9
++
9 ;
)
; <
{
 
float
 !
a
" #
=
$ %
(
& '
float
' ,
)
, -
i
- .
/
/ 0
(
1 2
float
2 7
)
7 8

kTickCount
8 B
;
B C
float
 !
theta
" '
=
( )
a
* +
*
, -
(
. /
Mathf
/ 4
.
4 5
PI
5 7
*
8 9
$num
: <
)
< =
;
= >
float
 !
tx
" $
=
% &
Mathf
' ,
.
, -
Cos
- 0
(
0 1
theta
1 6
+
7 8
(
9 :
Mathf
: ?
.
? @
PI
@ B
/
C D
$num
E G
)
G H
)
H I
;
I J
float
 !
ty
" $
=
% &
Mathf
' ,
.
, -
Sin
- 0
(
0 1
theta
1 6
-
7 8
(
9 :
Mathf
: ?
.
? @
PI
@ B
/
C D
$num
E G
)
G H
)
H I
;
I J
var
 
innerVec
  (
=
) *
center
+ 1
+
2 3
new
4 7
Vector2
8 ?
(
? @
tx
@ B
,
B C
ty
D F
)
F G
*
H I
(
J K
radius
K Q
-
R S
	kTickSize
T ]
)
] ^
;
^ _
var
 
outerVec
  (
=
) *
center
+ 1
+
2 3
new
4 7
Vector2
8 ?
(
? @
tx
@ B
,
B C
ty
D F
)
F G
*
H I
radius
J P
;
P Q
Handles
 #
.
# $
DrawAAPolyLine
$ 2
(
2 3
$num
3 5
,
5 6
innerVec
7 ?
,
? @
outerVec
A I
)
I J
;
J K
}
 
color
 
.
 
a
 
=
  !
$num
" $
;
$ %
var
 
oldColor
 $
=
% &
GUI
' *
.
* +
color
+ 0
;
0 1
GUI
 
.
 
color
 !
=
" #
color
$ )
*
* +
$num
, .
;
. /
var
 
point
 !
=
" #
new
$ '
Vector2
( /
(
/ 0
-
0 1
$num
1 7
,
7 8
-
9 :
$num
: @
)
@ A
*
B C
radius
D J
+
K L
center
M S
;
S T
var
 
rect
  
=
! "
new
# &
Rect
' +
(
+ ,
point
, 1
.
1 2
x
2 3
-
4 5
$num
6 9
,
9 :
point
; @
.
@ A
y
A B
-
C D
$num
E H
,
H I
$num
J M
,
M N
$num
O R
)
R S
;
S T
GUI
 
.
 
Label
 !
(
! "
rect
" &
,
& '
$str
( -
,
- .
FxStyles
/ 7
.
7 8
tickStyleCenter
8 G
)
G H
;
H I
point
 
=
 
new
  #
Vector2
$ +
(
+ ,
-
, -
$num
- 3
,
3 4
$num
5 ;
)
; <
*
= >
radius
? E
+
F G
center
H N
;
N O
rect
 
=
 
new
 "
Rect
# '
(
' (
point
( -
.
- .
x
. /
-
0 1
$num
2 5
,
5 6
point
7 <
.
< =
y
= >
-
? @
$num
A D
,
D E
$num
F I
,
I J
$num
K N
)
N O
;
O P
GUI
 
.
 
Label
 !
(
! "
rect
" &
,
& '
$str
( -
,
- .
FxStyles
/ 7
.
7 8
tickStyleCenter
8 G
)
G H
;
H I
point
 
=
 
new
  #
Vector2
$ +
(
+ ,
$num
, 2
,
2 3
$num
4 :
)
: ;
*
< =
radius
> D
+
E F
center
G M
;
M N
rect
 
=
 
new
 "
Rect
# '
(
' (
point
( -
.
- .
x
. /
-
0 1
$num
2 5
,
5 6
point
7 <
.
< =
y
= >
-
? @
$num
A D
,
D E
$num
F I
,
I J
$num
K N
)
N O
;
O P
GUI
 
.
 
Label
 !
(
! "
rect
" &
,
& '
$str
( -
,
- .
FxStyles
/ 7
.
7 8
tickStyleCenter
8 G
)
G H
;
H I
point
 
=
 
new
  #
Vector2
$ +
(
+ ,
-
, -
$num
- 3
,
3 4
-
5 6
$num
6 <
)
< =
*
> ?
radius
@ F
+
G H
center
I O
;
O P
rect
 
=
 
new
 "
Rect
# '
(
' (
point
( -
.
- .
x
. /
-
0 1
$num
2 5
,
5 6
point
7 <
.
< =
y
= >
-
? @
$num
A D
,
D E
$num
F I
,
I J
$num
K N
)
N O
;
O P
GUI
 
.
 
Label
 !
(
! "
rect
" &
,
& '
$str
( -
,
- .
FxStyles
/ 7
.
7 8
tickStyleCenter
8 G
)
G H
;
H I
point
   
=
   
new
    #
Vector2
  $ +
(
  + ,
$num
  , 2
,
  2 3
$num
  4 :
)
  : ;
*
  < =
radius
  > D
+
  E F
center
  G M
;
  M N
rect
¡¡ 
=
¡¡ 
new
¡¡ "
Rect
¡¡# '
(
¡¡' (
point
¡¡( -
.
¡¡- .
x
¡¡. /
-
¡¡0 1
$num
¡¡2 5
,
¡¡5 6
point
¡¡7 <
.
¡¡< =
y
¡¡= >
-
¡¡? @
$num
¡¡A D
,
¡¡D E
$num
¡¡F I
,
¡¡I J
$num
¡¡K N
)
¡¡N O
;
¡¡O P
GUI
¢¢ 
.
¢¢ 
Label
¢¢ !
(
¢¢! "
rect
¢¢" &
,
¢¢& '
$str
¢¢( -
,
¢¢- .
FxStyles
¢¢/ 7
.
¢¢7 8
tickStyleCenter
¢¢8 G
)
¢¢G H
;
¢¢H I
point
¤¤ 
=
¤¤ 
new
¤¤  #
Vector2
¤¤$ +
(
¤¤+ ,
$num
¤¤, 2
,
¤¤2 3
-
¤¤4 5
$num
¤¤5 ;
)
¤¤; <
*
¤¤= >
radius
¤¤? E
+
¤¤F G
center
¤¤H N
;
¤¤N O
rect
¥¥ 
=
¥¥ 
new
¥¥ "
Rect
¥¥# '
(
¥¥' (
point
¥¥( -
.
¥¥- .
x
¥¥. /
-
¥¥0 1
$num
¥¥2 5
,
¥¥5 6
point
¥¥7 <
.
¥¥< =
y
¥¥= >
-
¥¥? @
$num
¥¥A D
,
¥¥D E
$num
¥¥F I
,
¥¥I J
$num
¥¥K N
)
¥¥N O
;
¥¥O P
GUI
¦¦ 
.
¦¦ 
Label
¦¦ !
(
¦¦! "
rect
¦¦" &
,
¦¦& '
$str
¦¦( -
,
¦¦- .
FxStyles
¦¦/ 7
.
¦¦7 8
tickStyleCenter
¦¦8 G
)
¦¦G H
;
¦¦H I
GUI
§§ 
.
§§ 
color
§§ !
=
§§" #
oldColor
§§$ ,
;
§§, -
}
¨¨ 
}
©© 
}
ªª 
}
«« 	
public
­­ 
override
­­ 
void
­­ 
OnFrameData
­­ (
(
­­( )
RenderTexture
­­) 6
source
­­7 =
)
­­= >
{
®® 	
if
¯¯ 
(
¯¯ 
Application
¯¯ 
.
¯¯ 
	isPlaying
¯¯ %
&&
¯¯& (
!
¯¯) *
m_MonitorSettings
¯¯* ;
.
¯¯; <
refreshOnPlay
¯¯< I
)
¯¯I J
return
°° 
;
°° 
if
²² 
(
²² 
Mathf
²² 
.
²² 
Approximately
²² #
(
²²# $
m_MonitorAreaRect
²²$ 5
.
²²5 6
width
²²6 ;
,
²²; <
$num
²²= >
)
²²> ?
||
²²@ B
Mathf
²²C H
.
²²H I
Approximately
²²I V
(
²²V W
m_MonitorAreaRect
²²W h
.
²²h i
height
²²i o
,
²²o p
$num
²²q r
)
²²r s
)
²²s t
return
³³ 
;
³³ 
float
µµ 
ratio
µµ 
=
µµ 
(
µµ 
float
µµ  
)
µµ  !
source
µµ! '
.
µµ' (
width
µµ( -
/
µµ. /
(
µµ0 1
float
µµ1 6
)
µµ6 7
source
µµ7 =
.
µµ= >
height
µµ> D
;
µµD E
int
¶¶ 
h
¶¶ 
=
¶¶ 
$num
¶¶ 
;
¶¶ 
int
·· 
w
·· 
=
·· 
Mathf
·· 
.
·· 

FloorToInt
·· $
(
··$ %
h
··% &
*
··' (
ratio
··) .
)
··. /
;
··/ 0
var
¹¹ 
rt
¹¹ 
=
¹¹ 
RenderTexture
¹¹ "
.
¹¹" #
GetTemporary
¹¹# /
(
¹¹/ 0
w
¹¹0 1
,
¹¹1 2
h
¹¹3 4
,
¹¹4 5
$num
¹¹6 7
,
¹¹7 8
source
¹¹9 ?
.
¹¹? @
format
¹¹@ F
)
¹¹F G
;
¹¹G H
Graphics
ºº 
.
ºº 
Blit
ºº 
(
ºº 
source
ºº  
,
ºº  !
rt
ºº" $
)
ºº$ %
;
ºº% & 
ComputeVectorscope
»» 
(
»» 
rt
»» !
)
»»! "
;
»»" #
m_BaseEditor
¼¼ 
.
¼¼ 
Repaint
¼¼  
(
¼¼  !
)
¼¼! "
;
¼¼" #
RenderTexture
½½ 
.
½½ 
ReleaseTemporary
½½ *
(
½½* +
rt
½½+ -
)
½½- .
;
½½. /
}
¾¾ 	
void
ÀÀ 
CreateBuffer
ÀÀ 
(
ÀÀ 
int
ÀÀ 
width
ÀÀ #
,
ÀÀ# $
int
ÀÀ% (
height
ÀÀ) /
)
ÀÀ/ 0
{
ÁÁ 	
m_Buffer
ÂÂ 
=
ÂÂ 
new
ÂÂ 
ComputeBuffer
ÂÂ (
(
ÂÂ( )
width
ÂÂ) .
*
ÂÂ/ 0
height
ÂÂ1 7
,
ÂÂ7 8
sizeof
ÂÂ9 ?
(
ÂÂ? @
uint
ÂÂ@ D
)
ÂÂD E
)
ÂÂE F
;
ÂÂF G
}
ÃÃ 	
void
ÅÅ  
ComputeVectorscope
ÅÅ 
(
ÅÅ  
RenderTexture
ÅÅ  -
source
ÅÅ. 4
)
ÅÅ4 5
{
ÆÆ 	
if
ÇÇ 
(
ÇÇ 
m_Buffer
ÇÇ 
==
ÇÇ 
null
ÇÇ  
)
ÇÇ  !
{
ÈÈ 
CreateBuffer
ÉÉ 
(
ÉÉ 
source
ÉÉ #
.
ÉÉ# $
width
ÉÉ$ )
,
ÉÉ) *
source
ÉÉ+ 1
.
ÉÉ1 2
height
ÉÉ2 8
)
ÉÉ8 9
;
ÉÉ9 :
}
ÊÊ 
else
ËË 
if
ËË 
(
ËË 
m_Buffer
ËË 
.
ËË 
count
ËË #
!=
ËË$ &
(
ËË' (
source
ËË( .
.
ËË. /
width
ËË/ 4
*
ËË5 6
source
ËË7 =
.
ËË= >
height
ËË> D
)
ËËD E
)
ËËE F
{
ÌÌ 
m_Buffer
ÍÍ 
.
ÍÍ 
Release
ÍÍ  
(
ÍÍ  !
)
ÍÍ! "
;
ÍÍ" #
CreateBuffer
ÎÎ 
(
ÎÎ 
source
ÎÎ #
.
ÎÎ# $
width
ÎÎ$ )
,
ÎÎ) *
source
ÎÎ+ 1
.
ÎÎ1 2
height
ÎÎ2 8
)
ÎÎ8 9
;
ÎÎ9 :
}
ÏÏ 
var
ÑÑ 
cs
ÑÑ 
=
ÑÑ 
m_ComputeShader
ÑÑ $
;
ÑÑ$ %
int
ÓÓ 
kernel
ÓÓ 
=
ÓÓ 
cs
ÓÓ 
.
ÓÓ 

FindKernel
ÓÓ &
(
ÓÓ& '
$str
ÓÓ' :
)
ÓÓ: ;
;
ÓÓ; <
cs
ÔÔ 
.
ÔÔ 
	SetBuffer
ÔÔ 
(
ÔÔ 
kernel
ÔÔ 
,
ÔÔ  
$str
ÔÔ! /
,
ÔÔ/ 0
m_Buffer
ÔÔ1 9
)
ÔÔ9 :
;
ÔÔ: ;
cs
ÕÕ 
.
ÕÕ 
	SetVector
ÕÕ 
(
ÕÕ 
$str
ÕÕ 
,
ÕÕ  
new
ÕÕ! $
Vector4
ÕÕ% ,
(
ÕÕ, -
source
ÕÕ- 3
.
ÕÕ3 4
width
ÕÕ4 9
,
ÕÕ9 :
source
ÕÕ; A
.
ÕÕA B
height
ÕÕB H
,
ÕÕH I
$num
ÕÕJ L
,
ÕÕL M
$num
ÕÕN P
)
ÕÕP Q
)
ÕÕQ R
;
ÕÕR S
cs
ÖÖ 
.
ÖÖ 
Dispatch
ÖÖ 
(
ÖÖ 
kernel
ÖÖ 
,
ÖÖ 
Mathf
ÖÖ  %
.
ÖÖ% &
	CeilToInt
ÖÖ& /
(
ÖÖ/ 0
source
ÖÖ0 6
.
ÖÖ6 7
width
ÖÖ7 <
/
ÖÖ= >
$num
ÖÖ? B
)
ÖÖB C
,
ÖÖC D
Mathf
ÖÖE J
.
ÖÖJ K
	CeilToInt
ÖÖK T
(
ÖÖT U
source
ÖÖU [
.
ÖÖ[ \
height
ÖÖ\ b
/
ÖÖc d
$num
ÖÖe h
)
ÖÖh i
,
ÖÖi j
$num
ÖÖk l
)
ÖÖl m
;
ÖÖm n
kernel
ØØ 
=
ØØ 
cs
ØØ 
.
ØØ 

FindKernel
ØØ "
(
ØØ" #
$str
ØØ# 1
)
ØØ1 2
;
ØØ2 3
cs
ÙÙ 
.
ÙÙ 
	SetBuffer
ÙÙ 
(
ÙÙ 
kernel
ÙÙ 
,
ÙÙ  
$str
ÙÙ! /
,
ÙÙ/ 0
m_Buffer
ÙÙ1 9
)
ÙÙ9 :
;
ÙÙ: ;
cs
ÚÚ 
.
ÚÚ 

SetTexture
ÚÚ 
(
ÚÚ 
kernel
ÚÚ  
,
ÚÚ  !
$str
ÚÚ" +
,
ÚÚ+ ,
source
ÚÚ- 3
)
ÚÚ3 4
;
ÚÚ4 5
cs
ÛÛ 
.
ÛÛ 
SetInt
ÛÛ 
(
ÛÛ 
$str
ÛÛ !
,
ÛÛ! "
GraphicsUtils
ÛÛ# 0
.
ÛÛ0 1 
isLinearColorSpace
ÛÛ1 C
?
ÛÛD E
$num
ÛÛF G
:
ÛÛH I
$num
ÛÛJ K
)
ÛÛK L
;
ÛÛL M
cs
ÜÜ 
.
ÜÜ 
	SetVector
ÜÜ 
(
ÜÜ 
$str
ÜÜ 
,
ÜÜ  
new
ÜÜ! $
Vector4
ÜÜ% ,
(
ÜÜ, -
source
ÜÜ- 3
.
ÜÜ3 4
width
ÜÜ4 9
,
ÜÜ9 :
source
ÜÜ; A
.
ÜÜA B
height
ÜÜB H
,
ÜÜH I
$num
ÜÜJ L
,
ÜÜL M
$num
ÜÜN P
)
ÜÜP Q
)
ÜÜQ R
;
ÜÜR S
cs
ÝÝ 
.
ÝÝ 
Dispatch
ÝÝ 
(
ÝÝ 
kernel
ÝÝ 
,
ÝÝ 
Mathf
ÝÝ  %
.
ÝÝ% &
	CeilToInt
ÝÝ& /
(
ÝÝ/ 0
source
ÝÝ0 6
.
ÝÝ6 7
width
ÝÝ7 <
/
ÝÝ= >
$num
ÝÝ? B
)
ÝÝB C
,
ÝÝC D
Mathf
ÝÝE J
.
ÝÝJ K
	CeilToInt
ÝÝK T
(
ÝÝT U
source
ÝÝU [
.
ÝÝ[ \
height
ÝÝ\ b
/
ÝÝc d
$num
ÝÝe h
)
ÝÝh i
,
ÝÝi j
$num
ÝÝk l
)
ÝÝl m
;
ÝÝm n
if
ßß 
(
ßß "
m_VectorscopeTexture
ßß $
==
ßß% '
null
ßß( ,
||
ßß- /"
m_VectorscopeTexture
ßß0 D
.
ßßD E
width
ßßE J
!=
ßßK M
source
ßßN T
.
ßßT U
width
ßßU Z
||
ßß[ ]"
m_VectorscopeTexture
ßß^ r
.
ßßr s
height
ßßs y
!=
ßßz |
sourceßß} 
.ßß 
heightßß 
)ßß 
{
àà 
GraphicsUtils
áá 
.
áá 
Destroy
áá %
(
áá% &"
m_VectorscopeTexture
áá& :
)
áá: ;
;
áá; <"
m_VectorscopeTexture
ââ $
=
ââ% &
new
ââ' *
RenderTexture
ââ+ 8
(
ââ8 9
source
ââ9 ?
.
ââ? @
width
ââ@ E
,
ââE F
source
ââG M
.
ââM N
height
ââN T
,
ââT U
$num
ââV W
,
ââW X!
RenderTextureFormat
ââY l
.
ââl m
ARGB32
ââm s
,
ââs t%
RenderTextureReadWriteââu 
.ââ 
Linearââ 
)ââ 
{
ãã 
	hideFlags
ää 
=
ää 
	HideFlags
ää  )
.
ää) *
DontSave
ää* 2
,
ää2 3
wrapMode
åå 
=
åå 
TextureWrapMode
åå .
.
åå. /
Clamp
åå/ 4
,
åå4 5

filterMode
ææ 
=
ææ  

FilterMode
ææ! +
.
ææ+ ,
Bilinear
ææ, 4
}
çç 
;
çç 
}
èè 
if
êê 
(
êê 

m_Material
êê 
==
êê 
null
êê "
)
êê" #

m_Material
ëë 
=
ëë 
new
ëë  
Material
ëë! )
(
ëë) *
Shader
ëë* 0
.
ëë0 1
Find
ëë1 5
(
ëë5 6
$str
ëë6 b
)
ëëb c
)
ëëc d
{
ëëe f
	hideFlags
ëëg p
=
ëëq r
	HideFlags
ëës |
.
ëë| }
DontSaveëë} 
}ëë 
;ëë 

m_Material
íí 
.
íí 
	SetBuffer
íí  
(
íí  !
$str
íí! /
,
íí/ 0
m_Buffer
íí1 9
)
íí9 :
;
íí: ;

m_Material
îî 
.
îî 
	SetVector
îî  
(
îî  !
$str
îî! (
,
îî( )
new
îî* -
Vector2
îî. 5
(
îî5 6"
m_VectorscopeTexture
îî6 J
.
îîJ K
width
îîK P
,
îîP Q"
m_VectorscopeTexture
îîR f
.
îîf g
height
îîg m
)
îîm n
)
îîn o
;
îîo p
}
ïï 	
}
ðð 
}ññ ë×
»D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Monitors\WaveformMonitor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
public 

class 
WaveformMonitor  
:! "!
PostProcessingMonitor# 8
{ 
static		 

GUIContent		 
s_MonitorTitle		 (
=		) *
new		+ .

GUIContent		/ 9
(		9 :
$str		: D
)		D E
;		E F
ComputeShader 
m_ComputeShader %
;% &
ComputeBuffer 
m_Buffer 
; 
Material 

m_Material 
; 
RenderTexture 
m_WaveformTexture '
;' (
Rect 
m_MonitorAreaRect 
; 
public 
WaveformMonitor 
( 
)  
{ 	
m_ComputeShader 
= 
EditorResources -
.- .
Load. 2
<2 3
ComputeShader3 @
>@ A
(A B
$strB d
)d e
;e f
} 	
public 
override 
void 
Dispose $
($ %
)% &
{ 	
GraphicsUtils 
. 
Destroy !
(! "

m_Material" ,
), -
;- .
GraphicsUtils 
. 
Destroy !
(! "
m_WaveformTexture" 3
)3 4
;4 5
if 
( 
m_Buffer 
!= 
null  
)  !
m_Buffer 
. 
Release  
(  !
)! "
;" #

m_Material 
= 
null 
; 
m_WaveformTexture 
= 
null  $
;$ %
m_Buffer   
=   
null   
;   
}!! 	
public## 
override## 
bool## 
IsSupported## (
(##( )
)##) *
{$$ 	
return%% 
m_ComputeShader%% "
!=%%# %
null%%& *
&&%%+ -
GraphicsUtils%%. ;
.%%; <
supportsDX11%%< H
;%%H I
}&& 	
public(( 
override(( 

GUIContent(( "
GetMonitorTitle((# 2
(((2 3
)((3 4
{)) 	
return** 
s_MonitorTitle** !
;**! "
}++ 	
public-- 
override-- 
void-- 
OnMonitorSettings-- .
(--. /
)--/ 0
{.. 	
	EditorGUI// 
.// 
BeginChangeCheck// &
(//& '
)//' (
;//( )
bool11 
refreshOnPlay11 
=11  
m_MonitorSettings11! 2
.112 3
refreshOnPlay113 @
;11@ A
float22 
exposure22 
=22 
m_MonitorSettings22 .
.22. /
waveformExposure22/ ?
;22? @
bool33 
Y33 
=33 
m_MonitorSettings33 &
.33& '
	waveformY33' 0
;330 1
bool44 
R44 
=44 
m_MonitorSettings44 &
.44& '
	waveformR44' 0
;440 1
bool55 
G55 
=55 
m_MonitorSettings55 &
.55& '
	waveformG55' 0
;550 1
bool66 
B66 
=66 
m_MonitorSettings66 &
.66& '
	waveformB66' 0
;660 1
refreshOnPlay88 
=88 
	GUILayout88 %
.88% &
Toggle88& ,
(88, -
refreshOnPlay88- :
,88: ;
new88< ?

GUIContent88@ J
(88J K
FxStyles88K S
.88S T
playIcon88T \
,88\ ]
$str	88^ ¨
)
88¨ ©
,
88© ª
FxStyles
88« ³
.
88³ ´
	preButton
88´ ½
)
88½ ¾
;
88¾ ¿
exposure:: 
=:: 
	GUILayout::  
.::  !
HorizontalSlider::! 1
(::1 2
exposure::2 :
,::: ;
$num::< A
,::A B
$num::C G
,::G H
FxStyles::I Q
.::Q R
	preSlider::R [
,::[ \
FxStyles::] e
.::e f
preSliderThumb::f t
,::t u
	GUILayout::v 
.	:: 
Width
:: 
(
:: 
$num
:: 
)
:: 
)
:: 
;
:: 
Y<< 
=<< 
	GUILayout<< 
.<< 
Toggle<<  
(<<  !
Y<<! "
,<<" #
new<<$ '

GUIContent<<( 2
(<<2 3
$str<<3 6
,<<6 7
$str<<8 [
)<<[ \
,<<\ ]
FxStyles<<^ f
.<<f g
	preButton<<g p
)<<p q
;<<q r
if>> 
(>> 
Y>> 
)>> 
{?? 
R@@ 
=@@ 
false@@ 
;@@ 
GAA 
=AA 
falseAA 
;AA 
BBB 
=BB 
falseBB 
;BB 
}CC 
REE 
=EE 
	GUILayoutEE 
.EE 
ToggleEE  
(EE  !
REE! "
,EE" #
newEE$ '

GUIContentEE( 2
(EE2 3
$strEE3 6
,EE6 7
$strEE8 P
)EEP Q
,EEQ R
FxStylesEES [
.EE[ \
	preButtonEE\ e
)EEe f
;EEf g
GFF 
=FF 
	GUILayoutFF 
.FF 
ToggleFF  
(FF  !
GFF! "
,FF" #
newFF$ '

GUIContentFF( 2
(FF2 3
$strFF3 6
,FF6 7
$strFF8 R
)FFR S
,FFS T
FxStylesFFU ]
.FF] ^
	preButtonFF^ g
)FFg h
;FFh i
BGG 
=GG 
	GUILayoutGG 
.GG 
ToggleGG  
(GG  !
BGG! "
,GG" #
newGG$ '

GUIContentGG( 2
(GG2 3
$strGG3 6
,GG6 7
$strGG8 Q
)GGQ R
,GGR S
FxStylesGGT \
.GG\ ]
	preButtonGG] f
)GGf g
;GGg h
ifII 
(II 
RII 
||II 
GII 
||II 
BII 
)II 
YJJ 
=JJ 
falseJJ 
;JJ 
ifLL 
(LL 
!LL 
YLL 
&&LL 
!LL 
RLL 
&&LL 
!LL 
GLL 
&&LL !
!LL" #
BLL# $
)LL$ %
{MM 
RNN 
=NN 
trueNN 
;NN 
GOO 
=OO 
trueOO 
;OO 
BPP 
=PP 
truePP 
;PP 
}QQ 
ifSS 
(SS 
	EditorGUISS 
.SS 
EndChangeCheckSS (
(SS( )
)SS) *
)SS* +
{TT 
UndoUU 
.UU 
RecordObjectUU !
(UU! "
m_BaseEditorUU" .
.UU. /
serializedObjectUU/ ?
.UU? @
targetObjectUU@ L
,UUL M
$strUUN j
)UUj k
;UUk l
m_MonitorSettingsVV !
.VV! "
refreshOnPlayVV" /
=VV0 1
refreshOnPlayVV2 ?
;VV? @
m_MonitorSettingsWW !
.WW! "
waveformExposureWW" 2
=WW3 4
exposureWW5 =
;WW= >
m_MonitorSettingsXX !
.XX! "
	waveformYXX" +
=XX, -
YXX. /
;XX/ 0
m_MonitorSettingsYY !
.YY! "
	waveformRYY" +
=YY, -
RYY. /
;YY/ 0
m_MonitorSettingsZZ !
.ZZ! "
	waveformGZZ" +
=ZZ, -
GZZ. /
;ZZ/ 0
m_MonitorSettings[[ !
.[[! "
	waveformB[[" +
=[[, -
B[[. /
;[[/ 0!
InternalEditorUtility\\ %
.\\% &
RepaintAllViews\\& 5
(\\5 6
)\\6 7
;\\7 8
}]] 
}^^ 	
public`` 
override`` 
void`` 
OnMonitorGUI`` )
(``) *
Rect``* .
r``/ 0
)``0 1
{aa 	
ifbb 
(bb 
Eventbb 
.bb 
currentbb 
.bb 
typebb "
==bb# %
	EventTypebb& /
.bb/ 0
Repaintbb0 7
)bb7 8
{cc 
ifee 
(ee 
Mathfee 
.ee 
Approximatelyee '
(ee' (
m_MonitorAreaRectee( 9
.ee9 :
widthee: ?
,ee? @
$numeeA B
)eeB C
&&eeD F
MathfeeG L
.eeL M
ApproximatelyeeM Z
(eeZ [
m_MonitorAreaRectee[ l
.eel m
heighteem s
,ees t
$numeeu v
)eev w
)eew x!
InternalEditorUtilityff )
.ff) *
RepaintAllViewsff* 9
(ff9 :
)ff: ;
;ff; <
floatii 
widthii 
=ii 
m_WaveformTextureii /
!=ii0 2
nullii3 7
?jj 
Mathfjj 
.jj 
Minjj 
(jj  
m_WaveformTexturejj  1
.jj1 2
widthjj2 7
,jj7 8
rjj9 :
.jj: ;
widthjj; @
-jjA B
$numjjC F
)jjF G
:kk 
rkk 
.kk 
widthkk 
;kk 
floatll 
heightll 
=ll 
m_WaveformTexturell 0
!=ll1 3
nullll4 8
?mm 
Mathfmm 
.mm 
Minmm 
(mm  
m_WaveformTexturemm  1
.mm1 2
heightmm2 8
,mm8 9
rmm: ;
.mm; <
heightmm< B
-mmC D
$nummmE H
)mmH I
:nn 
rnn 
.nn 
heightnn 
;nn 
m_MonitorAreaRectpp !
=pp" #
newpp$ '
Rectpp( ,
(pp, -
Mathfqq 
.qq 
Floorqq #
(qq# $
rqq$ %
.qq% &
xqq& '
+qq( )
rqq* +
.qq+ ,
widthqq, 1
/qq2 3
$numqq4 6
-qq7 8
widthqq9 >
/qq? @
$numqqA C
)qqC D
,qqD E
Mathfrr 
.rr 
Floorrr #
(rr# $
rrr$ %
.rr% &
yrr& '
+rr( )
rrr* +
.rr+ ,
heightrr, 2
/rr3 4
$numrr5 7
-rr8 9
heightrr: @
/rrA B
$numrrC E
-rrF G
$numrrH J
)rrJ K
,rrK L
widthss 
,ss 
heightss %
)tt 
;tt 
ifvv 
(vv 
m_WaveformTexturevv %
!=vv& (
nullvv) -
)vv- .
{ww 

m_Materialxx 
.xx 
SetFloatxx '
(xx' (
$strxx( 3
,xx3 4
m_MonitorSettingsxx5 F
.xxF G
waveformExposurexxG W
)xxW X
;xxX Y
varzz 
	oldActivezz !
=zz" #
RenderTexturezz$ 1
.zz1 2
activezz2 8
;zz8 9
Graphics{{ 
.{{ 
Blit{{ !
({{! "
null{{" &
,{{& '
m_WaveformTexture{{( 9
,{{9 :

m_Material{{; E
,{{E F
$num{{G H
){{H I
;{{I J
RenderTexture|| !
.||! "
active||" (
=||) *
	oldActive||+ 4
;||4 5
Graphics~~ 
.~~ 
DrawTexture~~ (
(~~( )
m_MonitorAreaRect~~) :
,~~: ;
m_WaveformTexture~~< M
)~~M N
;~~N O
var
 
color
 
=
 
Color
  %
.
% &
white
& +
;
+ ,
const
 
float
 
	kTickSize
  )
=
* +
$num
, .
;
. /
var
 
A
 
=
 
new
 
Vector3
  '
(
' (
m_MonitorAreaRect
( 9
.
9 :
x
: ;
,
; <
m_MonitorAreaRect
= N
.
N O
y
O P
)
P Q
;
Q R
var
 
E
 
=
 
new
 
Vector3
  '
(
' (
A
( )
.
) *
x
* +
+
, -
m_MonitorAreaRect
. ?
.
? @
width
@ E
+
F G
$num
H J
,
J K
m_MonitorAreaRect
L ]
.
] ^
y
^ _
)
_ `
;
` a
var
 
I
 
=
 
new
 
Vector3
  '
(
' (
E
( )
.
) *
x
* +
,
+ ,
E
- .
.
. /
y
/ 0
+
1 2
m_MonitorAreaRect
3 D
.
D E
height
E K
+
L M
$num
N P
)
P Q
;
Q R
var
 
M
 
=
 
new
 
Vector3
  '
(
' (
A
( )
.
) *
x
* +
,
+ ,
I
- .
.
. /
y
/ 0
)
0 1
;
1 2
var
 
C
 
=
 
new
 
Vector3
  '
(
' (
A
( )
.
) *
x
* +
+
, -
(
. /
E
/ 0
.
0 1
x
1 2
-
3 4
A
5 6
.
6 7
x
7 8
)
8 9
/
: ;
$num
< >
,
> ?
A
@ A
.
A B
y
B C
)
C D
;
D E
var
 
G
 
=
 
new
 
Vector3
  '
(
' (
E
( )
.
) *
x
* +
,
+ ,
E
- .
.
. /
y
/ 0
+
1 2
(
3 4
I
4 5
.
5 6
y
6 7
-
8 9
E
: ;
.
; <
y
< =
)
= >
/
? @
$num
A C
)
C D
;
D E
var
 
K
 
=
 
new
 
Vector3
  '
(
' (
M
( )
.
) *
x
* +
+
, -
(
. /
I
/ 0
.
0 1
x
1 2
-
3 4
M
5 6
.
6 7
x
7 8
)
8 9
/
: ;
$num
< >
,
> ?
M
@ A
.
A B
y
B C
)
C D
;
D E
var
 
O
 
=
 
new
 
Vector3
  '
(
' (
A
( )
.
) *
x
* +
,
+ ,
A
- .
.
. /
y
/ 0
+
1 2
(
3 4
M
4 5
.
5 6
y
6 7
-
8 9
A
: ;
.
; <
y
< =
)
= >
/
? @
$num
A C
)
C D
;
D E
var
 
P
 
=
 
new
 
Vector3
  '
(
' (
A
( )
.
) *
x
* +
,
+ ,
A
- .
.
. /
y
/ 0
+
1 2
(
3 4
O
4 5
.
5 6
y
6 7
-
8 9
A
: ;
.
; <
y
< =
)
= >
/
? @
$num
A C
)
C D
;
D E
var
 
F
 
=
 
new
 
Vector3
  '
(
' (
E
( )
.
) *
x
* +
,
+ ,
E
- .
.
. /
y
/ 0
+
1 2
(
3 4
G
4 5
.
5 6
y
6 7
-
8 9
E
: ;
.
; <
y
< =
)
= >
/
? @
$num
A C
)
C D
;
D E
var
 
N
 
=
 
new
 
Vector3
  '
(
' (
A
( )
.
) *
x
* +
,
+ ,
O
- .
.
. /
y
/ 0
+
1 2
(
3 4
M
4 5
.
5 6
y
6 7
-
8 9
O
: ;
.
; <
y
< =
)
= >
/
? @
$num
A C
)
C D
;
D E
var
 
H
 
=
 
new
 
Vector3
  '
(
' (
E
( )
.
) *
x
* +
,
+ ,
G
- .
.
. /
y
/ 0
+
1 2
(
3 4
I
4 5
.
5 6
y
6 7
-
8 9
G
: ;
.
; <
y
< =
)
= >
/
? @
$num
A C
)
C D
;
D E
var
 
B
 
=
 
new
 
Vector3
  '
(
' (
A
( )
.
) *
x
* +
+
, -
(
. /
C
/ 0
.
0 1
x
1 2
-
3 4
A
5 6
.
6 7
x
7 8
)
8 9
/
: ;
$num
< >
,
> ?
A
@ A
.
A B
y
B C
)
C D
;
D E
var
 
L
 
=
 
new
 
Vector3
  '
(
' (
M
( )
.
) *
x
* +
+
, -
(
. /
K
/ 0
.
0 1
x
1 2
-
3 4
M
5 6
.
6 7
x
7 8
)
8 9
/
: ;
$num
< >
,
> ?
M
@ A
.
A B
y
B C
)
C D
;
D E
var
 
D
 
=
 
new
 
Vector3
  '
(
' (
C
( )
.
) *
x
* +
+
, -
(
. /
E
/ 0
.
0 1
x
1 2
-
3 4
C
5 6
.
6 7
x
7 8
)
8 9
/
: ;
$num
< >
,
> ?
A
@ A
.
A B
y
B C
)
C D
;
D E
var
 
J
 
=
 
new
 
Vector3
  '
(
' (
K
( )
.
) *
x
* +
+
, -
(
. /
I
/ 0
.
0 1
x
1 2
-
3 4
K
5 6
.
6 7
x
7 8
)
8 9
/
: ;
$num
< >
,
> ?
M
@ A
.
A B
y
B C
)
C D
;
D E
Handles
 
.
 
color
 !
=
" #
color
$ )
;
) *
Handles
   
.
   
DrawLine
   $
(
  $ %
A
  % &
,
  & '
E
  ( )
)
  ) *
;
  * +
Handles
¡¡ 
.
¡¡ 
DrawLine
¡¡ $
(
¡¡$ %
E
¡¡% &
,
¡¡& '
I
¡¡( )
)
¡¡) *
;
¡¡* +
Handles
¢¢ 
.
¢¢ 
DrawLine
¢¢ $
(
¢¢$ %
I
¢¢% &
,
¢¢& '
M
¢¢( )
)
¢¢) *
;
¢¢* +
Handles
££ 
.
££ 
DrawLine
££ $
(
££$ %
M
££% &
,
££& '
new
££( +
Vector3
££, 3
(
££3 4
A
££4 5
.
££5 6
x
££6 7
,
££7 8
A
££9 :
.
££: ;
y
££; <
-
££= >
$num
££? A
)
££A B
)
££B C
;
££C D
Handles
¦¦ 
.
¦¦ 
DrawLine
¦¦ $
(
¦¦$ %
A
¦¦% &
,
¦¦& '
new
¦¦( +
Vector3
¦¦, 3
(
¦¦3 4
A
¦¦4 5
.
¦¦5 6
x
¦¦6 7
-
¦¦8 9
	kTickSize
¦¦: C
,
¦¦C D
A
¦¦E F
.
¦¦F G
y
¦¦G H
)
¦¦H I
)
¦¦I J
;
¦¦J K
Handles
§§ 
.
§§ 
DrawLine
§§ $
(
§§$ %
P
§§% &
,
§§& '
new
§§( +
Vector3
§§, 3
(
§§3 4
P
§§4 5
.
§§5 6
x
§§6 7
-
§§8 9
	kTickSize
§§: C
,
§§C D
P
§§E F
.
§§F G
y
§§G H
)
§§H I
)
§§I J
;
§§J K
Handles
¨¨ 
.
¨¨ 
DrawLine
¨¨ $
(
¨¨$ %
O
¨¨% &
,
¨¨& '
new
¨¨( +
Vector3
¨¨, 3
(
¨¨3 4
O
¨¨4 5
.
¨¨5 6
x
¨¨6 7
-
¨¨8 9
	kTickSize
¨¨: C
,
¨¨C D
O
¨¨E F
.
¨¨F G
y
¨¨G H
)
¨¨H I
)
¨¨I J
;
¨¨J K
Handles
©© 
.
©© 
DrawLine
©© $
(
©©$ %
N
©©% &
,
©©& '
new
©©( +
Vector3
©©, 3
(
©©3 4
N
©©4 5
.
©©5 6
x
©©6 7
-
©©8 9
	kTickSize
©©: C
,
©©C D
N
©©E F
.
©©F G
y
©©G H
)
©©H I
)
©©I J
;
©©J K
Handles
ªª 
.
ªª 
DrawLine
ªª $
(
ªª$ %
M
ªª% &
,
ªª& '
new
ªª( +
Vector3
ªª, 3
(
ªª3 4
M
ªª4 5
.
ªª5 6
x
ªª6 7
-
ªª8 9
	kTickSize
ªª: C
,
ªªC D
M
ªªE F
.
ªªF G
y
ªªG H
)
ªªH I
)
ªªI J
;
ªªJ K
Handles
¬¬ 
.
¬¬ 
DrawLine
¬¬ $
(
¬¬$ %
E
¬¬% &
,
¬¬& '
new
¬¬( +
Vector3
¬¬, 3
(
¬¬3 4
E
¬¬4 5
.
¬¬5 6
x
¬¬6 7
+
¬¬8 9
	kTickSize
¬¬: C
,
¬¬C D
E
¬¬E F
.
¬¬F G
y
¬¬G H
)
¬¬H I
)
¬¬I J
;
¬¬J K
Handles
­­ 
.
­­ 
DrawLine
­­ $
(
­­$ %
F
­­% &
,
­­& '
new
­­( +
Vector3
­­, 3
(
­­3 4
F
­­4 5
.
­­5 6
x
­­6 7
+
­­8 9
	kTickSize
­­: C
,
­­C D
F
­­E F
.
­­F G
y
­­G H
)
­­H I
)
­­I J
;
­­J K
Handles
®® 
.
®® 
DrawLine
®® $
(
®®$ %
G
®®% &
,
®®& '
new
®®( +
Vector3
®®, 3
(
®®3 4
G
®®4 5
.
®®5 6
x
®®6 7
+
®®8 9
	kTickSize
®®: C
,
®®C D
G
®®E F
.
®®F G
y
®®G H
)
®®H I
)
®®I J
;
®®J K
Handles
¯¯ 
.
¯¯ 
DrawLine
¯¯ $
(
¯¯$ %
H
¯¯% &
,
¯¯& '
new
¯¯( +
Vector3
¯¯, 3
(
¯¯3 4
H
¯¯4 5
.
¯¯5 6
x
¯¯6 7
+
¯¯8 9
	kTickSize
¯¯: C
,
¯¯C D
H
¯¯E F
.
¯¯F G
y
¯¯G H
)
¯¯H I
)
¯¯I J
;
¯¯J K
Handles
°° 
.
°° 
DrawLine
°° $
(
°°$ %
I
°°% &
,
°°& '
new
°°( +
Vector3
°°, 3
(
°°3 4
I
°°4 5
.
°°5 6
x
°°6 7
+
°°8 9
	kTickSize
°°: C
,
°°C D
I
°°E F
.
°°F G
y
°°G H
)
°°H I
)
°°I J
;
°°J K
Handles
³³ 
.
³³ 
DrawLine
³³ $
(
³³$ %
A
³³% &
,
³³& '
new
³³( +
Vector3
³³, 3
(
³³3 4
A
³³4 5
.
³³5 6
x
³³6 7
,
³³7 8
A
³³9 :
.
³³: ;
y
³³; <
-
³³= >
	kTickSize
³³? H
)
³³H I
)
³³I J
;
³³J K
Handles
´´ 
.
´´ 
DrawLine
´´ $
(
´´$ %
B
´´% &
,
´´& '
new
´´( +
Vector3
´´, 3
(
´´3 4
B
´´4 5
.
´´5 6
x
´´6 7
,
´´7 8
B
´´9 :
.
´´: ;
y
´´; <
-
´´= >
	kTickSize
´´? H
)
´´H I
)
´´I J
;
´´J K
Handles
µµ 
.
µµ 
DrawLine
µµ $
(
µµ$ %
C
µµ% &
,
µµ& '
new
µµ( +
Vector3
µµ, 3
(
µµ3 4
C
µµ4 5
.
µµ5 6
x
µµ6 7
,
µµ7 8
C
µµ9 :
.
µµ: ;
y
µµ; <
-
µµ= >
	kTickSize
µµ? H
)
µµH I
)
µµI J
;
µµJ K
Handles
¶¶ 
.
¶¶ 
DrawLine
¶¶ $
(
¶¶$ %
D
¶¶% &
,
¶¶& '
new
¶¶( +
Vector3
¶¶, 3
(
¶¶3 4
D
¶¶4 5
.
¶¶5 6
x
¶¶6 7
,
¶¶7 8
D
¶¶9 :
.
¶¶: ;
y
¶¶; <
-
¶¶= >
	kTickSize
¶¶? H
)
¶¶H I
)
¶¶I J
;
¶¶J K
Handles
·· 
.
·· 
DrawLine
·· $
(
··$ %
E
··% &
,
··& '
new
··( +
Vector3
··, 3
(
··3 4
E
··4 5
.
··5 6
x
··6 7
,
··7 8
E
··9 :
.
··: ;
y
··; <
-
··= >
	kTickSize
··? H
)
··H I
)
··I J
;
··J K
Handles
¹¹ 
.
¹¹ 
DrawLine
¹¹ $
(
¹¹$ %
M
¹¹% &
,
¹¹& '
new
¹¹( +
Vector3
¹¹, 3
(
¹¹3 4
M
¹¹4 5
.
¹¹5 6
x
¹¹6 7
,
¹¹7 8
M
¹¹9 :
.
¹¹: ;
y
¹¹; <
+
¹¹= >
	kTickSize
¹¹? H
)
¹¹H I
)
¹¹I J
;
¹¹J K
Handles
ºº 
.
ºº 
DrawLine
ºº $
(
ºº$ %
L
ºº% &
,
ºº& '
new
ºº( +
Vector3
ºº, 3
(
ºº3 4
L
ºº4 5
.
ºº5 6
x
ºº6 7
,
ºº7 8
L
ºº9 :
.
ºº: ;
y
ºº; <
+
ºº= >
	kTickSize
ºº? H
)
ººH I
)
ººI J
;
ººJ K
Handles
»» 
.
»» 
DrawLine
»» $
(
»»$ %
K
»»% &
,
»»& '
new
»»( +
Vector3
»», 3
(
»»3 4
K
»»4 5
.
»»5 6
x
»»6 7
,
»»7 8
K
»»9 :
.
»»: ;
y
»»; <
+
»»= >
	kTickSize
»»? H
)
»»H I
)
»»I J
;
»»J K
Handles
¼¼ 
.
¼¼ 
DrawLine
¼¼ $
(
¼¼$ %
J
¼¼% &
,
¼¼& '
new
¼¼( +
Vector3
¼¼, 3
(
¼¼3 4
J
¼¼4 5
.
¼¼5 6
x
¼¼6 7
,
¼¼7 8
J
¼¼9 :
.
¼¼: ;
y
¼¼; <
+
¼¼= >
	kTickSize
¼¼? H
)
¼¼H I
)
¼¼I J
;
¼¼J K
Handles
½½ 
.
½½ 
DrawLine
½½ $
(
½½$ %
I
½½% &
,
½½& '
new
½½( +
Vector3
½½, 3
(
½½3 4
I
½½4 5
.
½½5 6
x
½½6 7
,
½½7 8
I
½½9 :
.
½½: ;
y
½½; <
+
½½= >
	kTickSize
½½? H
)
½½H I
)
½½I J
;
½½J K
GUI
ÀÀ 
.
ÀÀ 
color
ÀÀ 
=
ÀÀ 
color
ÀÀ  %
;
ÀÀ% &
GUI
ÁÁ 
.
ÁÁ 
Label
ÁÁ 
(
ÁÁ 
new
ÁÁ !
Rect
ÁÁ" &
(
ÁÁ& '
A
ÁÁ' (
.
ÁÁ( )
x
ÁÁ) *
-
ÁÁ+ ,
	kTickSize
ÁÁ- 6
-
ÁÁ7 8
$num
ÁÁ9 <
,
ÁÁ< =
A
ÁÁ> ?
.
ÁÁ? @
y
ÁÁ@ A
-
ÁÁB C
$num
ÁÁD G
,
ÁÁG H
$num
ÁÁI L
,
ÁÁL M
$num
ÁÁN Q
)
ÁÁQ R
,
ÁÁR S
$str
ÁÁT Y
,
ÁÁY Z
FxStyles
ÁÁ[ c
.
ÁÁc d
tickStyleRight
ÁÁd r
)
ÁÁr s
;
ÁÁs t
GUI
ÂÂ 
.
ÂÂ 
Label
ÂÂ 
(
ÂÂ 
new
ÂÂ !
Rect
ÂÂ" &
(
ÂÂ& '
O
ÂÂ' (
.
ÂÂ( )
x
ÂÂ) *
-
ÂÂ+ ,
	kTickSize
ÂÂ- 6
-
ÂÂ7 8
$num
ÂÂ9 <
,
ÂÂ< =
O
ÂÂ> ?
.
ÂÂ? @
y
ÂÂ@ A
-
ÂÂB C
$num
ÂÂD G
,
ÂÂG H
$num
ÂÂI L
,
ÂÂL M
$num
ÂÂN Q
)
ÂÂQ R
,
ÂÂR S
$str
ÂÂT Y
,
ÂÂY Z
FxStyles
ÂÂ[ c
.
ÂÂc d
tickStyleRight
ÂÂd r
)
ÂÂr s
;
ÂÂs t
GUI
ÃÃ 
.
ÃÃ 
Label
ÃÃ 
(
ÃÃ 
new
ÃÃ !
Rect
ÃÃ" &
(
ÃÃ& '
M
ÃÃ' (
.
ÃÃ( )
x
ÃÃ) *
-
ÃÃ+ ,
	kTickSize
ÃÃ- 6
-
ÃÃ7 8
$num
ÃÃ9 <
,
ÃÃ< =
M
ÃÃ> ?
.
ÃÃ? @
y
ÃÃ@ A
-
ÃÃB C
$num
ÃÃD G
,
ÃÃG H
$num
ÃÃI L
,
ÃÃL M
$num
ÃÃN Q
)
ÃÃQ R
,
ÃÃR S
$str
ÃÃT Y
,
ÃÃY Z
FxStyles
ÃÃ[ c
.
ÃÃc d
tickStyleRight
ÃÃd r
)
ÃÃr s
;
ÃÃs t
GUI
ÅÅ 
.
ÅÅ 
Label
ÅÅ 
(
ÅÅ 
new
ÅÅ !
Rect
ÅÅ" &
(
ÅÅ& '
E
ÅÅ' (
.
ÅÅ( )
x
ÅÅ) *
+
ÅÅ+ ,
	kTickSize
ÅÅ- 6
+
ÅÅ7 8
$num
ÅÅ9 ;
,
ÅÅ; <
E
ÅÅ= >
.
ÅÅ> ?
y
ÅÅ? @
-
ÅÅA B
$num
ÅÅC F
,
ÅÅF G
$num
ÅÅH K
,
ÅÅK L
$num
ÅÅM P
)
ÅÅP Q
,
ÅÅQ R
$str
ÅÅS X
,
ÅÅX Y
FxStyles
ÅÅZ b
.
ÅÅb c
tickStyleLeft
ÅÅc p
)
ÅÅp q
;
ÅÅq r
GUI
ÆÆ 
.
ÆÆ 
Label
ÆÆ 
(
ÆÆ 
new
ÆÆ !
Rect
ÆÆ" &
(
ÆÆ& '
G
ÆÆ' (
.
ÆÆ( )
x
ÆÆ) *
+
ÆÆ+ ,
	kTickSize
ÆÆ- 6
+
ÆÆ7 8
$num
ÆÆ9 ;
,
ÆÆ; <
G
ÆÆ= >
.
ÆÆ> ?
y
ÆÆ? @
-
ÆÆA B
$num
ÆÆC F
,
ÆÆF G
$num
ÆÆH K
,
ÆÆK L
$num
ÆÆM P
)
ÆÆP Q
,
ÆÆQ R
$str
ÆÆS X
,
ÆÆX Y
FxStyles
ÆÆZ b
.
ÆÆb c
tickStyleLeft
ÆÆc p
)
ÆÆp q
;
ÆÆq r
GUI
ÇÇ 
.
ÇÇ 
Label
ÇÇ 
(
ÇÇ 
new
ÇÇ !
Rect
ÇÇ" &
(
ÇÇ& '
I
ÇÇ' (
.
ÇÇ( )
x
ÇÇ) *
+
ÇÇ+ ,
	kTickSize
ÇÇ- 6
+
ÇÇ7 8
$num
ÇÇ9 ;
,
ÇÇ; <
I
ÇÇ= >
.
ÇÇ> ?
y
ÇÇ? @
-
ÇÇA B
$num
ÇÇC F
,
ÇÇF G
$num
ÇÇH K
,
ÇÇK L
$num
ÇÇM P
)
ÇÇP Q
,
ÇÇQ R
$str
ÇÇS X
,
ÇÇX Y
FxStyles
ÇÇZ b
.
ÇÇb c
tickStyleLeft
ÇÇc p
)
ÇÇp q
;
ÇÇq r
GUI
ÉÉ 
.
ÉÉ 
Label
ÉÉ 
(
ÉÉ 
new
ÉÉ !
Rect
ÉÉ" &
(
ÉÉ& '
M
ÉÉ' (
.
ÉÉ( )
x
ÉÉ) *
-
ÉÉ+ ,
$num
ÉÉ- 0
,
ÉÉ0 1
M
ÉÉ2 3
.
ÉÉ3 4
y
ÉÉ4 5
+
ÉÉ6 7
	kTickSize
ÉÉ8 A
-
ÉÉB C
$num
ÉÉD F
,
ÉÉF G
$num
ÉÉH K
,
ÉÉK L
$num
ÉÉM P
)
ÉÉP Q
,
ÉÉQ R
$str
ÉÉS X
,
ÉÉX Y
FxStyles
ÉÉZ b
.
ÉÉb c
tickStyleCenter
ÉÉc r
)
ÉÉr s
;
ÉÉs t
GUI
ÊÊ 
.
ÊÊ 
Label
ÊÊ 
(
ÊÊ 
new
ÊÊ !
Rect
ÊÊ" &
(
ÊÊ& '
K
ÊÊ' (
.
ÊÊ( )
x
ÊÊ) *
-
ÊÊ+ ,
$num
ÊÊ- 0
,
ÊÊ0 1
K
ÊÊ2 3
.
ÊÊ3 4
y
ÊÊ4 5
+
ÊÊ6 7
	kTickSize
ÊÊ8 A
-
ÊÊB C
$num
ÊÊD F
,
ÊÊF G
$num
ÊÊH K
,
ÊÊK L
$num
ÊÊM P
)
ÊÊP Q
,
ÊÊQ R
$str
ÊÊS X
,
ÊÊX Y
FxStyles
ÊÊZ b
.
ÊÊb c
tickStyleCenter
ÊÊc r
)
ÊÊr s
;
ÊÊs t
GUI
ËË 
.
ËË 
Label
ËË 
(
ËË 
new
ËË !
Rect
ËË" &
(
ËË& '
I
ËË' (
.
ËË( )
x
ËË) *
-
ËË+ ,
$num
ËË- 0
,
ËË0 1
I
ËË2 3
.
ËË3 4
y
ËË4 5
+
ËË6 7
	kTickSize
ËË8 A
-
ËËB C
$num
ËËD F
,
ËËF G
$num
ËËH K
,
ËËK L
$num
ËËM P
)
ËËP Q
,
ËËQ R
$str
ËËS X
,
ËËX Y
FxStyles
ËËZ b
.
ËËb c
tickStyleCenter
ËËc r
)
ËËr s
;
ËËs t
}
ÌÌ 
}
ÍÍ 
}
ÎÎ 	
public
ÐÐ 
override
ÐÐ 
void
ÐÐ 
OnFrameData
ÐÐ (
(
ÐÐ( )
RenderTexture
ÐÐ) 6
source
ÐÐ7 =
)
ÐÐ= >
{
ÑÑ 	
if
ÒÒ 
(
ÒÒ 
Application
ÒÒ 
.
ÒÒ 
	isPlaying
ÒÒ %
&&
ÒÒ& (
!
ÒÒ) *
m_MonitorSettings
ÒÒ* ;
.
ÒÒ; <
refreshOnPlay
ÒÒ< I
)
ÒÒI J
return
ÓÓ 
;
ÓÓ 
if
ÕÕ 
(
ÕÕ 
Mathf
ÕÕ 
.
ÕÕ 
Approximately
ÕÕ #
(
ÕÕ# $
m_MonitorAreaRect
ÕÕ$ 5
.
ÕÕ5 6
width
ÕÕ6 ;
,
ÕÕ; <
$num
ÕÕ= >
)
ÕÕ> ?
||
ÕÕ@ B
Mathf
ÕÕC H
.
ÕÕH I
Approximately
ÕÕI V
(
ÕÕV W
m_MonitorAreaRect
ÕÕW h
.
ÕÕh i
height
ÕÕi o
,
ÕÕo p
$num
ÕÕq r
)
ÕÕr s
)
ÕÕs t
return
ÖÖ 
;
ÖÖ 
float
ØØ 
ratio
ØØ 
=
ØØ 
(
ØØ 
float
ØØ  
)
ØØ  !
source
ØØ! '
.
ØØ' (
width
ØØ( -
/
ØØ. /
(
ØØ0 1
float
ØØ1 6
)
ØØ6 7
source
ØØ7 =
.
ØØ= >
height
ØØ> D
;
ØØD E
int
ÙÙ 
h
ÙÙ 
=
ÙÙ 
$num
ÙÙ 
;
ÙÙ 
int
ÚÚ 
w
ÚÚ 
=
ÚÚ 
Mathf
ÚÚ 
.
ÚÚ 

FloorToInt
ÚÚ $
(
ÚÚ$ %
h
ÚÚ% &
*
ÚÚ' (
ratio
ÚÚ) .
)
ÚÚ. /
;
ÚÚ/ 0
var
ÜÜ 
rt
ÜÜ 
=
ÜÜ 
RenderTexture
ÜÜ "
.
ÜÜ" #
GetTemporary
ÜÜ# /
(
ÜÜ/ 0
w
ÜÜ0 1
,
ÜÜ1 2
h
ÜÜ3 4
,
ÜÜ4 5
$num
ÜÜ6 7
,
ÜÜ7 8
source
ÜÜ9 ?
.
ÜÜ? @
format
ÜÜ@ F
)
ÜÜF G
;
ÜÜG H
Graphics
ÝÝ 
.
ÝÝ 
Blit
ÝÝ 
(
ÝÝ 
source
ÝÝ  
,
ÝÝ  !
rt
ÝÝ" $
)
ÝÝ$ %
;
ÝÝ% &
ComputeWaveform
ÞÞ 
(
ÞÞ 
rt
ÞÞ 
)
ÞÞ 
;
ÞÞ  
m_BaseEditor
ßß 
.
ßß 
Repaint
ßß  
(
ßß  !
)
ßß! "
;
ßß" #
RenderTexture
àà 
.
àà 
ReleaseTemporary
àà *
(
àà* +
rt
àà+ -
)
àà- .
;
àà. /
}
áá 	
void
ãã 
CreateBuffer
ãã 
(
ãã 
int
ãã 
width
ãã #
,
ãã# $
int
ãã% (
height
ãã) /
)
ãã/ 0
{
ää 	
m_Buffer
åå 
=
åå 
new
åå 
ComputeBuffer
åå (
(
åå( )
width
åå) .
*
åå/ 0
height
åå1 7
,
åå7 8
sizeof
åå9 ?
(
åå? @
uint
åå@ D
)
ååD E
<<
ååF H
$num
ååI J
)
ååJ K
;
ååK L
}
ææ 	
void
èè 
ComputeWaveform
èè 
(
èè 
RenderTexture
èè *
source
èè+ 1
)
èè1 2
{
éé 	
if
êê 
(
êê 
m_Buffer
êê 
==
êê 
null
êê  
)
êê  !
{
ëë 
CreateBuffer
ìì 
(
ìì 
source
ìì #
.
ìì# $
width
ìì$ )
,
ìì) *
source
ìì+ 1
.
ìì1 2
height
ìì2 8
)
ìì8 9
;
ìì9 :
}
íí 
else
îî 
if
îî 
(
îî 
m_Buffer
îî 
.
îî 
count
îî #
!=
îî$ &
(
îî' (
source
îî( .
.
îî. /
width
îî/ 4
*
îî5 6
source
îî7 =
.
îî= >
height
îî> D
)
îîD E
)
îîE F
{
ïï 
m_Buffer
ðð 
.
ðð 
Release
ðð  
(
ðð  !
)
ðð! "
;
ðð" #
CreateBuffer
ññ 
(
ññ 
source
ññ #
.
ññ# $
width
ññ$ )
,
ññ) *
source
ññ+ 1
.
ññ1 2
height
ññ2 8
)
ññ8 9
;
ññ9 :
}
òò 
var
ôô 
channels
ôô 
=
ôô 
m_MonitorSettings
ôô ,
.
ôô, -
	waveformY
ôô- 6
?
õõ 
new
õõ 
Vector4
õõ 
(
õõ 
$num
õõ  
,
õõ  !
$num
õõ" $
,
õõ$ %
$num
õõ& (
,
õõ( )
$num
õõ* ,
)
õõ, -
:
öö 
new
öö 
Vector4
öö 
(
öö 
m_MonitorSettings
öö /
.
öö/ 0
	waveformR
öö0 9
?
öö: ;
$num
öö< >
:
öö? @
$num
ööA C
,
ööC D
m_MonitorSettings
ööE V
.
ööV W
	waveformG
ööW `
?
ööa b
$num
ööc e
:
ööf g
$num
ööh j
,
ööj k
m_MonitorSettings
ööl }
.
öö} ~
	waveformBöö~ 
?öö 
$numöö 
:öö 
$numöö 
,öö 
$numöö 
)öö 
;öö 
var
øø 
cs
øø 
=
øø 
m_ComputeShader
øø $
;
øø$ %
int
úú 
kernel
úú 
=
úú 
cs
úú 
.
úú 

FindKernel
úú &
(
úú& '
$str
úú' 7
)
úú7 8
;
úú8 9
cs
ûû 
.
ûû 
	SetBuffer
ûû 
(
ûû 
kernel
ûû 
,
ûû  
$str
ûû! ,
,
ûû, -
m_Buffer
ûû. 6
)
ûû6 7
;
ûû7 8
cs
üü 
.
üü 
Dispatch
üü 
(
üü 
kernel
üü 
,
üü 
source
üü  &
.
üü& '
width
üü' ,
,
üü, -
$num
üü. /
,
üü/ 0
$num
üü1 2
)
üü2 3
;
üü3 4
kernel
þþ 
=
þþ 
cs
þþ 
.
þþ 

FindKernel
þþ "
(
þþ" #
$str
þþ# .
)
þþ. /
;
þþ/ 0
cs
ÿÿ 
.
ÿÿ 
	SetBuffer
ÿÿ 
(
ÿÿ 
kernel
ÿÿ 
,
ÿÿ  
$str
ÿÿ! ,
,
ÿÿ, -
m_Buffer
ÿÿ. 6
)
ÿÿ6 7
;
ÿÿ7 8
cs
 
.
 

SetTexture
 
(
 
kernel
  
,
  !
$str
" +
,
+ ,
source
- 3
)
3 4
;
4 5
cs
 
.
 
SetInt
 
(
 
$str
 !
,
! "
GraphicsUtils
# 0
.
0 1 
isLinearColorSpace
1 C
?
D E
$num
F G
:
H I
$num
J K
)
K L
;
L M
cs
 
.
 
	SetVector
 
(
 
$str
 $
,
$ %
channels
& .
)
. /
;
/ 0
cs
 
.
 
Dispatch
 
(
 
kernel
 
,
 
source
  &
.
& '
width
' ,
,
, -
$num
. /
,
/ 0
$num
1 2
)
2 3
;
3 4
if
 
(
 
m_WaveformTexture
 !
==
" $
null
% )
||
* ,
m_WaveformTexture
- >
.
> ?
width
? D
!=
E G
source
H N
.
N O
width
O T
||
U W
m_WaveformTexture
X i
.
i j
height
j p
!=
q s
source
t z
.
z {
height{ 
) 
{
 
GraphicsUtils
 
.
 
Destroy
 %
(
% &
m_WaveformTexture
& 7
)
7 8
;
8 9
m_WaveformTexture
 !
=
" #
new
$ '
RenderTexture
( 5
(
5 6
source
6 <
.
< =
width
= B
,
B C
source
D J
.
J K
height
K Q
,
Q R
$num
S T
,
T U!
RenderTextureFormat
V i
.
i j
ARGB32
j p
,
p q%
RenderTextureReadWriter 
. 
Linear 
) 
{
 
	hideFlags
 
=
 
	HideFlags
  )
.
) *
DontSave
* 2
,
2 3
wrapMode
 
=
 
TextureWrapMode
 .
.
. /
Clamp
/ 4
,
4 5

filterMode
 
=
  

FilterMode
! +
.
+ ,
Bilinear
, 4
}
 
;
 
}
 
if
 
(
 

m_Material
 
==
 
null
 "
)
" #

m_Material
 
=
 
new
  
Material
! )
(
) *
Shader
* 0
.
0 1
Find
1 5
(
5 6
$str
6 _
)
_ `
)
` a
{
b c
	hideFlags
d m
=
n o
	HideFlags
p y
.
y z
DontSavez 
} 
; 

m_Material
 
.
 
	SetBuffer
  
(
  !
$str
! ,
,
, -
m_Buffer
. 6
)
6 7
;
7 8

m_Material
 
.
 
	SetVector
  
(
  !
$str
! (
,
( )
new
* -
Vector2
. 5
(
5 6
m_WaveformTexture
6 G
.
G H
width
H M
,
M N
m_WaveformTexture
O `
.
` a
height
a g
)
g h
)
h i
;
i j

m_Material
 
.
 
	SetVector
  
(
  !
$str
! ,
,
, -
channels
. 6
)
6 7
;
7 8
}
 	
}
 
} ®
ÀD:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\PostProcessingBehaviourEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[ 
CustomEditor 
( 
typeof 
( #
PostProcessingBehaviour 0
)0 1
)1 2
]2 3
public 

class )
PostProcessingBehaviourEditor .
:/ 0
Editor1 7
{		 
SerializedProperty

 
	m_Profile

 $
;

$ %
public 
void 
OnEnable 
( 
) 
{ 	
	m_Profile 
= 
FindSetting #
(# $
($ %#
PostProcessingBehaviour% <
x= >
)> ?
=>@ B
xC D
.D E
profileE L
)L M
;M N
} 	
public 
override 
void 
OnInspectorGUI +
(+ ,
), -
{ 	
serializedObject 
. 
Update #
(# $
)$ %
;% &
EditorGUILayout 
. 
PropertyField )
() *
	m_Profile* 3
)3 4
;4 5
serializedObject 
. #
ApplyModifiedProperties 4
(4 5
)5 6
;6 7
} 	
SerializedProperty 
FindSetting &
<& '
T' (
,( )
TValue* 0
>0 1
(1 2

Expression2 <
<< =
Func= A
<A B
TB C
,C D
TValueE K
>K L
>L M
exprN R
)R S
{ 	
return 
serializedObject #
.# $
FindProperty$ 0
(0 1
ReflectionUtils1 @
.@ A
GetFieldPathA M
(M N
exprN R
)R S
)S T
;T U
} 	
} 
} ü
¸D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\PostProcessingFactory.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
public 

class !
PostProcessingFactory &
{		 
[

 	
MenuItem

	 
(

 
$str

 9
,

9 :
priority

; C
=

D E
$num

F I
)

I J
]

J K
static 
void +
MenuCreatePostProcessingProfile 3
(3 4
)4 5
{ 	
var 
icon 
= 
EditorGUIUtility '
.' (
FindTexture( 3
(3 4
$str4 K
)K L
;L M
ProjectWindowUtil 
. 1
%StartNameEditingIfProjectWindowExists C
(C D
$numD E
,E F
ScriptableObjectG W
.W X
CreateInstanceX f
<f g*
DoCreatePostProcessingProfile	g 
>
 
(
 
)
 
,
 
$str
 ¬
,
¬ ­
icon
® ²
,
² ³
null
´ ¸
)
¸ ¹
;
¹ º
} 	
internal 
static !
PostProcessingProfile --
!CreatePostProcessingProfileAtPath. O
(O P
stringP V
pathW [
)[ \
{ 	
var 
profile 
= 
ScriptableObject *
.* +
CreateInstance+ 9
<9 :!
PostProcessingProfile: O
>O P
(P Q
)Q R
;R S
profile 
. 
name 
= 
Path 
.  
GetFileName  +
(+ ,
path, 0
)0 1
;1 2
profile 
. 
fog 
. 
enabled 
=  !
true" &
;& '
AssetDatabase 
. 
CreateAsset %
(% &
profile& -
,- .
path/ 3
)3 4
;4 5
return 
profile 
; 
} 	
} 
class 	)
DoCreatePostProcessingProfile
 '
:( )
EndNameEditAction* ;
{ 
public 
override 
void 
Action #
(# $
int$ '

instanceId( 2
,2 3
string4 :
pathName; C
,C D
stringE K
resourceFileL X
)X Y
{ 	!
PostProcessingProfile !
profile" )
=* +!
PostProcessingFactory, A
.A B-
!CreatePostProcessingProfileAtPathB c
(c d
pathNamed l
)l m
;m n
ProjectWindowUtil   
.   
ShowCreatedAsset   .
(  . /
profile  / 6
)  6 7
;  7 8
}!! 	
}"" 
}## æ
ºD:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\PostProcessingInspector.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{		 
[ 
CustomEditor 
( 
typeof 
( !
PostProcessingProfile .
). /
)/ 0
]0 1
public 

class #
PostProcessingInspector (
:) *
Editor+ 1
{ 
static 

GUIContent 
s_PreviewTitle (
=) *
new+ .

GUIContent/ 9
(9 :
$str: D
)D E
;E F!
PostProcessingProfile 
m_ConcreteTarget .
{ 	
get 
{ 
return 
target 
as  "!
PostProcessingProfile# 8
;8 9
}: ;
} 	
int 
m_CurrentMonitorID 
{ 	
get 
{ 
return 
m_ConcreteTarget )
.) *
monitors* 2
.2 3
currentMonitorID3 C
;C D
}E F
set 
{ 
m_ConcreteTarget "
." #
monitors# +
.+ ,
currentMonitorID, <
== >
value? D
;D E
}F G
} 	
List 
< !
PostProcessingMonitor "
>" #

m_Monitors$ .
;. /

GUIContent 
[ 
] 
m_MonitorNames #
;# $

Dictionary 
< %
PostProcessingModelEditor ,
,, -
PostProcessingModel. A
>A B
m_CustomEditorsC R
=S T
newU X

DictionaryY c
<c d%
PostProcessingModelEditord }
,} ~ 
PostProcessingModel	 
>
 
(
 
)
 
;
 
public 
bool &
IsInteractivePreviewOpened .
{/ 0
get1 4
;4 5
private6 =
set> A
;A B
}C D
void!! 
OnEnable!! 
(!! 
)!! 
{"" 	
if## 
(## 
target## 
==## 
null## 
)## 
return$$ 
;$$ 
var'' 
assembly'' 
='' 
Assembly'' #
.''# $
GetAssembly''$ /
(''/ 0
typeof''0 6
(''6 7#
PostProcessingInspector''7 N
)''N O
)''O P
;''P Q
var)) 
editorTypes)) 
=)) 
assembly)) &
.))& '
GetTypes))' /
())/ 0
)))0 1
.** 
Where** 
(** 
x** 
=>** 
x** 
.** 
	IsDefined** '
(**' (
typeof**( .
(**. /.
"PostProcessingModelEditorAttribute**/ Q
)**Q R
,**R S
false**T Y
)**Y Z
)**Z [
;**[ \
var,, 
customEditors,, 
=,, 
new,,  #

Dictionary,,$ .
<,,. /
Type,,/ 3
,,,3 4%
PostProcessingModelEditor,,5 N
>,,N O
(,,O P
),,P Q
;,,Q R
foreach-- 
(-- 
var-- 
editor-- 
in--  "
editorTypes--# .
)--. /
{.. 
var// 
attr// 
=// 
(// .
"PostProcessingModelEditorAttribute// >
)//> ?
editor//? E
.//E F
GetCustomAttributes//F Y
(//Y Z
typeof//Z `
(//` a/
"PostProcessingModelEditorAttribute	//a 
)
// 
,
// 
false
// 
)
// 
[
// 
$num
// 
]
// 
;
// 
var00 

effectType00 
=00  
attr00! %
.00% &
type00& *
;00* +
var11 
alwaysEnabled11 !
=11" #
attr11$ (
.11( )
alwaysEnabled11) 6
;116 7
var33 

editorInst33 
=33  
(33! "%
PostProcessingModelEditor33" ;
)33; <
	Activator33< E
.33E F
CreateInstance33F T
(33T U
editor33U [
)33[ \
;33\ ]

editorInst44 
.44 
alwaysEnabled44 (
=44) *
alwaysEnabled44+ 8
;448 9

editorInst55 
.55 
profile55 "
=55# $
target55% +
as55, .!
PostProcessingProfile55/ D
;55D E

editorInst66 
.66 
	inspector66 $
=66% &
this66' +
;66+ ,
customEditors77 
.77 
Add77 !
(77! "

effectType77" ,
,77, -

editorInst77. 8
)778 9
;779 :
}88 
var;; 
baseType;; 
=;; 
target;; !
.;;! "
GetType;;" )
(;;) *
);;* +
;;;+ ,
var<< 
property<< 
=<< 
serializedObject<< +
.<<+ ,
GetIterator<<, 7
(<<7 8
)<<8 9
;<<9 :
while>> 
(>> 
property>> 
.>> 
Next>>  
(>>  !
true>>! %
)>>% &
)>>& '
{?? 
if@@ 
(@@ 
!@@ 
property@@ 
.@@ 
hasChildren@@ )
)@@) *
continueAA 
;AA 
varCC 
typeCC 
=CC 
baseTypeCC #
;CC# $
varDD 
	srcObjectDD 
=DD 
ReflectionUtilsDD  /
.DD/ 0!
GetFieldValueFromPathDD0 E
(DDE F
serializedObjectDDF V
.DDV W
targetObjectDDW c
,DDc d
refDDe h
typeDDi m
,DDm n
propertyDDo w
.DDw x
propertyPath	DDx 
)
DD 
;
DD 
ifFF 
(FF 
	srcObjectFF 
==FF  
nullFF! %
)FF% &
continueGG 
;GG %
PostProcessingModelEditorII )
editorII* 0
;II0 1
ifJJ 
(JJ 
customEditorsJJ !
.JJ! "
TryGetValueJJ" -
(JJ- .
typeJJ. 2
,JJ2 3
outJJ4 7
editorJJ8 >
)JJ> ?
)JJ? @
{KK 
varLL 
effectLL 
=LL  
(LL! "
PostProcessingModelLL" 5
)LL5 6
	srcObjectLL6 ?
;LL? @
ifNN 
(NN 
editorNN 
.NN 
alwaysEnabledNN ,
)NN, -
effectOO 
.OO 
enabledOO &
=OO' (
editorOO) /
.OO/ 0
alwaysEnabledOO0 =
;OO= >
m_CustomEditorsQQ #
.QQ# $
AddQQ$ '
(QQ' (
editorQQ( .
,QQ. /
effectQQ0 6
)QQ6 7
;QQ7 8
editorRR 
.RR 
targetRR !
=RR" #
effectRR$ *
;RR* +
editorSS 
.SS 
serializedPropertySS -
=SS. /
propertySS0 8
.SS8 9
CopySS9 =
(SS= >
)SS> ?
;SS? @
editorTT 
.TT 
OnPreEnableTT &
(TT& '
)TT' (
;TT( )
}UU 
}VV 

m_MonitorsYY 
=YY 
newYY 
ListYY !
<YY! "!
PostProcessingMonitorYY" 7
>YY7 8
(YY8 9
)YY9 :
;YY: ;
var[[ 
monitors[[ 
=[[ 
new[[ 
List[[ #
<[[# $!
PostProcessingMonitor[[$ 9
>[[9 :
{\\ 
new]] 
HistogramMonitor]] $
(]]$ %
)]]% &
,]]& '
new^^ 
WaveformMonitor^^ #
(^^# $
)^^$ %
,^^% &
new__ 
ParadeMonitor__ !
(__! "
)__" #
,__# $
new`` 
VectorscopeMonitor`` &
(``& '
)``' (
}aa 
;aa 
varcc 
monitorNamescc 
=cc 
newcc "
Listcc# '
<cc' (

GUIContentcc( 2
>cc2 3
(cc3 4
)cc4 5
;cc5 6
foreachee 
(ee 
varee 
monitoree  
inee! #
monitorsee$ ,
)ee, -
{ff 
ifgg 
(gg 
monitorgg 
.gg 
IsSupportedgg '
(gg' (
)gg( )
)gg) *
{hh 
monitorii 
.ii 
Initii  
(ii  !
m_ConcreteTargetii! 1
.ii1 2
monitorsii2 :
,ii: ;
thisii< @
)ii@ A
;iiA B

m_Monitorsjj 
.jj 
Addjj "
(jj" #
monitorjj# *
)jj* +
;jj+ ,
monitorNameskk  
.kk  !
Addkk! $
(kk$ %
monitorkk% ,
.kk, -
GetMonitorTitlekk- <
(kk< =
)kk= >
)kk> ?
;kk? @
}ll 
}mm 
m_MonitorNamesoo 
=oo 
monitorNamesoo )
.oo) *
ToArrayoo* 1
(oo1 2
)oo2 3
;oo3 4
ifqq 
(qq 

m_Monitorsqq 
.qq 
Countqq  
>qq! "
$numqq# $
)qq$ %
m_ConcreteTargetrr  
.rr  !
monitorsrr! )
.rr) * 
onFrameEndEditorOnlyrr* >
=rr? @

OnFrameEndrrA K
;rrK L
}ss 	
voiduu 
	OnDisableuu 
(uu 
)uu 
{vv 	
ifww 
(ww 
m_CustomEditorsww 
!=ww  "
nullww# '
)ww' (
{xx 
foreachyy 
(yy 
varyy 
editoryy #
inyy$ &
m_CustomEditorsyy' 6
.yy6 7
Keysyy7 ;
)yy; <
editorzz 
.zz 
	OnDisablezz $
(zz$ %
)zz% &
;zz& '
m_CustomEditors|| 
.||  
Clear||  %
(||% &
)||& '
;||' (
}}} 
if 
( 

m_Monitors 
!= 
null "
)" #
{
 
foreach
 
(
 
var
 
monitor
 $
in
% '

m_Monitors
( 2
)
2 3
monitor
 
.
 
Dispose
 #
(
# $
)
$ %
;
% &

m_Monitors
 
.
 
Clear
  
(
  !
)
! "
;
" #
}
 
if
 
(
 
m_ConcreteTarget
  
!=
! #
null
$ (
)
( )
m_ConcreteTarget
  
.
  !
monitors
! )
.
) *"
onFrameEndEditorOnly
* >
=
? @
null
A E
;
E F
}
 	
void
 

OnFrameEnd
 
(
 
RenderTexture
 %
source
& ,
)
, -
{
 	
if
 
(
 
!
 (
IsInteractivePreviewOpened
 +
)
+ ,
return
 
;
 
if
 
(
  
m_CurrentMonitorID
 "
<
# $

m_Monitors
% /
.
/ 0
Count
0 5
)
5 6

m_Monitors
 
[
  
m_CurrentMonitorID
 -
]
- .
.
. /
OnFrameData
/ :
(
: ;
source
; A
)
A B
;
B C(
IsInteractivePreviewOpened
 &
=
' (
false
) .
;
. /
}
 	
public
 
override
 
void
 
OnInspectorGUI
 +
(
+ ,
)
, -
{
 	
serializedObject
 
.
 
Update
 #
(
# $
)
$ %
;
% &
var
 
e
 
=
 
Event
 
.
 
current
 !
;
! "
if
 
(
 
e
 
.
 
type
 
==
 
	EventType
 #
.
# $
ValidateCommand
$ 3
&&
4 6
e
7 8
.
8 9
commandName
9 D
==
E G
$str
H [
)
[ \
{
 
foreach
 
(
 
var
 
editor
 #
in
$ &
m_CustomEditors
' 6
)
6 7
editor
 
.
 
Value
  
.
  !

OnValidate
! +
(
+ ,
)
, -
;
- .
}
   
if
¢¢ 
(
¢¢ 
!
¢¢ 
m_ConcreteTarget
¢¢ !
.
¢¢! "

debugViews
¢¢" ,
.
¢¢, -
IsModeActive
¢¢- 9
(
¢¢9 :$
BuiltinDebugViewsModel
¢¢: P
.
¢¢P Q
Mode
¢¢Q U
.
¢¢U V
None
¢¢V Z
)
¢¢Z [
)
¢¢[ \
EditorGUILayout
££ 
.
££  
HelpBox
££  '
(
££' (
$str
££( |
,
££| }
MessageType££~ 
.££ 
Info££ 
)££ 
;££ 
foreach
¥¥ 
(
¥¥ 
var
¥¥ 
editor
¥¥ 
in
¥¥  "
m_CustomEditors
¥¥# 2
)
¥¥2 3
{
¦¦ 
	EditorGUI
§§ 
.
§§ 
BeginChangeCheck
§§ *
(
§§* +
)
§§+ ,
;
§§, -
editor
©© 
.
©© 
Key
©© 
.
©© 
OnGUI
©©  
(
©©  !
)
©©! "
;
©©" #
if
«« 
(
«« 
	EditorGUI
«« 
.
«« 
EndChangeCheck
«« ,
(
««, -
)
««- .
)
««. /
editor
¬¬ 
.
¬¬ 
Value
¬¬  
.
¬¬  !

OnValidate
¬¬! +
(
¬¬+ ,
)
¬¬, -
;
¬¬- .
}
­­ 
serializedObject
¯¯ 
.
¯¯ %
ApplyModifiedProperties
¯¯ 4
(
¯¯4 5
)
¯¯5 6
;
¯¯6 7
}
°° 	
public
²² 
override
²² 

GUIContent
²² "
GetPreviewTitle
²²# 2
(
²²2 3
)
²²3 4
{
³³ 	
return
´´ 
s_PreviewTitle
´´ !
;
´´! "
}
µµ 	
public
·· 
override
·· 
bool
·· 
HasPreviewGUI
·· *
(
··* +
)
··+ ,
{
¸¸ 	
return
¹¹ 
GraphicsUtils
¹¹  
.
¹¹  !
supportsDX11
¹¹! -
&&
¹¹. 0

m_Monitors
¹¹1 ;
.
¹¹; <
Count
¹¹< A
>
¹¹B C
$num
¹¹D E
;
¹¹E F
}
ºº 	
public
¼¼ 
override
¼¼ 
void
¼¼ 
OnPreviewSettings
¼¼ .
(
¼¼. /
)
¼¼/ 0
{
½½ 	
using
¾¾ 
(
¾¾ 
new
¾¾ 
EditorGUILayout
¾¾ &
.
¾¾& '
HorizontalScope
¾¾' 6
(
¾¾6 7
)
¾¾7 8
)
¾¾8 9
{
¿¿ 
if
ÀÀ 
(
ÀÀ  
m_CurrentMonitorID
ÀÀ &
<
ÀÀ' (

m_Monitors
ÀÀ) 3
.
ÀÀ3 4
Count
ÀÀ4 9
)
ÀÀ9 :

m_Monitors
ÁÁ 
[
ÁÁ  
m_CurrentMonitorID
ÁÁ 1
]
ÁÁ1 2
.
ÁÁ2 3
OnMonitorSettings
ÁÁ3 D
(
ÁÁD E
)
ÁÁE F
;
ÁÁF G
	GUILayout
ÃÃ 
.
ÃÃ 
Space
ÃÃ 
(
ÃÃ  
$num
ÃÃ  !
)
ÃÃ! "
;
ÃÃ" # 
m_CurrentMonitorID
ÄÄ "
=
ÄÄ# $
EditorGUILayout
ÄÄ% 4
.
ÄÄ4 5
Popup
ÄÄ5 :
(
ÄÄ: ; 
m_CurrentMonitorID
ÄÄ; M
,
ÄÄM N
m_MonitorNames
ÄÄO ]
,
ÄÄ] ^
FxStyles
ÄÄ_ g
.
ÄÄg h
preDropdown
ÄÄh s
,
ÄÄs t
	GUILayout
ÄÄu ~
.
ÄÄ~ 
MaxWidthÄÄ 
(ÄÄ 
$numÄÄ 
)ÄÄ 
)ÄÄ 
;ÄÄ 
}
ÅÅ 
}
ÆÆ 	
public
ÈÈ 
override
ÈÈ 
void
ÈÈ %
OnInteractivePreviewGUI
ÈÈ 4
(
ÈÈ4 5
Rect
ÈÈ5 9
r
ÈÈ: ;
,
ÈÈ; <
GUIStyle
ÈÈ= E

background
ÈÈF P
)
ÈÈP Q
{
ÉÉ 	(
IsInteractivePreviewOpened
ÊÊ &
=
ÊÊ' (
true
ÊÊ) -
;
ÊÊ- .
if
ÌÌ 
(
ÌÌ  
m_CurrentMonitorID
ÌÌ "
<
ÌÌ# $

m_Monitors
ÌÌ% /
.
ÌÌ/ 0
Count
ÌÌ0 5
)
ÌÌ5 6

m_Monitors
ÍÍ 
[
ÍÍ  
m_CurrentMonitorID
ÍÍ -
]
ÍÍ- .
.
ÍÍ. /
OnMonitorGUI
ÍÍ/ ;
(
ÍÍ; <
r
ÍÍ< =
)
ÍÍ= >
;
ÍÍ> ?
}
ÎÎ 	
}
ÏÏ 
}ÐÐ ú/
¼D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\PostProcessingModelEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
public 

class %
PostProcessingModelEditor *
{		 
public

 
PostProcessingModel

 "
target

# )
{

* +
get

, /
;

/ 0
internal

1 9
set

: =
;

= >
}

? @
public 
SerializedProperty !
serializedProperty" 4
{5 6
get7 :
;: ;
internal< D
setE H
;H I
}J K
	protected 
SerializedProperty $
m_SettingsProperty% 7
;7 8
	protected 
SerializedProperty $
m_EnabledProperty% 6
;6 7
internal 
bool 
alwaysEnabled #
=$ %
false& +
;+ ,
internal !
PostProcessingProfile &
profile' .
;. /
internal #
PostProcessingInspector (
	inspector) 2
;2 3
internal 
void 
OnPreEnable !
(! "
)" #
{ 	
m_SettingsProperty 
=  
serializedProperty! 3
.3 4 
FindPropertyRelative4 H
(H I
$strI U
)U V
;V W
m_EnabledProperty 
= 
serializedProperty  2
.2 3 
FindPropertyRelative3 G
(G H
$strH S
)S T
;T U
OnEnable 
( 
) 
; 
} 	
public 
virtual 
void 
OnEnable $
($ %
)% &
{ 	
}	 

public 
virtual 
void 
	OnDisable %
(% &
)& '
{   	
}  	 

internal"" 
void"" 
OnGUI"" 
("" 
)"" 
{## 	
	GUILayout$$ 
.$$ 
Space$$ 
($$ 
$num$$ 
)$$ 
;$$ 
var&& 
display&& 
=&& 
alwaysEnabled&& '
?'' 
EditorGUIHelper'' !
.''! "
Header''" (
(''( )
serializedProperty'') ;
.''; <
displayName''< G
,''G H
m_SettingsProperty''I [
,''[ \
Reset''] b
)''b c
:(( 
EditorGUIHelper(( !
.((! "
Header((" (
(((( )
serializedProperty(() ;
.((; <
displayName((< G
,((G H
m_SettingsProperty((I [
,(([ \
m_EnabledProperty((] n
,((n o
Reset((p u
)((u v
;((v w
if** 
(** 
display** 
)** 
{++ 
	EditorGUI,, 
.,, 
indentLevel,, %
++,,% '
;,,' (
using-- 
(-- 
new-- 
	EditorGUI-- $
.--$ %
DisabledGroupScope--% 7
(--7 8
!--8 9
m_EnabledProperty--9 J
.--J K
	boolValue--K T
)--T U
)--U V
{.. 
OnInspectorGUI// "
(//" #
)//# $
;//$ %
}00 
	EditorGUI11 
.11 
indentLevel11 %
--11% '
;11' (
}22 
}33 	
void55 
Reset55 
(55 
)55 
{66 	
var77 
obj77 
=77 
serializedProperty77 (
.77( )
serializedObject77) 9
;779 :
Undo88 
.88 
RecordObject88 
(88 
obj88 !
.88! "
targetObject88" .
,88. /
$str880 7
)887 8
;888 9
target99 
.99 
Reset99 
(99 
)99 
;99 
EditorUtility:: 
.:: 
SetDirty:: "
(::" #
obj::# &
.::& '
targetObject::' 3
)::3 4
;::4 5
};; 	
public== 
virtual== 
void== 
OnInspectorGUI== *
(==* +
)==+ ,
{>> 	
}>>	 

public@@ 
void@@ 
Repaint@@ 
(@@ 
)@@ 
{AA 	
	inspectorBB 
.BB 
RepaintBB 
(BB 
)BB 
;BB  
}CC 	
	protectedEE 
SerializedPropertyEE $
FindSettingEE% 0
<EE0 1
TEE1 2
,EE2 3
TValueEE4 :
>EE: ;
(EE; <

ExpressionEE< F
<EEF G
FuncEEG K
<EEK L
TEEL M
,EEM N
TValueEEO U
>EEU V
>EEV W
exprEEX \
)EE\ ]
{FF 	
returnGG 
m_SettingsPropertyGG %
.GG% & 
FindPropertyRelativeGG& :
(GG: ;
ReflectionUtilsGG; J
.GGJ K
GetFieldPathGGK W
(GGW X
exprGGX \
)GG\ ]
)GG] ^
;GG^ _
}HH 	
	protectedJJ 
SerializedPropertyJJ $
FindSettingJJ% 0
<JJ0 1
TJJ1 2
,JJ2 3
TValueJJ4 :
>JJ: ;
(JJ; <
SerializedPropertyJJ< N
propJJO S
,JJS T

ExpressionJJU _
<JJ_ `
FuncJJ` d
<JJd e
TJJe f
,JJf g
TValueJJh n
>JJn o
>JJo p
exprJJq u
)JJu v
{KK 	
returnLL 
propLL 
.LL  
FindPropertyRelativeLL ,
(LL, -
ReflectionUtilsLL- <
.LL< =
GetFieldPathLL= I
(LLI J
exprLLJ N
)LLN O
)LLO P
;LLP Q
}MM 	
}NN 
}OO Ò
¸D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\PostProcessingMonitor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
public 

abstract 
class !
PostProcessingMonitor /
:0 1
IDisposable2 =
{		 
	protected

 
MonitorSettings

 !
m_MonitorSettings

" 3
;

3 4
	protected #
PostProcessingInspector )
m_BaseEditor* 6
;6 7
public 
void 
Init 
( 
MonitorSettings (
monitorSettings) 8
,8 9#
PostProcessingInspector: Q

baseEditorR \
)\ ]
{ 	
m_MonitorSettings 
= 
monitorSettings  /
;/ 0
m_BaseEditor 
= 

baseEditor %
;% &
} 	
public 
abstract 
bool 
IsSupported (
(( )
)) *
;* +
public 
abstract 

GUIContent "
GetMonitorTitle# 2
(2 3
)3 4
;4 5
public 
virtual 
void 
OnMonitorSettings -
(- .
). /
{ 	
}	 

public 
abstract 
void 
OnMonitorGUI )
() *
Rect* .
r/ 0
)0 1
;1 2
public 
virtual 
void 
OnFrameData '
(' (
RenderTexture( 5
source6 <
)< =
{ 	
}	 

public 
virtual 
void 
Dispose #
(# $
)$ %
{   	
}  	 

}!! 
}"" Þ
¿D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\PropertyDrawers\GetSetDrawer.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[  
CustomPropertyDrawer 
( 
typeof  
(  !
GetSetAttribute! 0
)0 1
)1 2
]2 3
sealed 

class 
GetSetDrawer 
: 
PropertyDrawer  .
{ 
public		 
override		 
void		 
OnGUI		 "
(		" #
Rect		# '
position		( 0
,		0 1
SerializedProperty		2 D
property		E M
,		M N

GUIContent		O Y
label		Z _
)		_ `
{

 	
var 
	attribute 
= 
( 
GetSetAttribute ,
), -
base- 1
.1 2
	attribute2 ;
;; <
	EditorGUI 
. 
BeginChangeCheck &
(& '
)' (
;( )
	EditorGUI 
. 
PropertyField #
(# $
position$ ,
,, -
property. 6
,6 7
label8 =
)= >
;> ?
if 
( 
	EditorGUI 
. 
EndChangeCheck (
(( )
)) *
)* +
{ 
	attribute 
. 
dirty 
=  !
true" &
;& '
} 
else 
if 
( 
	attribute 
. 
dirty $
)$ %
{ 
var 
parent 
= 
ReflectionUtils ,
., -
GetParentObject- <
(< =
property= E
.E F
propertyPathF R
,R S
propertyT \
.\ ]
serializedObject] m
.m n
targetObjectn z
)z {
;{ |
var 
type 
= 
parent !
.! "
GetType" )
() *
)* +
;+ ,
var 
info 
= 
type 
.  
GetProperty  +
(+ ,
	attribute, 5
.5 6
name6 :
): ;
;; <
if 
( 
info 
== 
null  
)  !
Debug 
. 
LogError "
(" #
$str# =
+> ?
	attribute@ I
.I J
nameJ N
+O P
$strQ U
)U V
;V W
else 
info 
. 
SetValue !
(! "
parent" (
,( )
	fieldInfo* 3
.3 4
GetValue4 <
(< =
parent= C
)C D
,D E
nullF J
)J K
;K L
	attribute   
.   
dirty   
=    !
false  " '
;  ' (
}!! 
}"" 	
}## 
}$$ ¡
¼D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\PropertyDrawers\MinDrawer.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[  
CustomPropertyDrawer 
( 
typeof  
(  !
UnityEngine! ,
., -
PostProcessing- ;
.; <
MinAttribute< H
)H I
)I J
]J K
sealed 

class 
	MinDrawer 
: 
PropertyDrawer +
{ 
public		 
override		 
void		 
OnGUI		 "
(		" #
Rect		# '
position		( 0
,		0 1
SerializedProperty		2 D
property		E M
,		M N

GUIContent		O Y
label		Z _
)		_ `
{

 	
UnityEngine 
. 
PostProcessing &
.& '
MinAttribute' 3
	attribute4 =
=> ?
(@ A
UnityEngineA L
.L M
PostProcessingM [
.[ \
MinAttribute\ h
)h i
basei m
.m n
	attributen w
;w x
if 
( 
property 
. 
propertyType %
==& ("
SerializedPropertyType) ?
.? @
Integer@ G
)G H
{ 
int 
v 
= 
	EditorGUI !
.! "
IntField" *
(* +
position+ 3
,3 4
label5 :
,: ;
property< D
.D E
intValueE M
)M N
;N O
property 
. 
intValue !
=" #
($ %
int% (
)( )
Mathf) .
.. /
Max/ 2
(2 3
v3 4
,4 5
	attribute6 ?
.? @
min@ C
)C D
;D E
} 
else 
if 
( 
property 
. 
propertyType *
==+ -"
SerializedPropertyType. D
.D E
FloatE J
)J K
{ 
float 
v 
= 
	EditorGUI #
.# $

FloatField$ .
(. /
position/ 7
,7 8
label9 >
,> ?
property@ H
.H I

floatValueI S
)S T
;T U
property 
. 

floatValue #
=$ %
Mathf& +
.+ ,
Max, /
(/ 0
v0 1
,1 2
	attribute3 <
.< =
min= @
)@ A
;A B
} 
else 
{ 
	EditorGUI 
. 

LabelField $
($ %
position% -
,- .
label/ 4
.4 5
text5 9
,9 :
$str; W
)W X
;X Y
} 
} 	
} 
} ò
ÇD:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\PropertyDrawers\TrackballGroupDrawer.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
[  
CustomPropertyDrawer 
( 
typeof  
(  !#
TrackballGroupAttribute! 8
)8 9
)9 :
]: ;
sealed		 

class		  
TrackballGroupDrawer		 %
:		& '
PropertyDrawer		( 6
{

 
static 
Material 

s_Material "
;" #
const 
int 
k_MinWheelSize  
=! "
$num# %
;% &
const 
int 
k_MaxWheelSize  
=! "
$num# &
;& '
bool 
m_ResetState 
; 
static 

Dictionary 
< 
string  
,  !

MethodInfo" ,
>, -
m_TrackballMethods. @
=A B
newC F

DictionaryG Q
<Q R
stringR X
,X Y

MethodInfoZ d
>d e
(e f
)f g
;g h
internal 
static 
int 
m_Size "
{ 	
get 
{ 
int 
size 
= 
Mathf  
.  !

FloorToInt! +
(+ ,
EditorGUIUtility, <
.< =
currentViewWidth= M
/N O
$numP R
)R S
-T U
$numV X
;X Y
size 
= 
Mathf 
. 
Clamp "
(" #
size# '
,' (
k_MinWheelSize) 7
,7 8
k_MaxWheelSize9 G
)G H
;H I
return 
size 
; 
} 
} 	
public 
override 
void 
OnGUI "
(" #
Rect# '
position( 0
,0 1
SerializedProperty2 D
propertyE M
,M N

GUIContentO Y
labelZ _
)_ `
{   	
if!! 
(!! 

s_Material!! 
==!! 
null!! "
)!!" #

s_Material"" 
="" 
new""  
Material""! )
("") *
Shader""* 0
.""0 1
Find""1 5
(""5 6
$str""6 S
)""S T
)""T U
{""V W
	hideFlags""X a
=""b c
	HideFlags""d m
.""m n
HideAndDontSave""n }
}""~ 
;	"" 
position$$ 
=$$ 
new$$ 
Rect$$ 
($$  
position$$  (
.$$( )
x$$) *
,$$* +
position$$, 4
.$$4 5
y$$5 6
,$$6 7
position$$8 @
.$$@ A
width$$A F
/$$G H
$num$$I K
,$$K L
position$$M U
.$$U V
height$$V \
)$$\ ]
;$$] ^
int%% 
size%% 
=%% 
m_Size%% 
;%% 
position&& 
.&& 
x&& 
+=&& 
$num&& 
;&& 
var(( 

enumerator(( 
=(( 
property(( %
.((% &
GetEnumerator((& 3
(((3 4
)((4 5
;((5 6
while)) 
()) 

enumerator)) 
.)) 
MoveNext)) &
())& '
)))' (
)))( )
{** 
var++ 
prop++ 
=++ 

enumerator++ %
.++% &
Current++& -
as++. 0
SerializedProperty++1 C
;++C D
if,, 
(,, 
prop,, 
==,, 
null,,  
||,,! #
prop,,$ (
.,,( )
propertyType,,) 5
!=,,6 8"
SerializedPropertyType,,9 O
.,,O P
Color,,P U
),,U V
continue-- 
;-- 

OnWheelGUI// 
(// 
position// #
,//# $
size//% )
,//) *
prop//+ /
./// 0
Copy//0 4
(//4 5
)//5 6
)//6 7
;//7 8
position00 
.00 
x00 
+=00 
position00 &
.00& '
width00' ,
;00, -
}11 
}22 	
void44 

OnWheelGUI44 
(44 
Rect44 
position44 %
,44% &
int44' *
size44+ /
,44/ 0
SerializedProperty441 C
property44D L
)44L M
{55 	
if66 
(66 
Event66 
.66 
current66 
.66 
type66 "
==66# %
	EventType66& /
.66/ 0
Layout660 6
)666 7
return77 
;77 
var99 
value99 
=99 
property99  
.99  !

colorValue99! +
;99+ ,
float:: 
offset:: 
=:: 
value::  
.::  !
a::! "
;::" #
var<< 
wheelDrawArea<< 
=<< 
position<<  (
;<<( )
wheelDrawArea== 
.== 
height==  
===! "
size==# '
;==' (
if?? 
(?? 
wheelDrawArea?? 
.?? 
width?? #
>??$ %
wheelDrawArea??& 3
.??3 4
height??4 :
)??: ;
{@@ 
wheelDrawAreaAA 
.AA 
xAA 
+=AA  "
(AA# $
wheelDrawAreaAA$ 1
.AA1 2
widthAA2 7
-AA8 9
wheelDrawAreaAA: G
.AAG H
heightAAH N
)AAN O
/AAP Q
$numAAR V
;AAV W
wheelDrawAreaBB 
.BB 
widthBB #
=BB$ %
positionBB& .
.BB. /
heightBB/ 5
;BB5 6
}CC 
wheelDrawAreaEE 
.EE 
widthEE 
=EE  !
wheelDrawAreaEE" /
.EE/ 0
heightEE0 6
;EE6 7
floatGG 
hsizeGG 
=GG 
sizeGG 
/GG  
$numGG! #
;GG# $
floatHH 
radiusHH 
=HH 
$numHH  
*HH! "
sizeHH# '
;HH' (
Vector3II 
hsvII 
;II 
ColorJJ 
.JJ 
RGBToHSVJJ 
(JJ 
valueJJ  
,JJ  !
outJJ" %
hsvJJ& )
.JJ) *
xJJ* +
,JJ+ ,
outJJ- 0
hsvJJ1 4
.JJ4 5
yJJ5 6
,JJ6 7
outJJ8 ;
hsvJJ< ?
.JJ? @
zJJ@ A
)JJA B
;JJB C
ifLL 
(LL 
EventLL 
.LL 
currentLL 
.LL 
typeLL "
==LL# %
	EventTypeLL& /
.LL/ 0
RepaintLL0 7
)LL7 8
{MM 
floatNN 
scaleNN 
=NN 
EditorGUIUtilityNN .
.NN. /
pixelsPerPointNN/ =
;NN= >
varQQ 
oldRTQQ 
=QQ 
RenderTextureQQ )
.QQ) *
activeQQ* 0
;QQ0 1
varRR 
rtRR 
=RR 
RenderTextureRR &
.RR& '
GetTemporaryRR' 3
(RR3 4
(RR4 5
intRR5 8
)RR8 9
(RR9 :
sizeRR: >
*RR? @
scaleRRA F
)RRF G
,RRG H
(RRI J
intRRJ M
)RRM N
(RRN O
sizeRRO S
*RRT U
scaleRRV [
)RR[ \
,RR\ ]
$numRR^ _
,RR_ `
RenderTextureFormatRRa t
.RRt u
ARGB32RRu {
,RR{ |#
RenderTextureReadWrite	RR} 
.
RR 
Linear
RR 
)
RR 
;
RR 

s_MaterialSS 
.SS 
SetFloatSS #
(SS# $
$strSS$ -
,SS- .
offsetSS/ 5
)SS5 6
;SS6 7

s_MaterialTT 
.TT 
SetFloatTT #
(TT# $
$strTT$ 4
,TT4 5
GUITT6 9
.TT9 :
enabledTT: A
?TTB C
$numTTD F
:TTG H
$numTTI M
)TTM N
;TTN O

s_MaterialUU 
.UU 
	SetVectorUU $
(UU$ %
$strUU% 2
,UU2 3
newUU4 7
Vector2UU8 ?
(UU? @
sizeUU@ D
*UUE F
scaleUUG L
,UUL M
sizeUUN R
*UUS T
scaleUUU Z
/UU[ \
$numUU] _
)UU_ `
)UU` a
;UUa b
GraphicsVV 
.VV 
BlitVV 
(VV 
nullVV "
,VV" #
rtVV$ &
,VV& '

s_MaterialVV( 2
,VV2 3
EditorGUIUtilityVV4 D
.VVD E
	isProSkinVVE N
?VVO P
$numVVQ R
:VVS T
$numVVU V
)VVV W
;VVW X
RenderTextureWW 
.WW 
activeWW $
=WW% &
oldRTWW' ,
;WW, -
GUIYY 
.YY 
DrawTextureYY 
(YY  
wheelDrawAreaYY  -
,YY- .
rtYY/ 1
)YY1 2
;YY2 3
RenderTextureZZ 
.ZZ 
ReleaseTemporaryZZ .
(ZZ. /
rtZZ/ 1
)ZZ1 2
;ZZ2 3
var]] 
thumbPos]] 
=]] 
Vector2]] &
.]]& '
zero]]' +
;]]+ ,
float^^ 
theta^^ 
=^^ 
hsv^^ !
.^^! "
x^^" #
*^^$ %
(^^& '
Mathf^^' ,
.^^, -
PI^^- /
*^^0 1
$num^^2 4
)^^4 5
;^^5 6
float__ 
len__ 
=__ 
hsv__ 
.__  
y__  !
*__" #
radius__$ *
;__* +
thumbPos`` 
.`` 
x`` 
=`` 
Mathf`` "
.``" #
Cos``# &
(``& '
theta``' ,
+``- .
(``/ 0
Mathf``0 5
.``5 6
PI``6 8
/``9 :
$num``; =
)``= >
)``> ?
;``? @
thumbPosaa 
.aa 
yaa 
=aa 
Mathfaa "
.aa" #
Sinaa# &
(aa& '
thetaaa' ,
-aa- .
(aa/ 0
Mathfaa0 5
.aa5 6
PIaa6 8
/aa9 :
$numaa; =
)aa= >
)aa> ?
;aa? @
thumbPosbb 
*=bb 
lenbb 
;bb  
varcc 
	thumbSizecc 
=cc 
FxStylescc  (
.cc( )
wheelThumbSizecc) 7
;cc7 8
vardd 

thumbSizeHdd 
=dd  
	thumbSizedd! *
/dd+ ,
$numdd- /
;dd/ 0
FxStylesee 
.ee 

wheelThumbee #
.ee# $
Drawee$ (
(ee( )
newee) ,
Rectee- 1
(ee1 2
wheelDrawAreaee2 ?
.ee? @
xee@ A
+eeB C
hsizeeeD I
+eeJ K
thumbPoseeL T
.eeT U
xeeU V
-eeW X

thumbSizeHeeY c
.eec d
xeed e
,eee f
wheelDrawAreaeeg t
.eet u
yeeu v
+eew x
hsizeeey ~
+	ee 
thumbPos
ee 
.
ee 
y
ee 
-
ee 

thumbSizeH
ee 
.
ee 
y
ee 
,
ee 
	thumbSize
ee ¥
.
ee¥ ¦
x
ee¦ §
,
ee§ ¨
	thumbSize
ee© ²
.
ee² ³
y
ee³ ´
)
ee´ µ
,
eeµ ¶
false
ee· ¼
,
ee¼ ½
false
ee¾ Ã
,
eeÃ Ä
false
eeÅ Ê
,
eeÊ Ë
false
eeÌ Ñ
)
eeÑ Ò
;
eeÒ Ó
}ff 
varhh 
boundshh 
=hh 
wheelDrawAreahh &
;hh& '
boundsii 
.ii 
xii 
+=ii 
hsizeii 
-ii 
radiusii  &
;ii& '
boundsjj 
.jj 
yjj 
+=jj 
hsizejj 
-jj 
radiusjj  &
;jj& '
boundskk 
.kk 
widthkk 
=kk 
boundskk !
.kk! "
heightkk" (
=kk) *
radiuskk+ 1
*kk2 3
$numkk4 6
;kk6 7
hsvll 
=ll 
GetInputll 
(ll 
boundsll !
,ll! "
hsvll# &
,ll& '
radiusll( .
)ll. /
;ll/ 0
valuemm 
=mm 
Colormm 
.mm 
HSVToRGBmm "
(mm" #
hsvmm# &
.mm& '
xmm' (
,mm( )
hsvmm* -
.mm- .
ymm. /
,mm/ 0
$nummm1 3
)mm3 4
;mm4 5
valuenn 
.nn 
ann 
=nn 
offsetnn 
;nn 
positionqq 
=qq 
wheelDrawAreaqq $
;qq$ %
floatrr 
oldXrr 
=rr 
positionrr !
.rr! "
xrr" #
;rr# $
floatss 
oldWss 
=ss 
positionss !
.ss! "
widthss" '
;ss' (
positiontt 
.tt 
ytt 
+=tt 
positiontt "
.tt" #
heighttt# )
+tt* +
$numtt, .
;tt. /
positionuu 
.uu 
xuu 
+=uu 
(uu 
positionuu #
.uu# $
widthuu$ )
-uu* +
(uu, -
positionuu- 5
.uu5 6
widthuu6 ;
*uu< =
$numuu> C
)uuC D
)uuD E
/uuF G
$numuuH J
;uuJ K
positionvv 
.vv 
widthvv 
=vv 
positionvv %
.vv% &
widthvv& +
*vv, -
$numvv. 3
;vv3 4
positionww 
.ww 
heightww 
=ww 
EditorGUIUtilityww .
.ww. /
singleLineHeightww/ ?
;ww? @
valuexx 
.xx 
axx 
=xx 
GUIxx 
.xx 
HorizontalSliderxx *
(xx* +
positionxx+ 3
,xx3 4
valuexx5 :
.xx: ;
axx; <
,xx< =
-xx> ?
$numxx? A
,xxA B
$numxxC E
)xxE F
;xxF G
var{{ 
data{{ 
={{ 
Vector3{{ 
.{{ 
zero{{ #
;{{# $
if}} 
(}} 
TryGetDisplayValue}} "
(}}" #
value}}# (
,}}( )
property}}* 2
,}}2 3
out}}4 7
data}}8 <
)}}< =
)}}= >
{~~ 
position 
. 
x 
= 
oldX !
;! "
position
 
.
 
y
 
+=
 
position
 &
.
& '
height
' -
;
- .
position
 
.
 
width
 
=
  
oldW
! %
/
& '
$num
( *
;
* +
using
 
(
 
new
 
	EditorGUI
 $
.
$ % 
DisabledGroupScope
% 7
(
7 8
true
8 <
)
< =
)
= >
{
 
GUI
 
.
 
Label
 
(
 
position
 &
,
& '
data
( ,
.
, -
x
- .
.
. /
ToString
/ 7
(
7 8
$str
8 <
)
< =
,
= >
EditorStyles
? K
.
K L#
centeredGreyMiniLabel
L a
)
a b
;
b c
position
 
.
 
x
 
+=
 !
position
" *
.
* +
width
+ 0
;
0 1
GUI
 
.
 
Label
 
(
 
position
 &
,
& '
data
( ,
.
, -
y
- .
.
. /
ToString
/ 7
(
7 8
$str
8 <
)
< =
,
= >
EditorStyles
? K
.
K L#
centeredGreyMiniLabel
L a
)
a b
;
b c
position
 
.
 
x
 
+=
 !
position
" *
.
* +
width
+ 0
;
0 1
GUI
 
.
 
Label
 
(
 
position
 &
,
& '
data
( ,
.
, -
z
- .
.
. /
ToString
/ 7
(
7 8
$str
8 <
)
< =
,
= >
EditorStyles
? K
.
K L#
centeredGreyMiniLabel
L a
)
a b
;
b c
position
 
.
 
x
 
+=
 !
position
" *
.
* +
width
+ 0
;
0 1
}
 
}
 
position
 
.
 
x
 
=
 
oldX
 
;
 
position
 
.
 
y
 
+=
 
position
 "
.
" #
height
# )
;
) *
position
 
.
 
width
 
=
 
oldW
 !
;
! "
GUI
 
.
 
Label
 
(
 
position
 
,
 
property
  (
.
( )
displayName
) 4
,
4 5
EditorStyles
6 B
.
B C#
centeredGreyMiniLabel
C X
)
X Y
;
Y Z
if
 
(
 
m_ResetState
 
)
 
{
 
value
 
=
 
Color
 
.
 
clear
 #
;
# $
m_ResetState
 
=
 
false
 $
;
$ %
}
 
property
 
.
 

colorValue
 
=
  !
value
" '
;
' (
}
 	
bool
  
TryGetDisplayValue
 
(
  
Color
  %
color
& +
,
+ , 
SerializedProperty
- ?
property
@ H
,
H I
out
J M
Vector3
N U
output
V \
)
\ ]
{
 	
output
 
=
 
Vector3
 
.
 
zero
 !
;
! "

MethodInfo
   
method
   
;
   
if
¢¢ 
(
¢¢ 
!
¢¢  
m_TrackballMethods
¢¢ #
.
¢¢# $
TryGetValue
¢¢$ /
(
¢¢/ 0
property
¢¢0 8
.
¢¢8 9
name
¢¢9 =
,
¢¢= >
out
¢¢? B
method
¢¢C I
)
¢¢I J
)
¢¢J K
{
££ 
var
¤¤ 
field
¤¤ 
=
¤¤ 
ReflectionUtils
¤¤ +
.
¤¤+ ,"
GetFieldInfoFromPath
¤¤, @
(
¤¤@ A
property
¤¤A I
.
¤¤I J
serializedObject
¤¤J Z
.
¤¤Z [
targetObject
¤¤[ g
,
¤¤g h
property
¤¤i q
.
¤¤q r
propertyPath
¤¤r ~
)
¤¤~ 
;¤¤ 
if
¦¦ 
(
¦¦ 
!
¦¦ 
field
¦¦ 
.
¦¦ 
	IsDefined
¦¦ $
(
¦¦$ %
typeof
¦¦% +
(
¦¦+ , 
TrackballAttribute
¦¦, >
)
¦¦> ?
,
¦¦? @
false
¦¦A F
)
¦¦F G
)
¦¦G H
return
§§ 
false
§§  
;
§§  !
var
©© 
attr
©© 
=
©© 
(
©©  
TrackballAttribute
©© .
)
©©. /
field
©©/ 4
.
©©4 5!
GetCustomAttributes
©©5 H
(
©©H I
typeof
©©I O
(
©©O P 
TrackballAttribute
©©P b
)
©©b c
,
©©c d
false
©©e j
)
©©j k
[
©©k l
$num
©©l m
]
©©m n
;
©©n o
const
ªª 
BindingFlags
ªª "
flags
ªª# (
=
ªª) *
BindingFlags
ªª+ 7
.
ªª7 8
Public
ªª8 >
|
ªª? @
BindingFlags
ªªA M
.
ªªM N
	NonPublic
ªªN W
|
ªªX Y
BindingFlags
ªªZ f
.
ªªf g
Instance
ªªg o
|
ªªp q
BindingFlags
ªªr ~
.
ªª~ 
Staticªª 
;ªª 
method
«« 
=
«« 
typeof
«« 
(
««  #
ColorGradingComponent
««  5
)
««5 6
.
««6 7
	GetMethod
««7 @
(
««@ A
attr
««A E
.
««E F
method
««F L
,
««L M
flags
««N S
)
««S T
;
««T U 
m_TrackballMethods
¬¬ "
.
¬¬" #
Add
¬¬# &
(
¬¬& '
property
¬¬' /
.
¬¬/ 0
name
¬¬0 4
,
¬¬4 5
method
¬¬6 <
)
¬¬< =
;
¬¬= >
}
­­ 
if
¯¯ 
(
¯¯ 
method
¯¯ 
==
¯¯ 
null
¯¯ 
)
¯¯ 
return
°° 
false
°° 
;
°° 
output
²² 
=
²² 
(
²² 
Vector3
²² 
)
²² 
method
²² $
.
²²$ %
Invoke
²²% +
(
²²+ ,
property
²², 4
.
²²4 5
serializedObject
²²5 E
.
²²E F
targetObject
²²F R
,
²²R S
new
²²T W
object
²²X ^
[
²²^ _
]
²²_ `
{
²²a b
color
²²c h
}
²²i j
)
²²j k
;
²²k l
return
³³ 
true
³³ 
;
³³ 
}
´´ 	
static
¶¶ 
readonly
¶¶ 
int
¶¶ 
k_ThumbHash
¶¶ '
=
¶¶( )
$str
¶¶* ;
.
¶¶; <
GetHashCode
¶¶< G
(
¶¶G H
)
¶¶H I
;
¶¶I J
Vector3
¸¸ 
GetInput
¸¸ 
(
¸¸ 
Rect
¸¸ 
bounds
¸¸ $
,
¸¸$ %
Vector3
¸¸& -
hsv
¸¸. 1
,
¸¸1 2
float
¸¸3 8
radius
¸¸9 ?
)
¸¸? @
{
¹¹ 	
var
ºº 
e
ºº 
=
ºº 
Event
ºº 
.
ºº 
current
ºº !
;
ºº! "
var
»» 
id
»» 
=
»» 

GUIUtility
»» 
.
»»  
GetControlID
»»  ,
(
»», -
k_ThumbHash
»»- 8
,
»»8 9
	FocusType
»»: C
.
»»C D
Passive
»»D K
,
»»K L
bounds
»»M S
)
»»S T
;
»»T U
var
½½ 
mousePos
½½ 
=
½½ 
e
½½ 
.
½½ 
mousePosition
½½ *
;
½½* +
var
¾¾ 
relativePos
¾¾ 
=
¾¾ 
mousePos
¾¾ &
-
¾¾' (
new
¾¾) ,
Vector2
¾¾- 4
(
¾¾4 5
bounds
¾¾5 ;
.
¾¾; <
x
¾¾< =
,
¾¾= >
bounds
¾¾? E
.
¾¾E F
y
¾¾F G
)
¾¾G H
;
¾¾H I
if
ÀÀ 
(
ÀÀ 
e
ÀÀ 
.
ÀÀ 
type
ÀÀ 
==
ÀÀ 
	EventType
ÀÀ #
.
ÀÀ# $
	MouseDown
ÀÀ$ -
&&
ÀÀ. 0

GUIUtility
ÀÀ1 ;
.
ÀÀ; <

hotControl
ÀÀ< F
==
ÀÀG I
$num
ÀÀJ K
&&
ÀÀL N
bounds
ÀÀO U
.
ÀÀU V
Contains
ÀÀV ^
(
ÀÀ^ _
mousePos
ÀÀ_ g
)
ÀÀg h
)
ÀÀh i
{
ÁÁ 
if
ÂÂ 
(
ÂÂ 
e
ÂÂ 
.
ÂÂ 
button
ÂÂ 
==
ÂÂ 
$num
ÂÂ  !
)
ÂÂ! "
{
ÃÃ 
var
ÄÄ 
center
ÄÄ 
=
ÄÄ  
new
ÄÄ! $
Vector2
ÄÄ% ,
(
ÄÄ, -
bounds
ÄÄ- 3
.
ÄÄ3 4
x
ÄÄ4 5
+
ÄÄ6 7
radius
ÄÄ8 >
,
ÄÄ> ?
bounds
ÄÄ@ F
.
ÄÄF G
y
ÄÄG H
+
ÄÄI J
radius
ÄÄK Q
)
ÄÄQ R
;
ÄÄR S
float
ÅÅ 
dist
ÅÅ 
=
ÅÅ  
Vector2
ÅÅ! (
.
ÅÅ( )
Distance
ÅÅ) 1
(
ÅÅ1 2
center
ÅÅ2 8
,
ÅÅ8 9
mousePos
ÅÅ: B
)
ÅÅB C
;
ÅÅC D
if
ÇÇ 
(
ÇÇ 
dist
ÇÇ 
<=
ÇÇ 
radius
ÇÇ  &
)
ÇÇ& '
{
ÈÈ 
e
ÉÉ 
.
ÉÉ 
Use
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ  #
GetWheelHueSaturation
ÊÊ -
(
ÊÊ- .
relativePos
ÊÊ. 9
.
ÊÊ9 :
x
ÊÊ: ;
,
ÊÊ; <
relativePos
ÊÊ= H
.
ÊÊH I
y
ÊÊI J
,
ÊÊJ K
radius
ÊÊL R
,
ÊÊR S
out
ÊÊT W
hsv
ÊÊX [
.
ÊÊ[ \
x
ÊÊ\ ]
,
ÊÊ] ^
out
ÊÊ_ b
hsv
ÊÊc f
.
ÊÊf g
y
ÊÊg h
)
ÊÊh i
;
ÊÊi j

GUIUtility
ËË "
.
ËË" #

hotControl
ËË# -
=
ËË. /
id
ËË0 2
;
ËË2 3
GUI
ÌÌ 
.
ÌÌ 
changed
ÌÌ #
=
ÌÌ$ %
true
ÌÌ& *
;
ÌÌ* +
}
ÍÍ 
}
ÎÎ 
else
ÏÏ 
if
ÏÏ 
(
ÏÏ 
e
ÏÏ 
.
ÏÏ 
button
ÏÏ !
==
ÏÏ" $
$num
ÏÏ% &
)
ÏÏ& '
{
ÐÐ 
e
ÑÑ 
.
ÑÑ 
Use
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
GUI
ÒÒ 
.
ÒÒ 
changed
ÒÒ 
=
ÒÒ  !
true
ÒÒ" &
;
ÒÒ& '
m_ResetState
ÓÓ  
=
ÓÓ! "
true
ÓÓ# '
;
ÓÓ' (
}
ÔÔ 
}
ÕÕ 
else
ÖÖ 
if
ÖÖ 
(
ÖÖ 
e
ÖÖ 
.
ÖÖ 
type
ÖÖ 
==
ÖÖ 
	EventType
ÖÖ (
.
ÖÖ( )
	MouseDrag
ÖÖ) 2
&&
ÖÖ3 5
e
ÖÖ6 7
.
ÖÖ7 8
button
ÖÖ8 >
==
ÖÖ? A
$num
ÖÖB C
&&
ÖÖD F

GUIUtility
ÖÖG Q
.
ÖÖQ R

hotControl
ÖÖR \
==
ÖÖ] _
id
ÖÖ` b
)
ÖÖb c
{
×× 
e
ØØ 
.
ØØ 
Use
ØØ 
(
ØØ 
)
ØØ 
;
ØØ 
GUI
ÙÙ 
.
ÙÙ 
changed
ÙÙ 
=
ÙÙ 
true
ÙÙ "
;
ÙÙ" ##
GetWheelHueSaturation
ÚÚ %
(
ÚÚ% &
relativePos
ÚÚ& 1
.
ÚÚ1 2
x
ÚÚ2 3
,
ÚÚ3 4
relativePos
ÚÚ5 @
.
ÚÚ@ A
y
ÚÚA B
,
ÚÚB C
radius
ÚÚD J
,
ÚÚJ K
out
ÚÚL O
hsv
ÚÚP S
.
ÚÚS T
x
ÚÚT U
,
ÚÚU V
out
ÚÚW Z
hsv
ÚÚ[ ^
.
ÚÚ^ _
y
ÚÚ_ `
)
ÚÚ` a
;
ÚÚa b
}
ÛÛ 
else
ÜÜ 
if
ÜÜ 
(
ÜÜ 
e
ÜÜ 
.
ÜÜ 
rawType
ÜÜ 
==
ÜÜ !
	EventType
ÜÜ" +
.
ÜÜ+ ,
MouseUp
ÜÜ, 3
&&
ÜÜ4 6
e
ÜÜ7 8
.
ÜÜ8 9
button
ÜÜ9 ?
==
ÜÜ@ B
$num
ÜÜC D
&&
ÜÜE G

GUIUtility
ÜÜH R
.
ÜÜR S

hotControl
ÜÜS ]
==
ÜÜ^ `
id
ÜÜa c
)
ÜÜc d
{
ÝÝ 
e
ÞÞ 
.
ÞÞ 
Use
ÞÞ 
(
ÞÞ 
)
ÞÞ 
;
ÞÞ 

GUIUtility
ßß 
.
ßß 

hotControl
ßß %
=
ßß& '
$num
ßß( )
;
ßß) *
}
àà 
return
ââ 
hsv
ââ 
;
ââ 
}
ãã 	
void
åå #
GetWheelHueSaturation
åå "
(
åå" #
float
åå# (
x
åå) *
,
åå* +
float
åå, 1
y
åå2 3
,
åå3 4
float
åå5 :
radius
åå; A
,
ååA B
out
ååC F
float
ååG L
hue
ååM P
,
ååP Q
out
ååR U
float
ååV [

saturation
åå\ f
)
ååf g
{
ææ 	
float
çç 
dx
çç 
=
çç 
(
çç 
x
çç 
-
çç 
radius
çç "
)
çç" #
/
çç$ %
radius
çç& ,
;
çç, -
float
èè 
dy
èè 
=
èè 
(
èè 
y
èè 
-
èè 
radius
èè "
)
èè" #
/
èè$ %
radius
èè& ,
;
èè, -
float
éé 
d
éé 
=
éé 
Mathf
éé 
.
éé 
Sqrt
éé  
(
éé  !
dx
éé! #
*
éé$ %
dx
éé& (
+
éé) *
dy
éé+ -
*
éé. /
dy
éé0 2
)
éé2 3
;
éé3 4
hue
êê 
=
êê 
Mathf
êê 
.
êê 
Atan2
êê 
(
êê 
dx
êê  
,
êê  !
-
êê" #
dy
êê# %
)
êê% &
;
êê& '
hue
ëë 
=
ëë 
$num
ëë 
-
ëë 
(
ëë 
(
ëë 
hue
ëë 
>
ëë 
$num
ëë  
)
ëë  !
?
ëë" #
hue
ëë$ '
:
ëë( )
(
ëë* +
Mathf
ëë+ 0
.
ëë0 1
PI
ëë1 3
*
ëë4 5
$num
ëë6 8
)
ëë8 9
+
ëë: ;
hue
ëë< ?
)
ëë? @
/
ëëA B
(
ëëC D
Mathf
ëëD I
.
ëëI J
PI
ëëJ L
*
ëëM N
$num
ëëO Q
)
ëëQ R
;
ëëR S

saturation
ìì 
=
ìì 
Mathf
ìì 
.
ìì 
Clamp01
ìì &
(
ìì& '
d
ìì' (
)
ìì( )
;
ìì) *
}
íí 	
public
ïï 
override
ïï 
float
ïï 
GetPropertyHeight
ïï /
(
ïï/ 0 
SerializedProperty
ïï0 B
property
ïïC K
,
ïïK L

GUIContent
ïïM W
label
ïïX ]
)
ïï] ^
{
ðð 	
return
ññ 
m_Size
ññ 
+
ññ 
$num
ññ 
*
ññ  
$num
ññ! #
+
ññ$ %
EditorGUIUtility
ññ& 6
.
ññ6 7
singleLineHeight
ññ7 G
*
ññH I
$num
ññJ L
;
ññL M
}
òò 	
}
óó 
}ôô Ô¼
´D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Utils\CurveEditor.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
public 

sealed 
class 
CurveEditor #
{ 
enum 
EditMode 
{ 	
None 
, 
Moving 
, 
TangentEdit 
} 	
enum 
Tangent 
{ 	
In 
, 
Out 
} 	
public 
struct 
Settings 
{ 	
public 
Rect 
bounds 
; 
public 

RectOffset 
padding %
;% &
public 
Color 
selectionColor '
;' (
public 
float  
curvePickingDistance -
;- .
public   
float   #
keyTimeClampingDistance   0
;  0 1
public"" 
static"" 
Settings"" "
defaultSettings""# 2
{## 
get$$ 
{%% 
return&& 
new&& 
Settings&& '
{'' 
bounds(( 
=((  
new((! $
Rect((% )
((() *
$num((* ,
,((, -
$num((. 0
,((0 1
$num((2 4
,((4 5
$num((6 8
)((8 9
,((9 :
padding)) 
=))  !
new))" %

RectOffset))& 0
())0 1
$num))1 3
,))3 4
$num))5 7
,))7 8
$num))9 ;
,)); <
$num))= ?
)))? @
,))@ A
selectionColor** &
=**' (
Color**) .
.**. /
yellow**/ 5
,**5 6 
curvePickingDistance++ ,
=++- .
$num++/ 1
,++1 2#
keyTimeClampingDistance,, /
=,,0 1
$num,,2 7
}-- 
;-- 
}.. 
}// 
}00 	
public22 
struct22 

CurveState22  
{33 	
public44 
bool44 
visible44 
;44  
public55 
bool55 
editable55  
;55  !
public66 
uint66 
minPointCount66 %
;66% &
public77 
float77  
zeroKeyConstantValue77 -
;77- .
public88 
Color88 
color88 
;88 
public99 
float99 
width99 
;99 
public:: 
float:: 
handleWidth:: $
;::$ %
public;; 
bool;; "
showNonEditableHandles;; .
;;;. /
public<< 
bool<< &
onlyShowHandlesOnSelection<< 2
;<<2 3
public== 
bool== 
loopInBounds== $
;==$ %
public?? 
static?? 

CurveState?? $
defaultState??% 1
{@@ 
getAA 
{BB 
returnCC 
newCC 

CurveStateCC )
{DD 
visibleEE 
=EE  !
trueEE" &
,EE& '
editableFF  
=FF! "
trueFF# '
,FF' (
minPointCountGG %
=GG& '
$numGG( )
,GG) * 
zeroKeyConstantValueHH ,
=HH- .
$numHH/ 1
,HH1 2
colorII 
=II 
ColorII  %
.II% &
whiteII& +
,II+ ,
widthJJ 
=JJ 
$numJJ  "
,JJ" #
handleWidthKK #
=KK$ %
$numKK& (
,KK( )"
showNonEditableHandlesLL .
=LL/ 0
trueLL1 5
,LL5 6&
onlyShowHandlesOnSelectionMM 2
=MM3 4
falseMM5 :
,MM: ;
loopInBoundsNN $
=NN% &
falseNN' ,
}OO 
;OO 
}PP 
}QQ 
}RR 	
publicTT 
structTT 
	SelectionTT 
{UU 	
publicVV 
SerializedPropertyVV %
curveVV& +
;VV+ ,
publicWW 
intWW 
keyframeIndexWW $
;WW$ %
publicXX 
KeyframeXX 
?XX 
keyframeXX %
;XX% &
publicZZ 
	SelectionZZ 
(ZZ 
SerializedPropertyZZ /
curveZZ0 5
,ZZ5 6
intZZ7 :
keyframeIndexZZ; H
,ZZH I
KeyframeZZJ R
?ZZR S
keyframeZZT \
)ZZ\ ]
{[[ 
this\\ 
.\\ 
curve\\ 
=\\ 
curve\\ "
;\\" #
this]] 
.]] 
keyframeIndex]] "
=]]# $
keyframeIndex]]% 2
;]]2 3
this^^ 
.^^ 
keyframe^^ 
=^^ 
keyframe^^  (
;^^( )
}__ 
}`` 	
internalbb 
structbb 

MenuActionbb "
{cc 	
internaldd 
SerializedPropertydd '
curvedd( -
;dd- .
internalee 
intee 
indexee 
;ee 
internalff 
Vector3ff 
positionff %
;ff% &
internalhh 

MenuActionhh 
(hh  
SerializedPropertyhh  2
curvehh3 8
)hh8 9
{ii 
thisjj 
.jj 
curvejj 
=jj 
curvejj "
;jj" #
thiskk 
.kk 
indexkk 
=kk 
-kk 
$numkk 
;kk  
thisll 
.ll 
positionll 
=ll 
Vector3ll  '
.ll' (
zeroll( ,
;ll, -
}mm 
internaloo 

MenuActionoo 
(oo  
SerializedPropertyoo  2
curveoo3 8
,oo8 9
intoo: =
indexoo> C
)ooC D
{pp 
thisqq 
.qq 
curveqq 
=qq 
curveqq "
;qq" #
thisrr 
.rr 
indexrr 
=rr 
indexrr "
;rr" #
thisss 
.ss 
positionss 
=ss 
Vector3ss  '
.ss' (
zeross( ,
;ss, -
}tt 
internalvv 

MenuActionvv 
(vv  
SerializedPropertyvv  2
curvevv3 8
,vv8 9
Vector3vv: A
positionvvB J
)vvJ K
{ww 
thisxx 
.xx 
curvexx 
=xx 
curvexx "
;xx" #
thisyy 
.yy 
indexyy 
=yy 
-yy 
$numyy 
;yy  
thiszz 
.zz 
positionzz 
=zz 
positionzz  (
;zz( )
}{{ 
}|| 	
public
 
Settings
 
settings
  
{
! "
get
# &
;
& '
private
( /
set
0 3
;
3 4
}
5 6

Dictionary
 
<
  
SerializedProperty
 %
,
% &

CurveState
' 1
>
1 2
m_Curves
3 ;
;
; <
Rect
 
m_CurveArea
 
;
  
SerializedProperty
 
m_SelectedCurve
 *
;
* +
int
 %
m_SelectedKeyframeIndex
 #
=
$ %
-
& '
$num
' (
;
( )
EditMode
 

m_EditMode
 
=
 
EditMode
 &
.
& '
None
' +
;
+ ,
Tangent
 
m_TangentEditMode
 !
;
! "
bool
 
m_Dirty
 
;
 
public
 
CurveEditor
 
(
 
)
 
:
 
this
 
(
 
Settings
 
.
 
defaultSettings
 +
)
+ ,
{
 	
}
	 

public
 
CurveEditor
 
(
 
Settings
 #
settings
$ ,
)
, -
{
 	
this
 
.
 
settings
 
=
 
settings
 $
;
$ %
m_Curves
 
=
 
new
 

Dictionary
 %
<
% & 
SerializedProperty
& 8
,
8 9

CurveState
: D
>
D E
(
E F
)
F G
;
G H
}
 	
public
 
void
 
Add
 
(
 
params
  
SerializedProperty
 1
[
1 2
]
2 3
curves
4 :
)
: ;
{
 	
foreach
 
(
 
var
 
curve
 
in
 !
curves
" (
)
( )
Add
 
(
 
curve
 
,
 

CurveState
 %
.
% &
defaultState
& 2
)
2 3
;
3 4
}
   	
public
¢¢ 
void
¢¢ 
Add
¢¢ 
(
¢¢  
SerializedProperty
¢¢ *
curve
¢¢+ 0
)
¢¢0 1
{
££ 	
Add
¤¤ 
(
¤¤ 
curve
¤¤ 
,
¤¤ 

CurveState
¤¤ !
.
¤¤! "
defaultState
¤¤" .
)
¤¤. /
;
¤¤/ 0
}
¥¥ 	
public
§§ 
void
§§ 
Add
§§ 
(
§§  
SerializedProperty
§§ *
curve
§§+ 0
,
§§0 1

CurveState
§§2 <
state
§§= B
)
§§B C
{
¨¨ 	
var
ªª 
	animCurve
ªª 
=
ªª 
curve
ªª !
.
ªª! "!
animationCurveValue
ªª" 5
;
ªª5 6
if
«« 
(
«« 
	animCurve
«« 
==
«« 
null
«« !
)
««! "
throw
¬¬ 
new
¬¬ 
ArgumentException
¬¬ +
(
¬¬+ ,
$str
¬¬, 3
)
¬¬3 4
;
¬¬4 5
if
®® 
(
®® 
m_Curves
®® 
.
®® 
ContainsKey
®® $
(
®®$ %
curve
®®% *
)
®®* +
)
®®+ ,
Debug
¯¯ 
.
¯¯ 

LogWarning
¯¯  
(
¯¯  !
$str
¯¯! M
)
¯¯M N
;
¯¯N O
m_Curves
±± 
.
±± 
Add
±± 
(
±± 
curve
±± 
,
±± 
state
±±  %
)
±±% &
;
±±& '
}
²² 	
public
´´ 
void
´´ 
Remove
´´ 
(
´´  
SerializedProperty
´´ -
curve
´´. 3
)
´´3 4
{
µµ 	
m_Curves
¶¶ 
.
¶¶ 
Remove
¶¶ 
(
¶¶ 
curve
¶¶ !
)
¶¶! "
;
¶¶" #
}
·· 	
public
¹¹ 
void
¹¹ 
	RemoveAll
¹¹ 
(
¹¹ 
)
¹¹ 
{
ºº 	
m_Curves
»» 
.
»» 
Clear
»» 
(
»» 
)
»» 
;
»» 
}
¼¼ 	
public
¾¾ 

CurveState
¾¾ 
GetCurveState
¾¾ '
(
¾¾' ( 
SerializedProperty
¾¾( :
curve
¾¾; @
)
¾¾@ A
{
¿¿ 	

CurveState
ÀÀ 
state
ÀÀ 
;
ÀÀ 
if
ÁÁ 
(
ÁÁ 
!
ÁÁ 
m_Curves
ÁÁ 
.
ÁÁ 
TryGetValue
ÁÁ %
(
ÁÁ% &
curve
ÁÁ& +
,
ÁÁ+ ,
out
ÁÁ- 0
state
ÁÁ1 6
)
ÁÁ6 7
)
ÁÁ7 8
throw
ÂÂ 
new
ÂÂ "
KeyNotFoundException
ÂÂ .
(
ÂÂ. /
$str
ÂÂ/ 6
)
ÂÂ6 7
;
ÂÂ7 8
return
ÄÄ 
state
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
public
ÇÇ 
void
ÇÇ 
SetCurveState
ÇÇ !
(
ÇÇ! " 
SerializedProperty
ÇÇ" 4
curve
ÇÇ5 :
,
ÇÇ: ;

CurveState
ÇÇ< F
state
ÇÇG L
)
ÇÇL M
{
ÈÈ 	
if
ÉÉ 
(
ÉÉ 
!
ÉÉ 
m_Curves
ÉÉ 
.
ÉÉ 
ContainsKey
ÉÉ %
(
ÉÉ% &
curve
ÉÉ& +
)
ÉÉ+ ,
)
ÉÉ, -
throw
ÊÊ 
new
ÊÊ "
KeyNotFoundException
ÊÊ .
(
ÊÊ. /
$str
ÊÊ/ 6
)
ÊÊ6 7
;
ÊÊ7 8
m_Curves
ÌÌ 
[
ÌÌ 
curve
ÌÌ 
]
ÌÌ 
=
ÌÌ 
state
ÌÌ #
;
ÌÌ# $
}
ÍÍ 	
public
ÏÏ 
	Selection
ÏÏ 
GetSelection
ÏÏ %
(
ÏÏ% &
)
ÏÏ& '
{
ÐÐ 	
Keyframe
ÑÑ 
?
ÑÑ 
key
ÑÑ 
=
ÑÑ 
null
ÑÑ  
;
ÑÑ  !
if
ÒÒ 
(
ÒÒ %
m_SelectedKeyframeIndex
ÒÒ '
>
ÒÒ( )
-
ÒÒ* +
$num
ÒÒ+ ,
)
ÒÒ, -
{
ÓÓ 
var
ÔÔ 
curve
ÔÔ 
=
ÔÔ 
m_SelectedCurve
ÔÔ +
.
ÔÔ+ ,!
animationCurveValue
ÔÔ, ?
;
ÔÔ? @
if
ÖÖ 
(
ÖÖ %
m_SelectedKeyframeIndex
ÖÖ +
>=
ÖÖ, .
curve
ÖÖ/ 4
.
ÖÖ4 5
length
ÖÖ5 ;
)
ÖÖ; <%
m_SelectedKeyframeIndex
×× +
=
××, -
-
××. /
$num
××/ 0
;
××0 1
else
ØØ 
key
ÙÙ 
=
ÙÙ 
curve
ÙÙ 
[
ÙÙ  %
m_SelectedKeyframeIndex
ÙÙ  7
]
ÙÙ7 8
;
ÙÙ8 9
}
ÚÚ 
return
ÜÜ 
new
ÜÜ 
	Selection
ÜÜ  
(
ÜÜ  !
m_SelectedCurve
ÜÜ! 0
,
ÜÜ0 1%
m_SelectedKeyframeIndex
ÜÜ2 I
,
ÜÜI J
key
ÜÜK N
)
ÜÜN O
;
ÜÜO P
}
ÝÝ 	
public
ßß 
void
ßß 
SetKeyframe
ßß 
(
ßß   
SerializedProperty
ßß  2
curve
ßß3 8
,
ßß8 9
int
ßß: =
keyframeIndex
ßß> K
,
ßßK L
Keyframe
ßßM U
keyframe
ßßV ^
)
ßß^ _
{
àà 	
var
áá 
	animCurve
áá 
=
áá 
curve
áá !
.
áá! "!
animationCurveValue
áá" 5
;
áá5 6
SetKeyframe
ââ 
(
ââ 
	animCurve
ââ !
,
ââ! "
keyframeIndex
ââ# 0
,
ââ0 1
keyframe
ââ2 :
)
ââ: ;
;
ââ; <
	SaveCurve
ãã 
(
ãã 
curve
ãã 
,
ãã 
	animCurve
ãã &
)
ãã& '
;
ãã' (
}
ää 	
public
ææ 
bool
ææ 
OnGUI
ææ 
(
ææ 
Rect
ææ 
rect
ææ #
)
ææ# $
{
çç 	
if
èè 
(
èè 
Event
èè 
.
èè 
current
èè 
.
èè 
type
èè "
==
èè# %
	EventType
èè& /
.
èè/ 0
Repaint
èè0 7
)
èè7 8
m_Dirty
éé 
=
éé 
false
éé 
;
éé  
GUI
ëë 
.
ëë 
	BeginClip
ëë 
(
ëë 
rect
ëë 
)
ëë 
;
ëë  
{
ìì 
var
íí 
area
íí 
=
íí 
new
íí 
Rect
íí #
(
íí# $
Vector2
íí$ +
.
íí+ ,
zero
íí, 0
,
íí0 1
rect
íí2 6
.
íí6 7
size
íí7 ;
)
íí; <
;
íí< =
m_CurveArea
îî 
=
îî 
settings
îî &
.
îî& '
padding
îî' .
.
îî. /
Remove
îî/ 5
(
îî5 6
area
îî6 :
)
îî: ;
;
îî; <
foreach
ðð 
(
ðð 
var
ðð 
curve
ðð "
in
ðð# %
m_Curves
ðð& .
)
ðð. /

OnCurveGUI
ññ 
(
ññ 
area
ññ #
,
ññ# $
curve
ññ% *
.
ññ* +
Key
ññ+ .
,
ññ. /
curve
ññ0 5
.
ññ5 6
Value
ññ6 ;
)
ññ; <
;
ññ< =
OnGeneralUI
óó 
(
óó 
area
óó  
)
óó  !
;
óó! "
}
ôô 
GUI
õõ 
.
õõ 
EndClip
õõ 
(
õõ 
)
õõ 
;
õõ 
return
÷÷ 
m_Dirty
÷÷ 
;
÷÷ 
}
øø 	
void
þþ 

OnCurveGUI
þþ 
(
þþ 
Rect
þþ 
rect
þþ !
,
þþ! " 
SerializedProperty
þþ# 5
curve
þþ6 ;
,
þþ; <

CurveState
þþ= G
state
þþH M
)
þþM N
{
ÿÿ 	
if
 
(
 
!
 
state
 
.
 
visible
 
)
 
return
 
;
 
var
 
	animCurve
 
=
 
curve
 !
.
! "!
animationCurveValue
" 5
;
5 6
var
 
keys
 
=
 
	animCurve
  
.
  !
keys
! %
;
% &
var
 
length
 
=
 
keys
 
.
 
Length
 $
;
$ %
var
 
color
 
=
 
state
 
.
 
color
 #
;
# $
if
 
(
 
!
 
state
 
.
 
editable
 
)
  
color
 
.
 
a
 
*=
 
$num
 
;
  
Handles
 
.
 
color
 
=
 
color
 !
;
! "
var
 
bounds
 
=
 
settings
 !
.
! "
bounds
" (
;
( )
if
 
(
 
length
 
==
 
$num
 
)
 
{
 
var
 
p1
 
=
 
CurveToCanvas
 &
(
& '
new
' *
Vector3
+ 2
(
2 3
bounds
3 9
.
9 :
xMin
: >
,
> ?
state
@ E
.
E F"
zeroKeyConstantValue
F Z
)
Z [
)
[ \
;
\ ]
var
 
p2
 
=
 
CurveToCanvas
 &
(
& '
new
' *
Vector3
+ 2
(
2 3
bounds
3 9
.
9 :
xMax
: >
,
> ?
state
@ E
.
E F"
zeroKeyConstantValue
F Z
)
Z [
)
[ \
;
\ ]
Handles
 
.
 
DrawAAPolyLine
 &
(
& '
state
' ,
.
, -
width
- 2
,
2 3
p1
4 6
,
6 7
p2
8 :
)
: ;
;
; <
}
 
else
 
if
 
(
 
length
 
==
 
$num
  
)
  !
{
 
var
 
p1
 
=
 
CurveToCanvas
 &
(
& '
new
' *
Vector3
+ 2
(
2 3
bounds
3 9
.
9 :
xMin
: >
,
> ?
keys
@ D
[
D E
$num
E F
]
F G
.
G H
value
H M
)
M N
)
N O
;
O P
var
 
p2
 
=
 
CurveToCanvas
 &
(
& '
new
' *
Vector3
+ 2
(
2 3
bounds
3 9
.
9 :
xMax
: >
,
> ?
keys
@ D
[
D E
$num
E F
]
F G
.
G H
value
H M
)
M N
)
N O
;
O P
Handles
 
.
 
DrawAAPolyLine
 &
(
& '
state
' ,
.
, -
width
- 2
,
2 3
p1
4 6
,
6 7
p2
8 :
)
: ;
;
; <
}
 
else
 
{
 
var
 
prevKey
 
=
 
keys
 "
[
" #
$num
# $
]
$ %
;
% &
for
   
(
   
int
   
k
   
=
   
$num
   
;
   
k
    !
<
  " #
length
  $ *
;
  * +
k
  , -
++
  - /
)
  / 0
{
¡¡ 
var
¢¢ 
key
¢¢ 
=
¢¢ 
keys
¢¢ "
[
¢¢" #
k
¢¢# $
]
¢¢$ %
;
¢¢% &
var
££ 
pts
££ 
=
££ 
BezierSegment
££ +
(
££+ ,
prevKey
££, 3
,
££3 4
key
££5 8
)
££8 9
;
££9 :
if
¥¥ 
(
¥¥ 
float
¥¥ 
.
¥¥ 

IsInfinity
¥¥ (
(
¥¥( )
prevKey
¥¥) 0
.
¥¥0 1

outTangent
¥¥1 ;
)
¥¥; <
||
¥¥= ?
float
¥¥@ E
.
¥¥E F

IsInfinity
¥¥F P
(
¥¥P Q
key
¥¥Q T
.
¥¥T U
	inTangent
¥¥U ^
)
¥¥^ _
)
¥¥_ `
{
¦¦ 
var
§§ 
s
§§ 
=
§§ 
HardSegment
§§  +
(
§§+ ,
prevKey
§§, 3
,
§§3 4
key
§§5 8
)
§§8 9
;
§§9 :
Handles
¨¨ 
.
¨¨  
DrawAAPolyLine
¨¨  .
(
¨¨. /
state
¨¨/ 4
.
¨¨4 5
width
¨¨5 :
,
¨¨: ;
s
¨¨< =
[
¨¨= >
$num
¨¨> ?
]
¨¨? @
,
¨¨@ A
s
¨¨B C
[
¨¨C D
$num
¨¨D E
]
¨¨E F
,
¨¨F G
s
¨¨H I
[
¨¨I J
$num
¨¨J K
]
¨¨K L
)
¨¨L M
;
¨¨M N
}
©© 
else
ªª 
Handles
ªª  
.
ªª  !

DrawBezier
ªª! +
(
ªª+ ,
pts
ªª, /
[
ªª/ 0
$num
ªª0 1
]
ªª1 2
,
ªª2 3
pts
ªª4 7
[
ªª7 8
$num
ªª8 9
]
ªª9 :
,
ªª: ;
pts
ªª< ?
[
ªª? @
$num
ªª@ A
]
ªªA B
,
ªªB C
pts
ªªD G
[
ªªG H
$num
ªªH I
]
ªªI J
,
ªªJ K
color
ªªL Q
,
ªªQ R
null
ªªS W
,
ªªW X
state
ªªY ^
.
ªª^ _
width
ªª_ d
)
ªªd e
;
ªªe f
prevKey
¬¬ 
=
¬¬ 
key
¬¬ !
;
¬¬! "
}
­­ 
if
°° 
(
°° 
keys
°° 
[
°° 
$num
°° 
]
°° 
.
°° 
time
°°  
>
°°! "
bounds
°°# )
.
°°) *
xMin
°°* .
)
°°. /
{
±± 
if
²² 
(
²² 
state
²² 
.
²² 
loopInBounds
²² *
)
²²* +
{
³³ 
var
´´ 
p1
´´ 
=
´´  
keys
´´! %
[
´´% &
length
´´& ,
-
´´- .
$num
´´/ 0
]
´´0 1
;
´´1 2
p1
µµ 
.
µµ 
time
µµ 
-=
µµ  "
settings
µµ# +
.
µµ+ ,
bounds
µµ, 2
.
µµ2 3
width
µµ3 8
;
µµ8 9
var
¶¶ 
p2
¶¶ 
=
¶¶  
keys
¶¶! %
[
¶¶% &
$num
¶¶& '
]
¶¶' (
;
¶¶( )
var
·· 
pts
·· 
=
··  !
BezierSegment
··" /
(
··/ 0
p1
··0 2
,
··2 3
p2
··4 6
)
··6 7
;
··7 8
if
¹¹ 
(
¹¹ 
float
¹¹ !
.
¹¹! "

IsInfinity
¹¹" ,
(
¹¹, -
p1
¹¹- /
.
¹¹/ 0

outTangent
¹¹0 :
)
¹¹: ;
||
¹¹< >
float
¹¹? D
.
¹¹D E

IsInfinity
¹¹E O
(
¹¹O P
p2
¹¹P R
.
¹¹R S
	inTangent
¹¹S \
)
¹¹\ ]
)
¹¹] ^
{
ºº 
var
»» 
s
»»  !
=
»»" #
HardSegment
»»$ /
(
»»/ 0
p1
»»0 2
,
»»2 3
p2
»»4 6
)
»»6 7
;
»»7 8
Handles
¼¼ #
.
¼¼# $
DrawAAPolyLine
¼¼$ 2
(
¼¼2 3
state
¼¼3 8
.
¼¼8 9
width
¼¼9 >
,
¼¼> ?
s
¼¼@ A
[
¼¼A B
$num
¼¼B C
]
¼¼C D
,
¼¼D E
s
¼¼F G
[
¼¼G H
$num
¼¼H I
]
¼¼I J
,
¼¼J K
s
¼¼L M
[
¼¼M N
$num
¼¼N O
]
¼¼O P
)
¼¼P Q
;
¼¼Q R
}
½½ 
else
¾¾ 
Handles
¾¾ $
.
¾¾$ %

DrawBezier
¾¾% /
(
¾¾/ 0
pts
¾¾0 3
[
¾¾3 4
$num
¾¾4 5
]
¾¾5 6
,
¾¾6 7
pts
¾¾8 ;
[
¾¾; <
$num
¾¾< =
]
¾¾= >
,
¾¾> ?
pts
¾¾@ C
[
¾¾C D
$num
¾¾D E
]
¾¾E F
,
¾¾F G
pts
¾¾H K
[
¾¾K L
$num
¾¾L M
]
¾¾M N
,
¾¾N O
color
¾¾P U
,
¾¾U V
null
¾¾W [
,
¾¾[ \
state
¾¾] b
.
¾¾b c
width
¾¾c h
)
¾¾h i
;
¾¾i j
}
¿¿ 
else
ÀÀ 
{
ÁÁ 
var
ÂÂ 
p1
ÂÂ 
=
ÂÂ  
CurveToCanvas
ÂÂ! .
(
ÂÂ. /
new
ÂÂ/ 2
Vector3
ÂÂ3 :
(
ÂÂ: ;
bounds
ÂÂ; A
.
ÂÂA B
xMin
ÂÂB F
,
ÂÂF G
keys
ÂÂH L
[
ÂÂL M
$num
ÂÂM N
]
ÂÂN O
.
ÂÂO P
value
ÂÂP U
)
ÂÂU V
)
ÂÂV W
;
ÂÂW X
var
ÃÃ 
p2
ÃÃ 
=
ÃÃ  
CurveToCanvas
ÃÃ! .
(
ÃÃ. /
keys
ÃÃ/ 3
[
ÃÃ3 4
$num
ÃÃ4 5
]
ÃÃ5 6
)
ÃÃ6 7
;
ÃÃ7 8
Handles
ÄÄ 
.
ÄÄ  
DrawAAPolyLine
ÄÄ  .
(
ÄÄ. /
state
ÄÄ/ 4
.
ÄÄ4 5
width
ÄÄ5 :
,
ÄÄ: ;
p1
ÄÄ< >
,
ÄÄ> ?
p2
ÄÄ@ B
)
ÄÄB C
;
ÄÄC D
}
ÅÅ 
}
ÆÆ 
if
ÈÈ 
(
ÈÈ 
keys
ÈÈ 
[
ÈÈ 
length
ÈÈ 
-
ÈÈ  !
$num
ÈÈ" #
]
ÈÈ# $
.
ÈÈ$ %
time
ÈÈ% )
<
ÈÈ* +
bounds
ÈÈ, 2
.
ÈÈ2 3
xMax
ÈÈ3 7
)
ÈÈ7 8
{
ÉÉ 
if
ÊÊ 
(
ÊÊ 
state
ÊÊ 
.
ÊÊ 
loopInBounds
ÊÊ *
)
ÊÊ* +
{
ËË 
var
ÌÌ 
p1
ÌÌ 
=
ÌÌ  
keys
ÌÌ! %
[
ÌÌ% &
length
ÌÌ& ,
-
ÌÌ- .
$num
ÌÌ/ 0
]
ÌÌ0 1
;
ÌÌ1 2
var
ÍÍ 
p2
ÍÍ 
=
ÍÍ  
keys
ÍÍ! %
[
ÍÍ% &
$num
ÍÍ& '
]
ÍÍ' (
;
ÍÍ( )
p2
ÎÎ 
.
ÎÎ 
time
ÎÎ 
+=
ÎÎ  "
settings
ÎÎ# +
.
ÎÎ+ ,
bounds
ÎÎ, 2
.
ÎÎ2 3
width
ÎÎ3 8
;
ÎÎ8 9
var
ÏÏ 
pts
ÏÏ 
=
ÏÏ  !
BezierSegment
ÏÏ" /
(
ÏÏ/ 0
p1
ÏÏ0 2
,
ÏÏ2 3
p2
ÏÏ4 6
)
ÏÏ6 7
;
ÏÏ7 8
if
ÑÑ 
(
ÑÑ 
float
ÑÑ !
.
ÑÑ! "

IsInfinity
ÑÑ" ,
(
ÑÑ, -
p1
ÑÑ- /
.
ÑÑ/ 0

outTangent
ÑÑ0 :
)
ÑÑ: ;
||
ÑÑ< >
float
ÑÑ? D
.
ÑÑD E

IsInfinity
ÑÑE O
(
ÑÑO P
p2
ÑÑP R
.
ÑÑR S
	inTangent
ÑÑS \
)
ÑÑ\ ]
)
ÑÑ] ^
{
ÒÒ 
var
ÓÓ 
s
ÓÓ  !
=
ÓÓ" #
HardSegment
ÓÓ$ /
(
ÓÓ/ 0
p1
ÓÓ0 2
,
ÓÓ2 3
p2
ÓÓ4 6
)
ÓÓ6 7
;
ÓÓ7 8
Handles
ÔÔ #
.
ÔÔ# $
DrawAAPolyLine
ÔÔ$ 2
(
ÔÔ2 3
state
ÔÔ3 8
.
ÔÔ8 9
width
ÔÔ9 >
,
ÔÔ> ?
s
ÔÔ@ A
[
ÔÔA B
$num
ÔÔB C
]
ÔÔC D
,
ÔÔD E
s
ÔÔF G
[
ÔÔG H
$num
ÔÔH I
]
ÔÔI J
,
ÔÔJ K
s
ÔÔL M
[
ÔÔM N
$num
ÔÔN O
]
ÔÔO P
)
ÔÔP Q
;
ÔÔQ R
}
ÕÕ 
else
ÖÖ 
Handles
ÖÖ $
.
ÖÖ$ %

DrawBezier
ÖÖ% /
(
ÖÖ/ 0
pts
ÖÖ0 3
[
ÖÖ3 4
$num
ÖÖ4 5
]
ÖÖ5 6
,
ÖÖ6 7
pts
ÖÖ8 ;
[
ÖÖ; <
$num
ÖÖ< =
]
ÖÖ= >
,
ÖÖ> ?
pts
ÖÖ@ C
[
ÖÖC D
$num
ÖÖD E
]
ÖÖE F
,
ÖÖF G
pts
ÖÖH K
[
ÖÖK L
$num
ÖÖL M
]
ÖÖM N
,
ÖÖN O
color
ÖÖP U
,
ÖÖU V
null
ÖÖW [
,
ÖÖ[ \
state
ÖÖ] b
.
ÖÖb c
width
ÖÖc h
)
ÖÖh i
;
ÖÖi j
}
×× 
else
ØØ 
{
ÙÙ 
var
ÚÚ 
p1
ÚÚ 
=
ÚÚ  
CurveToCanvas
ÚÚ! .
(
ÚÚ. /
keys
ÚÚ/ 3
[
ÚÚ3 4
length
ÚÚ4 :
-
ÚÚ; <
$num
ÚÚ= >
]
ÚÚ> ?
)
ÚÚ? @
;
ÚÚ@ A
var
ÛÛ 
p2
ÛÛ 
=
ÛÛ  
CurveToCanvas
ÛÛ! .
(
ÛÛ. /
new
ÛÛ/ 2
Vector3
ÛÛ3 :
(
ÛÛ: ;
bounds
ÛÛ; A
.
ÛÛA B
xMax
ÛÛB F
,
ÛÛF G
keys
ÛÛH L
[
ÛÛL M
length
ÛÛM S
-
ÛÛT U
$num
ÛÛV W
]
ÛÛW X
.
ÛÛX Y
value
ÛÛY ^
)
ÛÛ^ _
)
ÛÛ_ `
;
ÛÛ` a
Handles
ÜÜ 
.
ÜÜ  
DrawAAPolyLine
ÜÜ  .
(
ÜÜ. /
state
ÜÜ/ 4
.
ÜÜ4 5
width
ÜÜ5 :
,
ÜÜ: ;
p1
ÜÜ< >
,
ÜÜ> ?
p2
ÜÜ@ B
)
ÜÜB C
;
ÜÜC D
}
ÝÝ 
}
ÞÞ 
}
ßß 
bool
ââ &
isCurrentlySelectedCurve
ââ )
=
ââ* +
curve
ââ, 1
==
ââ2 4
m_SelectedCurve
ââ5 D
;
ââD E
if
ää 
(
ää &
isCurrentlySelectedCurve
ää (
&&
ää) +%
m_SelectedKeyframeIndex
ää, C
>=
ääD F
length
ääG M
)
ääM N%
m_SelectedKeyframeIndex
åå '
=
åå( )
-
åå* +
$num
åå+ ,
;
åå, -
for
èè 
(
èè 
int
èè 
k
èè 
=
èè 
$num
èè 
;
èè 
k
èè 
<
èè 
length
èè  &
;
èè& '
k
èè( )
++
èè) +
)
èè+ ,
{
éé 
bool
êê )
isCurrentlySelectedKeyframe
êê 0
=
êê1 2
k
êê3 4
==
êê5 7%
m_SelectedKeyframeIndex
êê8 O
;
êêO P
var
ëë 
e
ëë 
=
ëë 
Event
ëë 
.
ëë 
current
ëë %
;
ëë% &
var
íí 
pos
íí 
=
íí 
CurveToCanvas
íí '
(
íí' (
keys
íí( ,
[
íí, -
k
íí- .
]
íí. /
)
íí/ 0
;
íí0 1
var
îî 
hitRect
îî 
=
îî 
new
îî !
Rect
îî" &
(
îî& '
pos
îî' *
.
îî* +
x
îî+ ,
-
îî- .
$num
îî/ 1
,
îî1 2
pos
îî3 6
.
îî6 7
y
îî7 8
-
îî9 :
$num
îî; =
,
îî= >
$num
îî? B
,
îîB C
$num
îîD G
)
îîG H
;
îîH I
var
ïï 
offset
ïï 
=
ïï &
isCurrentlySelectedCurve
ïï 5
?
ðð 
new
ðð 

RectOffset
ðð $
(
ðð$ %
$num
ðð% &
,
ðð& '
$num
ðð( )
,
ðð) *
$num
ðð+ ,
,
ðð, -
$num
ðð. /
)
ðð/ 0
:
ññ 
new
ññ 

RectOffset
ññ $
(
ññ$ %
$num
ññ% &
,
ññ& '
$num
ññ( )
,
ññ) *
$num
ññ+ ,
,
ññ, -
$num
ññ. /
)
ññ/ 0
;
ññ0 1
var
óó 

outTangent
óó 
=
óó  
pos
óó! $
+
óó% &"
CurveTangentToCanvas
óó' ;
(
óó; <
keys
óó< @
[
óó@ A
k
óóA B
]
óóB C
.
óóC D

outTangent
óóD N
)
óóN O
.
óóO P

normalized
óóP Z
*
óó[ \
$num
óó] `
;
óó` a
var
ôô 
	inTangent
ôô 
=
ôô 
pos
ôô  #
-
ôô$ %"
CurveTangentToCanvas
ôô& :
(
ôô: ;
keys
ôô; ?
[
ôô? @
k
ôô@ A
]
ôôA B
.
ôôB C
	inTangent
ôôC L
)
ôôL M
.
ôôM N

normalized
ôôN X
*
ôôY Z
$num
ôô[ ^
;
ôô^ _
var
õõ 
inTangentHitRect
õõ $
=
õõ% &
new
õõ' *
Rect
õõ+ /
(
õõ/ 0
	inTangent
õõ0 9
.
õõ9 :
x
õõ: ;
-
õõ< =
$num
õõ> @
,
õõ@ A
	inTangent
õõB K
.
õõK L
y
õõL M
-
õõN O
$num
õõP R
,
õõR S
$num
õõT W
,
õõW X
$num
õõY \
)
õõ\ ]
;
õõ] ^
var
öö 
outTangentHitrect
öö %
=
öö& '
new
öö( +
Rect
öö, 0
(
öö0 1

outTangent
öö1 ;
.
öö; <
x
öö< =
-
öö> ?
$num
öö@ B
,
ööB C

outTangent
ööD N
.
ööN O
y
ööO P
-
ööQ R
$num
ööS U
,
ööU V
$num
ööW Z
,
ööZ [
$num
öö\ _
)
öö_ `
;
öö` a
if
ùù 
(
ùù 
state
ùù 
.
ùù $
showNonEditableHandles
ùù 0
)
ùù0 1
{
úú 
if
ûû 
(
ûû 
e
ûû 
.
ûû 
type
ûû 
==
ûû !
	EventType
ûû" +
.
ûû+ ,
Repaint
ûû, 3
)
ûû3 4
{
üü 
var
ýý 
selectedColor
ýý )
=
ýý* +
(
ýý, -&
isCurrentlySelectedCurve
ýý- E
&&
ýýF H)
isCurrentlySelectedKeyframe
ýýI d
)
ýýd e
?
þþ 
settings
þþ &
.
þþ& '
selectionColor
þþ' 5
:
ÿÿ 
state
ÿÿ #
.
ÿÿ# $
color
ÿÿ$ )
;
ÿÿ) *
	EditorGUI
 !
.
! "
DrawRect
" *
(
* +
offset
+ 1
.
1 2
Remove
2 8
(
8 9
hitRect
9 @
)
@ A
,
A B
selectedColor
C P
)
P Q
;
Q R
if
 
(
 &
isCurrentlySelectedCurve
 4
&&
5 7
(
8 9
!
9 :
state
: ?
.
? @(
onlyShowHandlesOnSelection
@ Z
||
[ ]
(
^ _
state
_ d
.
d e(
onlyShowHandlesOnSelection
e 
&& +
isCurrentlySelectedKeyframe 
) 
)  
)  ¡
{
 
Handles
 #
.
# $
color
$ )
=
* +
selectedColor
, 9
;
9 :
if
 
(
  
k
  !
>
" #
$num
$ %
||
& (
state
) .
.
. /
loopInBounds
/ ;
)
; <
{
 
Handles
  '
.
' (
DrawAAPolyLine
( 6
(
6 7
state
7 <
.
< =
handleWidth
= H
,
H I
pos
J M
,
M N
	inTangent
O X
)
X Y
;
Y Z
	EditorGUI
  )
.
) *
DrawRect
* 2
(
2 3
offset
3 9
.
9 :
Remove
: @
(
@ A
inTangentHitRect
A Q
)
Q R
,
R S
selectedColor
T a
)
a b
;
b c
}
 
if
 
(
  
k
  !
<
" #
length
$ *
-
+ ,
$num
- .
||
/ 1
state
2 7
.
7 8
loopInBounds
8 D
)
D E
{
 
Handles
  '
.
' (
DrawAAPolyLine
( 6
(
6 7
state
7 <
.
< =
handleWidth
= H
,
H I
pos
J M
,
M N

outTangent
O Y
)
Y Z
;
Z [
	EditorGUI
  )
.
) *
DrawRect
* 2
(
2 3
offset
3 9
.
9 :
Remove
: @
(
@ A
outTangentHitrect
A R
)
R S
,
S T
selectedColor
U b
)
b c
;
c d
}
 
}
 
}
 
}
 
if
 
(
 
state
 
.
 
editable
 "
)
" #
{
 
if
 
(
 

m_EditMode
 "
==
# %
EditMode
& .
.
. /
Moving
/ 5
&&
6 8
e
9 :
.
: ;
type
; ?
==
@ B
	EventType
C L
.
L M
	MouseDrag
M V
&&
W Y&
isCurrentlySelectedCurve
Z r
&&
s u*
isCurrentlySelectedKeyframev 
) 
{
 
EditMoveKeyframe
 (
(
( )
	animCurve
) 2
,
2 3
keys
4 8
,
8 9
k
: ;
)
; <
;
< =
}
 
if
¢¢ 
(
¢¢ 

m_EditMode
¢¢ "
==
¢¢# %
EditMode
¢¢& .
.
¢¢. /
TangentEdit
¢¢/ :
&&
¢¢; =
e
¢¢> ?
.
¢¢? @
type
¢¢@ D
==
¢¢E G
	EventType
¢¢H Q
.
¢¢Q R
	MouseDrag
¢¢R [
&&
¢¢\ ^&
isCurrentlySelectedCurve
¢¢_ w
&&
¢¢x z*
isCurrentlySelectedKeyframe¢¢{ 
)¢¢ 
{
££ 
bool
¤¤ 
alreadyBroken
¤¤ *
=
¤¤+ ,
!
¤¤- .
(
¤¤. /
Mathf
¤¤/ 4
.
¤¤4 5
Approximately
¤¤5 B
(
¤¤B C
keys
¤¤C G
[
¤¤G H
k
¤¤H I
]
¤¤I J
.
¤¤J K
	inTangent
¤¤K T
,
¤¤T U
keys
¤¤V Z
[
¤¤Z [
k
¤¤[ \
]
¤¤\ ]
.
¤¤] ^

outTangent
¤¤^ h
)
¤¤h i
||
¤¤j l
(
¤¤m n
float
¤¤n s
.
¤¤s t

IsInfinity
¤¤t ~
(
¤¤~ 
keys¤¤ 
[¤¤ 
k¤¤ 
]¤¤ 
.¤¤ 
	inTangent¤¤ 
)¤¤ 
&&¤¤ 
float¤¤ 
.¤¤ 

IsInfinity¤¤ ¥
(¤¤¥ ¦
keys¤¤¦ ª
[¤¤ª «
k¤¤« ¬
]¤¤¬ ­
.¤¤­ ®

outTangent¤¤® ¸
)¤¤¸ ¹
)¤¤¹ º
)¤¤º »
;¤¤» ¼
EditMoveTangent
¥¥ '
(
¥¥' (
	animCurve
¥¥( 1
,
¥¥1 2
keys
¥¥3 7
,
¥¥7 8
k
¥¥9 :
,
¥¥: ;
m_TangentEditMode
¥¥< M
,
¥¥M N
e
¥¥O P
.
¥¥P Q
shift
¥¥Q V
||
¥¥W Y
!
¥¥Z [
(
¥¥[ \
alreadyBroken
¥¥\ i
||
¥¥j l
e
¥¥m n
.
¥¥n o
control
¥¥o v
)
¥¥v w
)
¥¥w x
;
¥¥x y
}
¦¦ 
if
©© 
(
©© 
e
©© 
.
©© 
type
©© 
==
©© !
	EventType
©©" +
.
©©+ ,
	MouseDown
©©, 5
&&
©©6 8
rect
©©9 =
.
©©= >
Contains
©©> F
(
©©F G
e
©©G H
.
©©H I
mousePosition
©©I V
)
©©V W
)
©©W X
{
ªª 
if
«« 
(
«« 
hitRect
«« #
.
««# $
Contains
««$ ,
(
««, -
e
««- .
.
««. /
mousePosition
««/ <
)
««< =
)
««= >
{
¬¬ 
if
­­ 
(
­­  
e
­­  !
.
­­! "
button
­­" (
==
­­) +
$num
­­, -
)
­­- .
{
®® 
SelectKeyframe
¯¯  .
(
¯¯. /
curve
¯¯/ 4
,
¯¯4 5
k
¯¯6 7
)
¯¯7 8
;
¯¯8 9

m_EditMode
°°  *
=
°°+ ,
EditMode
°°- 5
.
°°5 6
Moving
°°6 <
;
°°< =
e
±±  !
.
±±! "
Use
±±" %
(
±±% &
)
±±& '
;
±±' (
}
²² 
else
³³  
if
³³! #
(
³³$ %
e
³³% &
.
³³& '
button
³³' -
==
³³. 0
$num
³³1 2
)
³³2 3
{
´´ 
var
¶¶  #
menu
¶¶$ (
=
¶¶) *
new
¶¶+ .
GenericMenu
¶¶/ :
(
¶¶: ;
)
¶¶; <
;
¶¶< =
menu
··  $
.
··$ %
AddItem
··% ,
(
··, -
new
··- 0

GUIContent
··1 ;
(
··; <
$str
··< H
)
··H I
,
··I J
false
··K P
,
··P Q
(
··R S
x
··S T
)
··T U
=>
··V X
{
¸¸  !
var
¹¹$ '
action
¹¹( .
=
¹¹/ 0
(
¹¹1 2

MenuAction
¹¹2 <
)
¹¹< =
x
¹¹= >
;
¹¹> ?
var
ºº$ '

curveValue
ºº( 2
=
ºº3 4
action
ºº5 ;
.
ºº; <
curve
ºº< A
.
ººA B!
animationCurveValue
ººB U
;
ººU V
action
»»$ *
.
»»* +
curve
»»+ 0
.
»»0 1
serializedObject
»»1 A
.
»»A B
Update
»»B H
(
»»H I
)
»»I J
;
»»J K
RemoveKeyframe
¼¼$ 2
(
¼¼2 3

curveValue
¼¼3 =
,
¼¼= >
action
¼¼? E
.
¼¼E F
index
¼¼F K
)
¼¼K L
;
¼¼L M%
m_SelectedKeyframeIndex
½½$ ;
=
½½< =
-
½½> ?
$num
½½? @
;
½½@ A
	SaveCurve
¾¾$ -
(
¾¾- .
action
¾¾. 4
.
¾¾4 5
curve
¾¾5 :
,
¾¾: ;

curveValue
¾¾< F
)
¾¾F G
;
¾¾G H
action
¿¿$ *
.
¿¿* +
curve
¿¿+ 0
.
¿¿0 1
serializedObject
¿¿1 A
.
¿¿A B%
ApplyModifiedProperties
¿¿B Y
(
¿¿Y Z
)
¿¿Z [
;
¿¿[ \
}
ÀÀ  !
,
ÀÀ! "
new
ÀÀ# &

MenuAction
ÀÀ' 1
(
ÀÀ1 2
curve
ÀÀ2 7
,
ÀÀ7 8
k
ÀÀ9 :
)
ÀÀ: ;
)
ÀÀ; <
;
ÀÀ< =
menu
ÁÁ  $
.
ÁÁ$ %
ShowAsContext
ÁÁ% 2
(
ÁÁ2 3
)
ÁÁ3 4
;
ÁÁ4 5
e
ÂÂ  !
.
ÂÂ! "
Use
ÂÂ" %
(
ÂÂ% &
)
ÂÂ& '
;
ÂÂ' (
}
ÃÃ 
}
ÄÄ 
}
ÅÅ 
if
ÈÈ 
(
ÈÈ 
e
ÈÈ 
.
ÈÈ 
type
ÈÈ 
==
ÈÈ !
	EventType
ÈÈ" +
.
ÈÈ+ ,
	MouseDown
ÈÈ, 5
&&
ÈÈ6 8
rect
ÈÈ9 =
.
ÈÈ= >
Contains
ÈÈ> F
(
ÈÈF G
e
ÈÈG H
.
ÈÈH I
mousePosition
ÈÈI V
)
ÈÈV W
)
ÈÈW X
{
ÉÉ 
if
ÊÊ 
(
ÊÊ 
inTangentHitRect
ÊÊ ,
.
ÊÊ, -
Contains
ÊÊ- 5
(
ÊÊ5 6
e
ÊÊ6 7
.
ÊÊ7 8
mousePosition
ÊÊ8 E
)
ÊÊE F
&&
ÊÊG I
(
ÊÊJ K
k
ÊÊK L
>
ÊÊM N
$num
ÊÊO P
||
ÊÊQ S
state
ÊÊT Y
.
ÊÊY Z
loopInBounds
ÊÊZ f
)
ÊÊf g
)
ÊÊg h
{
ËË 
SelectKeyframe
ÌÌ *
(
ÌÌ* +
curve
ÌÌ+ 0
,
ÌÌ0 1
k
ÌÌ2 3
)
ÌÌ3 4
;
ÌÌ4 5

m_EditMode
ÍÍ &
=
ÍÍ' (
EditMode
ÍÍ) 1
.
ÍÍ1 2
TangentEdit
ÍÍ2 =
;
ÍÍ= >
m_TangentEditMode
ÎÎ -
=
ÎÎ. /
Tangent
ÎÎ0 7
.
ÎÎ7 8
In
ÎÎ8 :
;
ÎÎ: ;
e
ÏÏ 
.
ÏÏ 
Use
ÏÏ !
(
ÏÏ! "
)
ÏÏ" #
;
ÏÏ# $
}
ÐÐ 
else
ÑÑ 
if
ÑÑ 
(
ÑÑ  !
outTangentHitrect
ÑÑ! 2
.
ÑÑ2 3
Contains
ÑÑ3 ;
(
ÑÑ; <
e
ÑÑ< =
.
ÑÑ= >
mousePosition
ÑÑ> K
)
ÑÑK L
&&
ÑÑM O
(
ÑÑP Q
k
ÑÑQ R
<
ÑÑS T
length
ÑÑU [
-
ÑÑ\ ]
$num
ÑÑ^ _
||
ÑÑ` b
state
ÑÑc h
.
ÑÑh i
loopInBounds
ÑÑi u
)
ÑÑu v
)
ÑÑv w
{
ÒÒ 
SelectKeyframe
ÓÓ *
(
ÓÓ* +
curve
ÓÓ+ 0
,
ÓÓ0 1
k
ÓÓ2 3
)
ÓÓ3 4
;
ÓÓ4 5

m_EditMode
ÔÔ &
=
ÔÔ' (
EditMode
ÔÔ) 1
.
ÔÔ1 2
TangentEdit
ÔÔ2 =
;
ÔÔ= >
m_TangentEditMode
ÕÕ -
=
ÕÕ. /
Tangent
ÕÕ0 7
.
ÕÕ7 8
Out
ÕÕ8 ;
;
ÕÕ; <
e
ÖÖ 
.
ÖÖ 
Use
ÖÖ !
(
ÖÖ! "
)
ÖÖ" #
;
ÖÖ# $
}
×× 
}
ØØ 
if
ÛÛ 
(
ÛÛ 
e
ÛÛ 
.
ÛÛ 
rawType
ÛÛ !
==
ÛÛ" $
	EventType
ÛÛ% .
.
ÛÛ. /
MouseUp
ÛÛ/ 6
&&
ÛÛ7 9

m_EditMode
ÛÛ: D
!=
ÛÛE G
EditMode
ÛÛH P
.
ÛÛP Q
None
ÛÛQ U
)
ÛÛU V
{
ÜÜ 

m_EditMode
ÝÝ "
=
ÝÝ# $
EditMode
ÝÝ% -
.
ÝÝ- .
None
ÝÝ. 2
;
ÝÝ2 3
}
ÞÞ 
{
áá 
EditorGUIUtility
ââ (
.
ââ( )
AddCursorRect
ââ) 6
(
ââ6 7
hitRect
ââ7 >
,
ââ> ?
MouseCursor
ââ@ K
.
ââK L
	MoveArrow
ââL U
)
ââU V
;
ââV W
if
ää 
(
ää 
k
ää 
>
ää 
$num
ää  !
||
ää" $
state
ää% *
.
ää* +
loopInBounds
ää+ 7
)
ää7 8
EditorGUIUtility
åå ,
.
åå, -
AddCursorRect
åå- :
(
åå: ;
inTangentHitRect
åå; K
,
ååK L
MouseCursor
ååM X
.
ååX Y
RotateArrow
ååY d
)
ååd e
;
ååe f
if
çç 
(
çç 
k
çç 
<
çç 
length
çç  &
-
çç' (
$num
çç) *
||
çç+ -
state
çç. 3
.
çç3 4
loopInBounds
çç4 @
)
çç@ A
EditorGUIUtility
èè ,
.
èè, -
AddCursorRect
èè- :
(
èè: ;
outTangentHitrect
èè; L
,
èèL M
MouseCursor
èèN Y
.
èèY Z
RotateArrow
èèZ e
)
èèe f
;
èèf g
}
éé 
}
êê 
}
ëë 
Handles
íí 
.
íí 
color
íí 
=
íí 
Color
íí !
.
íí! "
white
íí" '
;
íí' (
	SaveCurve
îî 
(
îî 
curve
îî 
,
îî 
	animCurve
îî &
)
îî& '
;
îî' (
}
ïï 	
void
ññ 
OnGeneralUI
ññ 
(
ññ 
Rect
ññ 
rect
ññ "
)
ññ" #
{
òò 	
var
óó 
e
óó 
=
óó 
Event
óó 
.
óó 
current
óó !
;
óó! "
if
öö 
(
öö 
e
öö 
.
öö 
type
öö 
==
öö 
	EventType
öö #
.
öö# $
	MouseDown
öö$ -
)
öö- .
{
÷÷ 
GUI
øø 
.
øø 
FocusControl
øø  
(
øø  !
null
øø! %
)
øø% &
;
øø& '
m_SelectedCurve
ùù 
=
ùù  !
null
ùù" &
;
ùù& '%
m_SelectedKeyframeIndex
úú '
=
úú( )
-
úú* +
$num
úú+ ,
;
úú, -
bool
ûû 
used
ûû 
=
ûû 
false
ûû !
;
ûû! "
var
ýý 
hit
ýý 
=
ýý 
CanvasToCurve
ýý '
(
ýý' (
e
ýý( )
.
ýý) *
mousePosition
ýý* 7
)
ýý7 8
;
ýý8 9
float
þþ 
curvePickValue
þþ $
=
þþ% &
CurveToCanvas
þþ' 4
(
þþ4 5
hit
þþ5 8
)
þþ8 9
.
þþ9 :
y
þþ: ;
;
þþ; <
foreach
 
(
 
var
 
curve
 "
in
# %
m_Curves
& .
)
. /
{
 
if
 
(
 
!
 
curve
 
.
 
Value
 $
.
$ %
editable
% -
||
. 0
!
1 2
curve
2 7
.
7 8
Value
8 =
.
= >
visible
> E
)
E F
continue
  
;
  !
var
 
prop
 
=
 
curve
 $
.
$ %
Key
% (
;
( )
var
 
state
 
=
 
curve
  %
.
% &
Value
& +
;
+ ,
var
 
	animCurve
 !
=
" #
prop
$ (
.
( )!
animationCurveValue
) <
;
< =
float
 
hitY
 
=
  
	animCurve
! *
.
* +
length
+ 1
==
2 4
$num
5 6
?
 
state
 
.
  "
zeroKeyConstantValue
  4
:
 
	animCurve
 #
.
# $
Evaluate
$ ,
(
, -
hit
- 0
.
0 1
x
1 2
)
2 3
;
3 4
var
 
curvePos
  
=
! "
CurveToCanvas
# 0
(
0 1
new
1 4
Vector3
5 <
(
< =
hit
= @
.
@ A
x
A B
,
B C
hitY
D H
)
H I
)
I J
;
J K
if
 
(
 
Mathf
 
.
 
Abs
 !
(
! "
curvePos
" *
.
* +
y
+ ,
-
- .
curvePickValue
/ =
)
= >
<
? @
settings
A I
.
I J"
curvePickingDistance
J ^
)
^ _
{
 
m_SelectedCurve
 '
=
( )
prop
* .
;
. /
if
 
(
 
e
 
.
 

clickCount
 (
==
) +
$num
, -
&&
. 0
e
1 2
.
2 3
button
3 9
==
: <
$num
= >
)
> ?
{
  
EditCreateKeyframe
 .
(
. /
	animCurve
/ 8
,
8 9
hit
: =
,
= >
true
? C
,
C D
state
E J
.
J K"
zeroKeyConstantValue
K _
)
_ `
;
` a
	SaveCurve
 %
(
% &
prop
& *
,
* +
	animCurve
, 5
)
5 6
;
6 7
}
 
else
 
if
 
(
  !
e
! "
.
" #
button
# )
==
* ,
$num
- .
)
. /
{
 
var
 
menu
  $
=
% &
new
' *
GenericMenu
+ 6
(
6 7
)
7 8
;
8 9
menu
  
.
  !
AddItem
! (
(
( )
new
) ,

GUIContent
- 7
(
7 8
$str
8 A
)
A B
,
B C
false
D I
,
I J
(
K L
x
L M
)
M N
=>
O Q
{
 
var
  #
action
$ *
=
+ ,
(
- .

MenuAction
. 8
)
8 9
x
9 :
;
: ;
var
    #

curveValue
  $ .
=
  / 0
action
  1 7
.
  7 8
curve
  8 =
.
  = >!
animationCurveValue
  > Q
;
  Q R
action
¡¡  &
.
¡¡& '
curve
¡¡' ,
.
¡¡, -
serializedObject
¡¡- =
.
¡¡= >
Update
¡¡> D
(
¡¡D E
)
¡¡E F
;
¡¡F G 
EditCreateKeyframe
¢¢  2
(
¢¢2 3

curveValue
¢¢3 =
,
¢¢= >
hit
¢¢? B
,
¢¢B C
true
¢¢D H
,
¢¢H I
$num
¢¢J L
)
¢¢L M
;
¢¢M N
	SaveCurve
££  )
(
££) *
action
££* 0
.
££0 1
curve
££1 6
,
££6 7

curveValue
££8 B
)
££B C
;
££C D
action
¤¤  &
.
¤¤& '
curve
¤¤' ,
.
¤¤, -
serializedObject
¤¤- =
.
¤¤= >%
ApplyModifiedProperties
¤¤> U
(
¤¤U V
)
¤¤V W
;
¤¤W X
}
¥¥ 
,
¥¥ 
new
¥¥ "

MenuAction
¥¥# -
(
¥¥- .
prop
¥¥. 2
,
¥¥2 3
hit
¥¥4 7
)
¥¥7 8
)
¥¥8 9
;
¥¥9 :
menu
¦¦  
.
¦¦  !
ShowAsContext
¦¦! .
(
¦¦. /
)
¦¦/ 0
;
¦¦0 1
e
§§ 
.
§§ 
Use
§§ !
(
§§! "
)
§§" #
;
§§# $
used
¨¨  
=
¨¨! "
true
¨¨# '
;
¨¨' (
}
©© 
}
ªª 
}
«« 
if
­­ 
(
­­ 
e
­­ 
.
­­ 

clickCount
­­  
==
­­! #
$num
­­$ %
&&
­­& (
e
­­) *
.
­­* +
button
­­+ 1
==
­­2 4
$num
­­5 6
&&
­­7 9
m_SelectedCurve
­­: I
==
­­J L
null
­­M Q
)
­­Q R
{
®® 
foreach
°° 
(
°° 
var
°°  
curve
°°! &
in
°°' )
m_Curves
°°* 2
)
°°2 3
{
±± 
if
²² 
(
²² 
!
²² 
curve
²² "
.
²²" #
Value
²²# (
.
²²( )
editable
²²) 1
||
²²2 4
!
²²5 6
curve
²²6 ;
.
²²; <
Value
²²< A
.
²²A B
visible
²²B I
)
²²I J
continue
³³ $
;
³³$ %
var
µµ 
prop
µµ  
=
µµ! "
curve
µµ# (
.
µµ( )
Key
µµ) ,
;
µµ, -
var
¶¶ 
state
¶¶ !
=
¶¶" #
curve
¶¶$ )
.
¶¶) *
Value
¶¶* /
;
¶¶/ 0
var
·· 
	animCurve
·· %
=
··& '
prop
··( ,
.
··, -!
animationCurveValue
··- @
;
··@ A 
EditCreateKeyframe
¸¸ *
(
¸¸* +
	animCurve
¸¸+ 4
,
¸¸4 5
hit
¸¸6 9
,
¸¸9 :
e
¸¸; <
.
¸¸< =
alt
¸¸= @
,
¸¸@ A
state
¸¸B G
.
¸¸G H"
zeroKeyConstantValue
¸¸H \
)
¸¸\ ]
;
¸¸] ^
	SaveCurve
¹¹ !
(
¹¹! "
prop
¹¹" &
,
¹¹& '
	animCurve
¹¹( 1
)
¹¹1 2
;
¹¹2 3
}
ºº 
}
»» 
else
¼¼ 
if
¼¼ 
(
¼¼ 
!
¼¼ 
used
¼¼ 
&&
¼¼ !
e
¼¼" #
.
¼¼# $
button
¼¼$ *
==
¼¼+ -
$num
¼¼. /
)
¼¼/ 0
{
½½ 
var
¿¿ 
menu
¿¿ 
=
¿¿ 
new
¿¿ "
GenericMenu
¿¿# .
(
¿¿. /
)
¿¿/ 0
;
¿¿0 1
menu
ÀÀ 
.
ÀÀ 
AddItem
ÀÀ  
(
ÀÀ  !
new
ÀÀ! $

GUIContent
ÀÀ% /
(
ÀÀ/ 0
$str
ÀÀ0 E
)
ÀÀE F
,
ÀÀF G
false
ÀÀH M
,
ÀÀM N
(
ÀÀO P
)
ÀÀP Q
=>
ÀÀR T
ContextMenuAddKey
ÀÀU f
(
ÀÀf g
hit
ÀÀg j
,
ÀÀj k
false
ÀÀl q
)
ÀÀq r
)
ÀÀr s
;
ÀÀs t
menu
ÁÁ 
.
ÁÁ 
AddItem
ÁÁ  
(
ÁÁ  !
new
ÁÁ! $

GUIContent
ÁÁ% /
(
ÁÁ/ 0
$str
ÁÁ0 C
)
ÁÁC D
,
ÁÁD E
false
ÁÁF K
,
ÁÁK L
(
ÁÁM N
)
ÁÁN O
=>
ÁÁP R
ContextMenuAddKey
ÁÁS d
(
ÁÁd e
hit
ÁÁe h
,
ÁÁh i
true
ÁÁj n
)
ÁÁn o
)
ÁÁo p
;
ÁÁp q
menu
ÂÂ 
.
ÂÂ 
ShowAsContext
ÂÂ &
(
ÂÂ& '
)
ÂÂ' (
;
ÂÂ( )
}
ÃÃ 
e
ÅÅ 
.
ÅÅ 
Use
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
}
ÆÆ 
if
ÉÉ 
(
ÉÉ 
e
ÉÉ 
.
ÉÉ 
type
ÉÉ 
==
ÉÉ 
	EventType
ÉÉ #
.
ÉÉ# $
KeyDown
ÉÉ$ +
&&
ÉÉ, .
(
ÉÉ/ 0
e
ÉÉ0 1
.
ÉÉ1 2
keyCode
ÉÉ2 9
==
ÉÉ: <
KeyCode
ÉÉ= D
.
ÉÉD E
Delete
ÉÉE K
||
ÉÉL N
e
ÉÉO P
.
ÉÉP Q
keyCode
ÉÉQ X
==
ÉÉY [
KeyCode
ÉÉ\ c
.
ÉÉc d
	Backspace
ÉÉd m
)
ÉÉm n
)
ÉÉn o
{
ÊÊ 
if
ËË 
(
ËË %
m_SelectedKeyframeIndex
ËË +
!=
ËË, .
-
ËË/ 0
$num
ËË0 1
&&
ËË2 4
m_SelectedCurve
ËË5 D
!=
ËËE G
null
ËËH L
)
ËËL M
{
ÌÌ 
var
ÍÍ 
	animCurve
ÍÍ !
=
ÍÍ" #
m_SelectedCurve
ÍÍ$ 3
.
ÍÍ3 4!
animationCurveValue
ÍÍ4 G
;
ÍÍG H
var
ÎÎ 
length
ÎÎ 
=
ÎÎ  
	animCurve
ÎÎ! *
.
ÎÎ* +
length
ÎÎ+ 1
;
ÎÎ1 2
if
ÐÐ 
(
ÐÐ 
m_Curves
ÐÐ  
[
ÐÐ  !
m_SelectedCurve
ÐÐ! 0
]
ÐÐ0 1
.
ÐÐ1 2
minPointCount
ÐÐ2 ?
<
ÐÐ@ A
length
ÐÐB H
&&
ÐÐI K
length
ÐÐL R
>=
ÐÐS U
$num
ÐÐV W
)
ÐÐW X
{
ÑÑ  
EditDeleteKeyframe
ÒÒ *
(
ÒÒ* +
	animCurve
ÒÒ+ 4
,
ÒÒ4 5%
m_SelectedKeyframeIndex
ÒÒ6 M
)
ÒÒM N
;
ÒÒN O%
m_SelectedKeyframeIndex
ÓÓ /
=
ÓÓ0 1
-
ÓÓ2 3
$num
ÓÓ3 4
;
ÓÓ4 5
	SaveCurve
ÔÔ !
(
ÔÔ! "
m_SelectedCurve
ÔÔ" 1
,
ÔÔ1 2
	animCurve
ÔÔ3 <
)
ÔÔ< =
;
ÔÔ= >
}
ÕÕ 
e
×× 
.
×× 
Use
×× 
(
×× 
)
×× 
;
×× 
}
ØØ 
}
ÙÙ 
}
ÚÚ 	
void
ÜÜ 
	SaveCurve
ÜÜ 
(
ÜÜ  
SerializedProperty
ÜÜ )
prop
ÜÜ* .
,
ÜÜ. /
AnimationCurve
ÜÜ0 >
curve
ÜÜ? D
)
ÜÜD E
{
ÝÝ 	
prop
ÞÞ 
.
ÞÞ !
animationCurveValue
ÞÞ $
=
ÞÞ% &
curve
ÞÞ' ,
;
ÞÞ, -
}
ßß 	
void
áá 

Invalidate
áá 
(
áá 
)
áá 
{
ââ 	
m_Dirty
ãã 
=
ãã 
true
ãã 
;
ãã 
}
ää 	
void
êê 
SelectKeyframe
êê 
(
êê  
SerializedProperty
êê .
curve
êê/ 4
,
êê4 5
int
êê6 9
keyframeIndex
êê: G
)
êêG H
{
ëë 	%
m_SelectedKeyframeIndex
ìì #
=
ìì$ %
keyframeIndex
ìì& 3
;
ìì3 4
m_SelectedCurve
íí 
=
íí 
curve
íí #
;
íí# $

Invalidate
îî 
(
îî 
)
îî 
;
îî 
}
ïï 	
void
ññ 
ContextMenuAddKey
ññ 
(
ññ 
Vector3
ññ &
hit
ññ' *
,
ññ* +
bool
ññ, 0
createOnCurve
ññ1 >
)
ññ> ?
{
òò 	
SerializedObject
óó 
serializedObject
óó -
=
óó. /
null
óó0 4
;
óó4 5
foreach
õõ 
(
õõ 
var
õõ 
curve
õõ 
in
õõ !
m_Curves
õõ" *
)
õõ* +
{
öö 
if
÷÷ 
(
÷÷ 
!
÷÷ 
curve
÷÷ 
.
÷÷ 
Value
÷÷  
.
÷÷  !
editable
÷÷! )
||
÷÷* ,
!
÷÷- .
curve
÷÷. 3
.
÷÷3 4
Value
÷÷4 9
.
÷÷9 :
visible
÷÷: A
)
÷÷A B
continue
øø 
;
øø 
var
úú 
prop
úú 
=
úú 
curve
úú  
.
úú  !
Key
úú! $
;
úú$ %
var
ûû 
state
ûû 
=
ûû 
curve
ûû !
.
ûû! "
Value
ûû" '
;
ûû' (
if
ýý 
(
ýý 
serializedObject
ýý $
==
ýý% '
null
ýý( ,
)
ýý, -
{
þþ 
serializedObject
ÿÿ $
=
ÿÿ% &
prop
ÿÿ' +
.
ÿÿ+ ,
serializedObject
ÿÿ, <
;
ÿÿ< =
serializedObject
 $
.
$ %
Update
% +
(
+ ,
)
, -
;
- .
}
 
var
 
	animCurve
 
=
 
prop
  $
.
$ %!
animationCurveValue
% 8
;
8 9 
EditCreateKeyframe
 "
(
" #
	animCurve
# ,
,
, -
hit
. 1
,
1 2
createOnCurve
3 @
,
@ A
state
B G
.
G H"
zeroKeyConstantValue
H \
)
\ ]
;
] ^
	SaveCurve
 
(
 
prop
 
,
 
	animCurve
  )
)
) *
;
* +
}
 
if
 
(
 
serializedObject
  
!=
! #
null
$ (
)
( )
serializedObject
  
.
  !%
ApplyModifiedProperties
! 8
(
8 9
)
9 :
;
: ;

Invalidate
 
(
 
)
 
;
 
}
 	
void
  
EditCreateKeyframe
 
(
  
AnimationCurve
  .
curve
/ 4
,
4 5
Vector3
6 =
position
> F
,
F G
bool
H L
createOnCurve
M Z
,
Z [
float
\ a"
zeroKeyConstantValue
b v
)
v w
{
 	
float
 
tangent
 
=
 
EvaluateTangent
 +
(
+ ,
curve
, 1
,
1 2
position
3 ;
.
; <
x
< =
)
= >
;
> ?
if
 
(
 
createOnCurve
 
)
 
{
 
position
 
.
 
y
 
=
 
curve
 "
.
" #
length
# )
==
* ,
$num
- .
?
 "
zeroKeyConstantValue
 *
:
 
curve
 
.
 
Evaluate
 $
(
$ %
position
% -
.
- .
x
. /
)
/ 0
;
0 1
}
 
AddKeyframe
 
(
 
curve
 
,
 
new
 "
Keyframe
# +
(
+ ,
position
, 4
.
4 5
x
5 6
,
6 7
position
8 @
.
@ A
y
A B
,
B C
tangent
D K
,
K L
tangent
M T
)
T U
)
U V
;
V W
}
 	
void
  
EditDeleteKeyframe
 
(
  
AnimationCurve
  .
curve
/ 4
,
4 5
int
6 9
keyframeIndex
: G
)
G H
{
 	
RemoveKeyframe
 
(
 
curve
  
,
  !
keyframeIndex
" /
)
/ 0
;
0 1
}
 	
void
¡¡ 
AddKeyframe
¡¡ 
(
¡¡ 
AnimationCurve
¡¡ '
curve
¡¡( -
,
¡¡- .
Keyframe
¡¡/ 7
newValue
¡¡8 @
)
¡¡@ A
{
¢¢ 	
curve
££ 
.
££ 
AddKey
££ 
(
££ 
newValue
££ !
)
££! "
;
££" #

Invalidate
¤¤ 
(
¤¤ 
)
¤¤ 
;
¤¤ 
}
¥¥ 	
void
§§ 
RemoveKeyframe
§§ 
(
§§ 
AnimationCurve
§§ *
curve
§§+ 0
,
§§0 1
int
§§2 5
keyframeIndex
§§6 C
)
§§C D
{
¨¨ 	
curve
©© 
.
©© 
	RemoveKey
©© 
(
©© 
keyframeIndex
©© )
)
©©) *
;
©©* +

Invalidate
ªª 
(
ªª 
)
ªª 
;
ªª 
}
«« 	
void
­­ 
SetKeyframe
­­ 
(
­­ 
AnimationCurve
­­ '
curve
­­( -
,
­­- .
int
­­/ 2
keyframeIndex
­­3 @
,
­­@ A
Keyframe
­­B J
newValue
­­K S
)
­­S T
{
®® 	
var
¯¯ 
keys
¯¯ 
=
¯¯ 
curve
¯¯ 
.
¯¯ 
keys
¯¯ !
;
¯¯! "
if
±± 
(
±± 
keyframeIndex
±± 
>
±± 
$num
±±  !
)
±±! "
newValue
²² 
.
²² 
time
²² 
=
²² 
Mathf
²²  %
.
²²% &
Max
²²& )
(
²²) *
keys
²²* .
[
²². /
keyframeIndex
²²/ <
-
²²= >
$num
²²? @
]
²²@ A
.
²²A B
time
²²B F
+
²²G H
settings
²²I Q
.
²²Q R%
keyTimeClampingDistance
²²R i
,
²²i j
newValue
²²k s
.
²²s t
time
²²t x
)
²²x y
;
²²y z
if
´´ 
(
´´ 
keyframeIndex
´´ 
<
´´ 
keys
´´  $
.
´´$ %
Length
´´% +
-
´´, -
$num
´´. /
)
´´/ 0
newValue
µµ 
.
µµ 
time
µµ 
=
µµ 
Mathf
µµ  %
.
µµ% &
Min
µµ& )
(
µµ) *
keys
µµ* .
[
µµ. /
keyframeIndex
µµ/ <
+
µµ= >
$num
µµ? @
]
µµ@ A
.
µµA B
time
µµB F
-
µµG H
settings
µµI Q
.
µµQ R%
keyTimeClampingDistance
µµR i
,
µµi j
newValue
µµk s
.
µµs t
time
µµt x
)
µµx y
;
µµy z
curve
·· 
.
·· 
MoveKey
·· 
(
·· 
keyframeIndex
·· '
,
··' (
newValue
··) 1
)
··1 2
;
··2 3

Invalidate
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
}
¹¹ 	
void
»» 
EditMoveKeyframe
»» 
(
»» 
AnimationCurve
»» ,
curve
»»- 2
,
»»2 3
Keyframe
»»4 <
[
»»< =
]
»»= >
keys
»»? C
,
»»C D
int
»»E H
keyframeIndex
»»I V
)
»»V W
{
¼¼ 	
var
½½ 
key
½½ 
=
½½ 
CanvasToCurve
½½ #
(
½½# $
Event
½½$ )
.
½½) *
current
½½* 1
.
½½1 2
mousePosition
½½2 ?
)
½½? @
;
½½@ A
float
¾¾ 
inTgt
¾¾ 
=
¾¾ 
keys
¾¾ 
[
¾¾ 
keyframeIndex
¾¾ ,
]
¾¾, -
.
¾¾- .
	inTangent
¾¾. 7
;
¾¾7 8
float
¿¿ 
outTgt
¿¿ 
=
¿¿ 
keys
¿¿ 
[
¿¿  
keyframeIndex
¿¿  -
]
¿¿- .
.
¿¿. /

outTangent
¿¿/ 9
;
¿¿9 :
SetKeyframe
ÀÀ 
(
ÀÀ 
curve
ÀÀ 
,
ÀÀ 
keyframeIndex
ÀÀ ,
,
ÀÀ, -
new
ÀÀ. 1
Keyframe
ÀÀ2 :
(
ÀÀ: ;
key
ÀÀ; >
.
ÀÀ> ?
x
ÀÀ? @
,
ÀÀ@ A
key
ÀÀB E
.
ÀÀE F
y
ÀÀF G
,
ÀÀG H
inTgt
ÀÀI N
,
ÀÀN O
outTgt
ÀÀP V
)
ÀÀV W
)
ÀÀW X
;
ÀÀX Y
}
ÁÁ 	
void
ÃÃ 
EditMoveTangent
ÃÃ 
(
ÃÃ 
AnimationCurve
ÃÃ +
curve
ÃÃ, 1
,
ÃÃ1 2
Keyframe
ÃÃ3 ;
[
ÃÃ; <
]
ÃÃ< =
keys
ÃÃ> B
,
ÃÃB C
int
ÃÃD G
keyframeIndex
ÃÃH U
,
ÃÃU V
Tangent
ÃÃW ^
targetTangent
ÃÃ_ l
,
ÃÃl m
bool
ÃÃn r
linkTangents
ÃÃs 
)ÃÃ 
{
ÄÄ 	
var
ÅÅ 
pos
ÅÅ 
=
ÅÅ 
CanvasToCurve
ÅÅ #
(
ÅÅ# $
Event
ÅÅ$ )
.
ÅÅ) *
current
ÅÅ* 1
.
ÅÅ1 2
mousePosition
ÅÅ2 ?
)
ÅÅ? @
;
ÅÅ@ A
float
ÇÇ 
time
ÇÇ 
=
ÇÇ 
keys
ÇÇ 
[
ÇÇ 
keyframeIndex
ÇÇ +
]
ÇÇ+ ,
.
ÇÇ, -
time
ÇÇ- 1
;
ÇÇ1 2
float
ÈÈ 
value
ÈÈ 
=
ÈÈ 
keys
ÈÈ 
[
ÈÈ 
keyframeIndex
ÈÈ ,
]
ÈÈ, -
.
ÈÈ- .
value
ÈÈ. 3
;
ÈÈ3 4
pos
ÊÊ 
-=
ÊÊ 
new
ÊÊ 
Vector3
ÊÊ 
(
ÊÊ 
time
ÊÊ #
,
ÊÊ# $
value
ÊÊ% *
)
ÊÊ* +
;
ÊÊ+ ,
if
ÌÌ 
(
ÌÌ 
targetTangent
ÌÌ 
==
ÌÌ  
Tangent
ÌÌ! (
.
ÌÌ( )
In
ÌÌ) +
&&
ÌÌ, .
pos
ÌÌ/ 2
.
ÌÌ2 3
x
ÌÌ3 4
>
ÌÌ5 6
$num
ÌÌ7 9
)
ÌÌ9 :
pos
ÍÍ 
.
ÍÍ 
x
ÍÍ 
=
ÍÍ 
$num
ÍÍ 
;
ÍÍ 
if
ÏÏ 
(
ÏÏ 
targetTangent
ÏÏ 
==
ÏÏ  
Tangent
ÏÏ! (
.
ÏÏ( )
Out
ÏÏ) ,
&&
ÏÏ- /
pos
ÏÏ0 3
.
ÏÏ3 4
x
ÏÏ4 5
<
ÏÏ6 7
$num
ÏÏ8 :
)
ÏÏ: ;
pos
ÐÐ 
.
ÐÐ 
x
ÐÐ 
=
ÐÐ 
$num
ÐÐ 
;
ÐÐ 
float
ÒÒ 
tangent
ÒÒ 
;
ÒÒ 
if
ÔÔ 
(
ÔÔ 
Mathf
ÔÔ 
.
ÔÔ 
Approximately
ÔÔ #
(
ÔÔ# $
pos
ÔÔ$ '
.
ÔÔ' (
x
ÔÔ( )
,
ÔÔ) *
$num
ÔÔ+ -
)
ÔÔ- .
)
ÔÔ. /
tangent
ÕÕ 
=
ÕÕ 
pos
ÕÕ 
.
ÕÕ 
y
ÕÕ 
<
ÕÕ  !
$num
ÕÕ" $
?
ÕÕ% &
float
ÕÕ' ,
.
ÕÕ, -
PositiveInfinity
ÕÕ- =
:
ÕÕ> ?
float
ÕÕ@ E
.
ÕÕE F
NegativeInfinity
ÕÕF V
;
ÕÕV W
else
ÖÖ 
tangent
×× 
=
×× 
pos
×× 
.
×× 
y
×× 
/
××  !
pos
××" %
.
××% &
x
××& '
;
××' (
float
ÙÙ 
	inTangent
ÙÙ 
=
ÙÙ 
keys
ÙÙ "
[
ÙÙ" #
keyframeIndex
ÙÙ# 0
]
ÙÙ0 1
.
ÙÙ1 2
	inTangent
ÙÙ2 ;
;
ÙÙ; <
float
ÚÚ 

outTangent
ÚÚ 
=
ÚÚ 
keys
ÚÚ #
[
ÚÚ# $
keyframeIndex
ÚÚ$ 1
]
ÚÚ1 2
.
ÚÚ2 3

outTangent
ÚÚ3 =
;
ÚÚ= >
if
ÜÜ 
(
ÜÜ 
targetTangent
ÜÜ 
==
ÜÜ  
Tangent
ÜÜ! (
.
ÜÜ( )
In
ÜÜ) +
||
ÜÜ, .
linkTangents
ÜÜ/ ;
)
ÜÜ; <
	inTangent
ÝÝ 
=
ÝÝ 
tangent
ÝÝ #
;
ÝÝ# $
if
ÞÞ 
(
ÞÞ 
targetTangent
ÞÞ 
==
ÞÞ  
Tangent
ÞÞ! (
.
ÞÞ( )
Out
ÞÞ) ,
||
ÞÞ- /
linkTangents
ÞÞ0 <
)
ÞÞ< =

outTangent
ßß 
=
ßß 
tangent
ßß $
;
ßß$ %
SetKeyframe
áá 
(
áá 
curve
áá 
,
áá 
keyframeIndex
áá ,
,
áá, -
new
áá. 1
Keyframe
áá2 :
(
áá: ;
time
áá; ?
,
áá? @
value
ááA F
,
ááF G
	inTangent
ááH Q
,
ááQ R

outTangent
ááS ]
)
áá] ^
)
áá^ _
;
áá_ `
}
ââ 	
Vector3
èè 
CurveToCanvas
èè 
(
èè 
Keyframe
èè &
keyframe
èè' /
)
èè/ 0
{
éé 	
return
êê 
CurveToCanvas
êê  
(
êê  !
new
êê! $
Vector3
êê% ,
(
êê, -
keyframe
êê- 5
.
êê5 6
time
êê6 :
,
êê: ;
keyframe
êê< D
.
êêD E
value
êêE J
)
êêJ K
)
êêK L
;
êêL M
}
ëë 	
Vector3
íí 
CurveToCanvas
íí 
(
íí 
Vector3
íí %
position
íí& .
)
íí. /
{
îî 	
var
ïï 
bounds
ïï 
=
ïï 
settings
ïï !
.
ïï! "
bounds
ïï" (
;
ïï( )
var
ðð 
output
ðð 
=
ðð 
new
ðð 
Vector3
ðð $
(
ðð$ %
(
ðð% &
position
ðð& .
.
ðð. /
x
ðð/ 0
-
ðð1 2
bounds
ðð3 9
.
ðð9 :
x
ðð: ;
)
ðð; <
/
ðð= >
(
ðð? @
bounds
ðð@ F
.
ððF G
xMax
ððG K
-
ððL M
bounds
ððN T
.
ððT U
x
ððU V
)
ððV W
,
ððW X
(
ððY Z
position
ððZ b
.
ððb c
y
ððc d
-
ððe f
bounds
ððg m
.
ððm n
y
ððn o
)
ððo p
/
ððq r
(
ððs t
bounds
ððt z
.
ððz {
yMax
ðð{ 
-ðð 
boundsðð 
.ðð 
yðð 
)ðð 
)ðð 
;ðð 
output
ññ 
.
ññ 
x
ññ 
=
ññ 
output
ññ 
.
ññ 
x
ññ 
*
ññ  !
(
ññ" #
m_CurveArea
ññ# .
.
ññ. /
xMax
ññ/ 3
-
ññ4 5
m_CurveArea
ññ6 A
.
ññA B
xMin
ññB F
)
ññF G
+
ññH I
m_CurveArea
ññJ U
.
ññU V
xMin
ññV Z
;
ññZ [
output
òò 
.
òò 
y
òò 
=
òò 
(
òò 
$num
òò 
-
òò 
output
òò #
.
òò# $
y
òò$ %
)
òò% &
*
òò' (
(
òò) *
m_CurveArea
òò* 5
.
òò5 6
yMax
òò6 :
-
òò; <
m_CurveArea
òò= H
.
òòH I
yMin
òòI M
)
òòM N
+
òòO P
m_CurveArea
òòQ \
.
òò\ ]
yMin
òò] a
;
òòa b
return
óó 
output
óó 
;
óó 
}
ôô 	
Vector3
öö 
CanvasToCurve
öö 
(
öö 
Vector3
öö %
position
öö& .
)
öö. /
{
÷÷ 	
var
øø 
bounds
øø 
=
øø 
settings
øø !
.
øø! "
bounds
øø" (
;
øø( )
var
ùù 
output
ùù 
=
ùù 
position
ùù !
;
ùù! "
output
úú 
.
úú 
x
úú 
=
úú 
(
úú 
output
úú 
.
úú 
x
úú  
-
úú! "
m_CurveArea
úú# .
.
úú. /
xMin
úú/ 3
)
úú3 4
/
úú5 6
(
úú7 8
m_CurveArea
úú8 C
.
úúC D
xMax
úúD H
-
úúI J
m_CurveArea
úúK V
.
úúV W
xMin
úúW [
)
úú[ \
;
úú\ ]
output
ûû 
.
ûû 
y
ûû 
=
ûû 
(
ûû 
output
ûû 
.
ûû 
y
ûû  
-
ûû! "
m_CurveArea
ûû# .
.
ûû. /
yMin
ûû/ 3
)
ûû3 4
/
ûû5 6
(
ûû7 8
m_CurveArea
ûû8 C
.
ûûC D
yMax
ûûD H
-
ûûI J
m_CurveArea
ûûK V
.
ûûV W
yMin
ûûW [
)
ûû[ \
;
ûû\ ]
output
üü 
.
üü 
x
üü 
=
üü 
Mathf
üü 
.
üü 
Lerp
üü !
(
üü! "
bounds
üü" (
.
üü( )
x
üü) *
,
üü* +
bounds
üü, 2
.
üü2 3
xMax
üü3 7
,
üü7 8
output
üü9 ?
.
üü? @
x
üü@ A
)
üüA B
;
üüB C
output
ýý 
.
ýý 
y
ýý 
=
ýý 
Mathf
ýý 
.
ýý 
Lerp
ýý !
(
ýý! "
bounds
ýý" (
.
ýý( )
yMax
ýý) -
,
ýý- .
bounds
ýý/ 5
.
ýý5 6
y
ýý6 7
,
ýý7 8
output
ýý9 ?
.
ýý? @
y
ýý@ A
)
ýýA B
;
ýýB C
return
þþ 
output
þþ 
;
þþ 
}
ÿÿ 	
Vector3
 "
CurveTangentToCanvas
 $
(
$ %
float
% *
tangent
+ 2
)
2 3
{
 	
if
 
(
 
!
 
float
 
.
 

IsInfinity
 !
(
! "
tangent
" )
)
) *
)
* +
{
 
var
 
bounds
 
=
 
settings
 %
.
% &
bounds
& ,
;
, -
float
 
ratio
 
=
 
(
 
m_CurveArea
 *
.
* +
width
+ 0
/
1 2
m_CurveArea
3 >
.
> ?
height
? E
)
E F
/
G H
(
I J
(
J K
bounds
K Q
.
Q R
xMax
R V
-
W X
bounds
Y _
.
_ `
x
` a
)
a b
/
c d
(
e f
bounds
f l
.
l m
yMax
m q
-
r s
bounds
t z
.
z {
y
{ |
)
| }
)
} ~
;
~ 
return
 
new
 
Vector3
 "
(
" #
$num
# %
,
% &
-
' (
tangent
( /
/
0 1
ratio
2 7
)
7 8
.
8 9

normalized
9 C
;
C D
}
 
return
 
float
 
.
  
IsPositiveInfinity
 +
(
+ ,
tangent
, 3
)
3 4
?
5 6
Vector3
7 >
.
> ?
up
? A
:
B C
Vector3
D K
.
K L
down
L P
;
P Q
}
 	
Vector3
 
[
 
]
 
BezierSegment
 
(
  
Keyframe
  (
start
) .
,
. /
Keyframe
0 8
end
9 <
)
< =
{
 	
var
 
segment
 
=
 
new
 
Vector3
 %
[
% &
$num
& '
]
' (
;
( )
segment
 
[
 
$num
 
]
 
=
 
CurveToCanvas
 &
(
& '
new
' *
Vector3
+ 2
(
2 3
start
3 8
.
8 9
time
9 =
,
= >
start
? D
.
D E
value
E J
)
J K
)
K L
;
L M
segment
 
[
 
$num
 
]
 
=
 
CurveToCanvas
 &
(
& '
new
' *
Vector3
+ 2
(
2 3
end
3 6
.
6 7
time
7 ;
,
; <
end
= @
.
@ A
value
A F
)
F G
)
G H
;
H I
float
 
middle
 
=
 
start
 !
.
! "
time
" &
+
' (
(
) *
(
* +
end
+ .
.
. /
time
/ 3
-
4 5
start
6 ;
.
; <
time
< @
)
@ A
*
B C
$num
D M
)
M N
;
N O
float
 
middle2
 
=
 
start
 !
.
! "
time
" &
+
' (
(
) *
(
* +
end
+ .
.
. /
time
/ 3
-
4 5
start
6 ;
.
; <
time
< @
)
@ A
*
B C
$num
D M
)
M N
;
N O
segment
 
[
 
$num
 
]
 
=
 
CurveToCanvas
 &
(
& '
new
' *
Vector3
+ 2
(
2 3
middle
3 9
,
9 :
ProjectTangent
; I
(
I J
start
J O
.
O P
time
P T
,
T U
start
V [
.
[ \
value
\ a
,
a b
start
c h
.
h i

outTangent
i s
,
s t
middle
u {
)
{ |
)
| }
)
} ~
;
~ 
segment
 
[
 
$num
 
]
 
=
 
CurveToCanvas
 &
(
& '
new
' *
Vector3
+ 2
(
2 3
middle2
3 :
,
: ;
ProjectTangent
< J
(
J K
end
K N
.
N O
time
O S
,
S T
end
U X
.
X Y
value
Y ^
,
^ _
end
` c
.
c d
	inTangent
d m
,
m n
middle2
o v
)
v w
)
w x
)
x y
;
y z
return
 
segment
 
;
 
}
 	
Vector3
 
[
 
]
 
HardSegment
 
(
 
Keyframe
 &
start
' ,
,
, -
Keyframe
. 6
end
7 :
)
: ;
{
 	
var
 
segment
 
=
 
new
 
Vector3
 %
[
% &
$num
& '
]
' (
;
( )
segment
¡¡ 
[
¡¡ 
$num
¡¡ 
]
¡¡ 
=
¡¡ 
CurveToCanvas
¡¡ &
(
¡¡& '
start
¡¡' ,
)
¡¡, -
;
¡¡- .
segment
¢¢ 
[
¢¢ 
$num
¢¢ 
]
¢¢ 
=
¢¢ 
CurveToCanvas
¢¢ &
(
¢¢& '
new
¢¢' *
Vector3
¢¢+ 2
(
¢¢2 3
end
¢¢3 6
.
¢¢6 7
time
¢¢7 ;
,
¢¢; <
start
¢¢= B
.
¢¢B C
value
¢¢C H
)
¢¢H I
)
¢¢I J
;
¢¢J K
segment
££ 
[
££ 
$num
££ 
]
££ 
=
££ 
CurveToCanvas
££ &
(
££& '
end
££' *
)
££* +
;
££+ ,
return
¥¥ 
segment
¥¥ 
;
¥¥ 
}
¦¦ 	
float
¨¨ 
ProjectTangent
¨¨ 
(
¨¨ 
float
¨¨ "

inPosition
¨¨# -
,
¨¨- .
float
¨¨/ 4
inValue
¨¨5 <
,
¨¨< =
float
¨¨> C
	inTangent
¨¨D M
,
¨¨M N
float
¨¨O T
projPosition
¨¨U a
)
¨¨a b
{
©© 	
return
ªª 
inValue
ªª 
+
ªª 
(
ªª 
(
ªª 
projPosition
ªª +
-
ªª, -

inPosition
ªª. 8
)
ªª8 9
*
ªª: ;
	inTangent
ªª< E
)
ªªE F
;
ªªF G
}
«« 	
float
­­ 
EvaluateTangent
­­ 
(
­­ 
AnimationCurve
­­ ,
curve
­­- 2
,
­­2 3
float
­­4 9
time
­­: >
)
­­> ?
{
®® 	
int
¯¯ 
prev
¯¯ 
=
¯¯ 
-
¯¯ 
$num
¯¯ 
,
¯¯ 
next
¯¯ 
=
¯¯  !
$num
¯¯" #
;
¯¯# $
for
°° 
(
°° 
int
°° 
i
°° 
=
°° 
$num
°° 
;
°° 
i
°° 
<
°° 
curve
°°  %
.
°°% &
keys
°°& *
.
°°* +
Length
°°+ 1
;
°°1 2
i
°°3 4
++
°°4 6
)
°°6 7
{
±± 
if
²² 
(
²² 
time
²² 
>
²² 
curve
²²  
.
²²  !
keys
²²! %
[
²²% &
i
²²& '
]
²²' (
.
²²( )
time
²²) -
)
²²- .
{
³³ 
prev
´´ 
=
´´ 
i
´´ 
;
´´ 
next
µµ 
=
µµ 
i
µµ 
+
µµ 
$num
µµ  
;
µµ  !
}
¶¶ 
else
·· 
break
·· 
;
·· 
}
¸¸ 
if
ºº 
(
ºº 
next
ºº 
==
ºº 
$num
ºº 
)
ºº 
return
»» 
$num
»» 
;
»» 
if
½½ 
(
½½ 
prev
½½ 
==
½½ 
curve
½½ 
.
½½ 
keys
½½ "
.
½½" #
Length
½½# )
-
½½* +
$num
½½, -
)
½½- .
return
¾¾ 
$num
¾¾ 
;
¾¾ 
const
ÀÀ 
float
ÀÀ 
kD
ÀÀ 
=
ÀÀ 
$num
ÀÀ "
;
ÀÀ" #
float
ÁÁ 
tp
ÁÁ 
=
ÁÁ 
Mathf
ÁÁ 
.
ÁÁ 
Max
ÁÁ  
(
ÁÁ  !
time
ÁÁ! %
-
ÁÁ& '
kD
ÁÁ( *
,
ÁÁ* +
curve
ÁÁ, 1
.
ÁÁ1 2
keys
ÁÁ2 6
[
ÁÁ6 7
prev
ÁÁ7 ;
]
ÁÁ; <
.
ÁÁ< =
time
ÁÁ= A
)
ÁÁA B
;
ÁÁB C
float
ÂÂ 
tn
ÂÂ 
=
ÂÂ 
Mathf
ÂÂ 
.
ÂÂ 
Min
ÂÂ  
(
ÂÂ  !
time
ÂÂ! %
+
ÂÂ& '
kD
ÂÂ( *
,
ÂÂ* +
curve
ÂÂ, 1
.
ÂÂ1 2
keys
ÂÂ2 6
[
ÂÂ6 7
next
ÂÂ7 ;
]
ÂÂ; <
.
ÂÂ< =
time
ÂÂ= A
)
ÂÂA B
;
ÂÂB C
float
ÄÄ 
vp
ÄÄ 
=
ÄÄ 
curve
ÄÄ 
.
ÄÄ 
Evaluate
ÄÄ %
(
ÄÄ% &
tp
ÄÄ& (
)
ÄÄ( )
;
ÄÄ) *
float
ÅÅ 
vn
ÅÅ 
=
ÅÅ 
curve
ÅÅ 
.
ÅÅ 
Evaluate
ÅÅ %
(
ÅÅ% &
tn
ÅÅ& (
)
ÅÅ( )
;
ÅÅ) *
if
ÇÇ 
(
ÇÇ 
Mathf
ÇÇ 
.
ÇÇ 
Approximately
ÇÇ #
(
ÇÇ# $
tn
ÇÇ$ &
,
ÇÇ& '
tp
ÇÇ( *
)
ÇÇ* +
)
ÇÇ+ ,
return
ÈÈ 
(
ÈÈ 
vn
ÈÈ 
-
ÈÈ 
vp
ÈÈ 
>
ÈÈ  !
$num
ÈÈ" $
)
ÈÈ$ %
?
ÈÈ& '
float
ÈÈ( -
.
ÈÈ- .
PositiveInfinity
ÈÈ. >
:
ÈÈ? @
float
ÈÈA F
.
ÈÈF G
NegativeInfinity
ÈÈG W
;
ÈÈW X
return
ÊÊ 
(
ÊÊ 
vn
ÊÊ 
-
ÊÊ 
vp
ÊÊ 
)
ÊÊ 
/
ÊÊ 
(
ÊÊ  
tn
ÊÊ  "
-
ÊÊ# $
tp
ÊÊ% '
)
ÊÊ' (
;
ÊÊ( )
}
ËË 	
}
ÎÎ 
}ÏÏ Ã½
¸D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Utils\EditorGUIHelper.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{		 
public

 

static

 
class

 
EditorGUIHelper

 '
{ 
static 
EditorGUIHelper 
( 
)  
{ 	
s_GUIContentCache 
= 
new  #

Dictionary$ .
<. /
string/ 5
,5 6

GUIContent7 A
>A B
(B C
)C D
;D E
} 	
static 

Dictionary 
< 
string  
,  !

GUIContent" ,
>, -
s_GUIContentCache. ?
;? @
public 
static 

GUIContent  

GetContent! +
(+ ,
string, 2
textAndTooltip3 A
)A B
{ 	
if 
( 
string 
. 
IsNullOrEmpty $
($ %
textAndTooltip% 3
)3 4
)4 5
return 

GUIContent !
.! "
none" &
;& '

GUIContent 
content 
; 
if 
( 
! 
s_GUIContentCache "
." #
TryGetValue# .
(. /
textAndTooltip/ =
,= >
out? B
contentC J
)J K
)K L
{ 
var 
s 
= 
textAndTooltip &
.& '
Split' ,
(, -
$char- 0
)0 1
;1 2
content 
= 
new 

GUIContent (
(( )
s) *
[* +
$num+ ,
], -
)- .
;. /
if!! 
(!! 
s!! 
.!! 
Length!! 
>!! 
$num!!  
&&!!! #
!!!$ %
string!!% +
.!!+ ,
IsNullOrEmpty!!, 9
(!!9 :
s!!: ;
[!!; <
$num!!< =
]!!= >
)!!> ?
)!!? @
content"" 
."" 
tooltip"" #
=""$ %
s""& '
[""' (
$num""( )
]"") *
;""* +
s_GUIContentCache$$ !
.$$! "
Add$$" %
($$% &
textAndTooltip$$& 4
,$$4 5
content$$6 =
)$$= >
;$$> ?
}%% 
return'' 
content'' 
;'' 
}(( 	
public,, 
static,, 
bool,, 
Header,, !
(,,! "
string,," (
title,,) .
,,,. /
SerializedProperty,,0 B
group,,C H
,,,H I
Action,,J P
resetAction,,Q \
),,\ ]
{-- 	
var.. 
rect.. 
=.. 
GUILayoutUtility.. '
...' (
GetRect..( /
(../ 0
$num..0 3
,..3 4
$num..5 8
,..8 9
FxStyles..: B
...B C
header..C I
)..I J
;..J K
GUI// 
.// 
Box// 
(// 
rect// 
,// 
title// 
,//  
FxStyles//! )
.//) *
header//* 0
)//0 1
;//1 2
var11 
display11 
=11 
group11 
==11  "
null11# '
||11( *
group11+ 0
.110 1

isExpanded111 ;
;11; <
var33 
foldoutRect33 
=33 
new33 !
Rect33" &
(33& '
rect33' +
.33+ ,
x33, -
+33. /
$num330 2
,332 3
rect334 8
.338 9
y339 :
+33; <
$num33= ?
,33? @
$num33A D
,33D E
$num33F I
)33I J
;33J K
var44 
e44 
=44 
Event44 
.44 
current44 !
;44! "
var66 
	popupRect66 
=66 
new66 
Rect66  $
(66$ %
rect66% )
.66) *
x66* +
+66, -
rect66. 2
.662 3
width663 8
-669 :
FxStyles66; C
.66C D
paneOptionsIcon66D S
.66S T
width66T Y
-66Z [
$num66\ ^
,66^ _
rect66` d
.66d e
y66e f
+66g h
FxStyles66i q
.66q r
paneOptionsIcon	66r 
.
66 
height
66 
/
66 
$num
66 
+
66 
$num
66 
,
66 
FxStyles
66 
.
66 
paneOptionsIcon
66 ¬
.
66¬ ­
width
66­ ²
,
66² ³
FxStyles
66´ ¼
.
66¼ ½
paneOptionsIcon
66½ Ì
.
66Ì Í
height
66Í Ó
)
66Ó Ô
;
66Ô Õ
GUI77 
.77 
DrawTexture77 
(77 
	popupRect77 %
,77% &
FxStyles77' /
.77/ 0
paneOptionsIcon770 ?
)77? @
;77@ A
if99 
(99 
e99 
.99 
type99 
==99 
	EventType99 #
.99# $
Repaint99$ +
)99+ ,
FxStyles:: 
.:: 
headerFoldout:: &
.::& '
Draw::' +
(::+ ,
foldoutRect::, 7
,::7 8
false::9 >
,::> ?
false::@ E
,::E F
display::G N
,::N O
false::P U
)::U V
;::V W
if<< 
(<< 
e<< 
.<< 
type<< 
==<< 
	EventType<< #
.<<# $
	MouseDown<<$ -
)<<- .
{== 
if>> 
(>> 
	popupRect>> 
.>> 
Contains>> &
(>>& '
e>>' (
.>>( )
mousePosition>>) 6
)>>6 7
)>>7 8
{?? 
var@@ 
popup@@ 
=@@ 
new@@  #
GenericMenu@@$ /
(@@/ 0
)@@0 1
;@@1 2
popupAA 
.AA 
AddItemAA !
(AA! "

GetContentAA" ,
(AA, -
$strAA- 4
)AA4 5
,AA5 6
falseAA7 <
,AA< =
(AA> ?
)AA? @
=>AAA C
resetActionAAD O
(AAO P
)AAP Q
)AAQ R
;AAR S
popupBB 
.BB 
AddSeparatorBB &
(BB& '
stringBB' -
.BB- .
EmptyBB. 3
)BB3 4
;BB4 5
popupCC 
.CC 
AddItemCC !
(CC! "

GetContentCC" ,
(CC, -
$strCC- <
)CC< =
,CC= >
falseCC? D
,CCD E
(CCF G
)CCG H
=>CCI K
CopySettingsCCL X
(CCX Y
groupCCY ^
)CC^ _
)CC_ `
;CC` a
ifEE 
(EE 
CanPasteEE  
(EE  !
groupEE! &
)EE& '
)EE' (
popupFF 
.FF 
AddItemFF %
(FF% &

GetContentFF& 0
(FF0 1
$strFF1 A
)FFA B
,FFB C
falseFFD I
,FFI J
(FFK L
)FFL M
=>FFN P
PasteSettingsFFQ ^
(FF^ _
groupFF_ d
)FFd e
)FFe f
;FFf g
elseGG 
popupHH 
.HH 
AddDisabledItemHH -
(HH- .

GetContentHH. 8
(HH8 9
$strHH9 I
)HHI J
)HHJ K
;HHK L
popupJJ 
.JJ 
ShowAsContextJJ '
(JJ' (
)JJ( )
;JJ) *
}KK 
elseLL 
ifLL 
(LL 
rectLL 
.LL 
ContainsLL &
(LL& '
eLL' (
.LL( )
mousePositionLL) 6
)LL6 7
&&LL8 :
groupLL; @
!=LLA C
nullLLD H
)LLH I
{MM 
displayNN 
=NN 
!NN 
displayNN &
;NN& '
ifPP 
(PP 
groupPP 
!=PP  
nullPP! %
)PP% &
groupQQ 
.QQ 

isExpandedQQ (
=QQ) *
!QQ+ ,
groupQQ, 1
.QQ1 2

isExpandedQQ2 <
;QQ< =
eSS 
.SS 
UseSS 
(SS 
)SS 
;SS 
}TT 
}UU 
returnWW 
displayWW 
;WW 
}XX 	
publicZZ 
staticZZ 
boolZZ 
HeaderZZ !
(ZZ! "
stringZZ" (
titleZZ) .
,ZZ. /
SerializedPropertyZZ0 B
groupZZC H
,ZZH I
SerializedPropertyZZJ \
enabledFieldZZ] i
,ZZi j
ActionZZk q
resetActionZZr }
)ZZ} ~
{[[ 	
var\\ 
field\\ 
=\\ 
ReflectionUtils\\ '
.\\' ( 
GetFieldInfoFromPath\\( <
(\\< =
enabledField\\= I
.\\I J
serializedObject\\J Z
.\\Z [
targetObject\\[ g
,\\g h
enabledField\\i u
.\\u v
propertyPath	\\v 
)
\\ 
;
\\ 
object]] 
parent]] 
=]] 
null]]  
;]]  !
PropertyInfo^^ 
prop^^ 
=^^ 
null^^  $
;^^$ %
if`` 
(`` 
field`` 
!=`` 
null`` 
&&``  
field``! &
.``& '
	IsDefined``' 0
(``0 1
typeof``1 7
(``7 8
GetSetAttribute``8 G
)``G H
,``H I
false``J O
)``O P
)``P Q
{aa 
varbb 
attrbb 
=bb 
(bb 
GetSetAttributebb +
)bb+ ,
fieldbb, 1
.bb1 2
GetCustomAttributesbb2 E
(bbE F
typeofbbF L
(bbL M
GetSetAttributebbM \
)bb\ ]
,bb] ^
falsebb_ d
)bbd e
[bbe f
$numbbf g
]bbg h
;bbh i
parentcc 
=cc 
ReflectionUtilscc (
.cc( )
GetParentObjectcc) 8
(cc8 9
enabledFieldcc9 E
.ccE F
propertyPathccF R
,ccR S
enabledFieldccT `
.cc` a
serializedObjectcca q
.ccq r
targetObjectccr ~
)cc~ 
;	cc 
propdd 
=dd 
parentdd 
.dd 
GetTypedd %
(dd% &
)dd& '
.dd' (
GetPropertydd( 3
(dd3 4
attrdd4 8
.dd8 9
namedd9 =
)dd= >
;dd> ?
}ee 
vargg 
displaygg 
=gg 
groupgg 
==gg  "
nullgg# '
||gg( *
groupgg+ 0
.gg0 1

isExpandedgg1 ;
;gg; <
varhh 
enabledhh 
=hh 
enabledFieldhh &
.hh& '
	boolValuehh' 0
;hh0 1
varjj 
rectjj 
=jj 
GUILayoutUtilityjj '
.jj' (
GetRectjj( /
(jj/ 0
$numjj0 3
,jj3 4
$numjj5 8
,jj8 9
FxStylesjj: B
.jjB C
headerjjC I
)jjI J
;jjJ K
GUIkk 
.kk 
Boxkk 
(kk 
rectkk 
,kk 
titlekk 
,kk  
FxStyleskk! )
.kk) *
headerkk* 0
)kk0 1
;kk1 2
varmm 

toggleRectmm 
=mm 
newmm  
Rectmm! %
(mm% &
rectmm& *
.mm* +
xmm+ ,
+mm- .
$nummm/ 1
,mm1 2
rectmm3 7
.mm7 8
ymm8 9
+mm: ;
$nummm< >
,mm> ?
$nummm@ C
,mmC D
$nummmE H
)mmH I
;mmI J
varnn 
enn 
=nn 
Eventnn 
.nn 
currentnn !
;nn! "
varpp 
	popupRectpp 
=pp 
newpp 
Rectpp  $
(pp$ %
rectpp% )
.pp) *
xpp* +
+pp, -
rectpp. 2
.pp2 3
widthpp3 8
-pp9 :
FxStylespp; C
.ppC D
paneOptionsIconppD S
.ppS T
widthppT Y
-ppZ [
$numpp\ ^
,pp^ _
rectpp` d
.ppd e
yppe f
+ppg h
FxStylesppi q
.ppq r
paneOptionsIcon	ppr 
.
pp 
height
pp 
/
pp 
$num
pp 
+
pp 
$num
pp 
,
pp 
FxStyles
pp 
.
pp 
paneOptionsIcon
pp ¬
.
pp¬ ­
width
pp­ ²
,
pp² ³
FxStyles
pp´ ¼
.
pp¼ ½
paneOptionsIcon
pp½ Ì
.
ppÌ Í
height
ppÍ Ó
)
ppÓ Ô
;
ppÔ Õ
GUIqq 
.qq 
DrawTextureqq 
(qq 
	popupRectqq %
,qq% &
FxStylesqq' /
.qq/ 0
paneOptionsIconqq0 ?
)qq? @
;qq@ A
ifss 
(ss 
ess 
.ss 
typess 
==ss 
	EventTypess #
.ss# $
Repaintss$ +
)ss+ ,
FxStylestt 
.tt 
headerCheckboxtt '
.tt' (
Drawtt( ,
(tt, -

toggleRecttt- 7
,tt7 8
falsett9 >
,tt> ?
falsett@ E
,ttE F
enabledttG N
,ttN O
falsettP U
)ttU V
;ttV W
ifvv 
(vv 
evv 
.vv 
typevv 
==vv 
	EventTypevv #
.vv# $
	MouseDownvv$ -
)vv- .
{ww 
constxx 
floatxx 
kOffsetxx #
=xx$ %
$numxx& (
;xx( )

toggleRectyy 
.yy 
xyy 
-=yy 
kOffsetyy  '
;yy' (

toggleRectzz 
.zz 
yzz 
-=zz 
kOffsetzz  '
;zz' (

toggleRect{{ 
.{{ 
width{{  
+={{! #
kOffset{{$ +
*{{, -
$num{{. 0
;{{0 1

toggleRect|| 
.|| 
height|| !
+=||" $
kOffset||% ,
*||- .
$num||/ 1
;||1 2
if~~ 
(~~ 

toggleRect~~ 
.~~ 
Contains~~ '
(~~' (
e~~( )
.~~) *
mousePosition~~* 7
)~~7 8
)~~8 9
{ 
enabledField
  
.
  !
	boolValue
! *
=
+ ,
!
- .
enabledField
. :
.
: ;
	boolValue
; D
;
D E
if
 
(
 
prop
 
!=
 
null
  $
)
$ %
prop
 
.
 
SetValue
 %
(
% &
parent
& ,
,
, -
enabledField
. :
.
: ;
	boolValue
; D
,
D E
null
F J
)
J K
;
K L
e
 
.
 
Use
 
(
 
)
 
;
 
}
 
else
 
if
 
(
 
	popupRect
 "
.
" #
Contains
# +
(
+ ,
e
, -
.
- .
mousePosition
. ;
)
; <
)
< =
{
 
var
 
popup
 
=
 
new
  #
GenericMenu
$ /
(
/ 0
)
0 1
;
1 2
popup
 
.
 
AddItem
 !
(
! "

GetContent
" ,
(
, -
$str
- 4
)
4 5
,
5 6
false
7 <
,
< =
(
> ?
)
? @
=>
A C
resetAction
D O
(
O P
)
P Q
)
Q R
;
R S
popup
 
.
 
AddSeparator
 &
(
& '
string
' -
.
- .
Empty
. 3
)
3 4
;
4 5
popup
 
.
 
AddItem
 !
(
! "

GetContent
" ,
(
, -
$str
- <
)
< =
,
= >
false
? D
,
D E
(
F G
)
G H
=>
I K
CopySettings
L X
(
X Y
group
Y ^
)
^ _
)
_ `
;
` a
if
 
(
 
CanPaste
  
(
  !
group
! &
)
& '
)
' (
popup
 
.
 
AddItem
 %
(
% &

GetContent
& 0
(
0 1
$str
1 A
)
A B
,
B C
false
D I
,
I J
(
K L
)
L M
=>
N P
PasteSettings
Q ^
(
^ _
group
_ d
)
d e
)
e f
;
f g
else
 
popup
 
.
 
AddDisabledItem
 -
(
- .

GetContent
. 8
(
8 9
$str
9 I
)
I J
)
J K
;
K L
popup
 
.
 
ShowAsContext
 '
(
' (
)
( )
;
) *
}
 
else
 
if
 
(
 
rect
 
.
 
Contains
 &
(
& '
e
' (
.
( )
mousePosition
) 6
)
6 7
&&
8 :
group
; @
!=
A C
null
D H
)
H I
{
 
display
 
=
 
!
 
display
 &
;
& '
group
 
.
 

isExpanded
 $
=
% &
!
' (
group
( -
.
- .

isExpanded
. 8
;
8 9
e
 
.
 
Use
 
(
 
)
 
;
 
}
 
}
 
return
 
display
 
;
 
}
 	
static
   
void
   
CopySettings
    
(
    ! 
SerializedProperty
  ! 3
settings
  4 <
)
  < =
{
¡¡ 	
var
¢¢ 
t
¢¢ 
=
¢¢ 
typeof
¢¢ 
(
¢¢ #
PostProcessingProfile
¢¢ 0
)
¢¢0 1
;
¢¢1 2
var
££ 
settingsStruct
££ 
=
££  
ReflectionUtils
££! 0
.
££0 1#
GetFieldValueFromPath
££1 F
(
££F G
settings
££G O
.
££O P
serializedObject
££P `
.
££` a
targetObject
££a m
,
££m n
ref
££o r
t
££s t
,
££t u
settings
££v ~
.
££~ 
propertyPath££ 
)££ 
;££ 
var
¤¤ 
serializedString
¤¤  
=
¤¤! "
t
¤¤# $
.
¤¤$ %
ToString
¤¤% -
(
¤¤- .
)
¤¤. /
+
¤¤0 1
$char
¤¤2 5
+
¤¤6 7
JsonUtility
¤¤8 C
.
¤¤C D
ToJson
¤¤D J
(
¤¤J K
settingsStruct
¤¤K Y
)
¤¤Y Z
;
¤¤Z [
EditorGUIUtility
¥¥ 
.
¥¥ 
systemCopyBuffer
¥¥ -
=
¥¥. /
serializedString
¥¥0 @
;
¥¥@ A
}
¦¦ 	
static
¨¨ 
bool
¨¨ 
CanPaste
¨¨ 
(
¨¨  
SerializedProperty
¨¨ /
settings
¨¨0 8
)
¨¨8 9
{
©© 	
var
ªª 
data
ªª 
=
ªª 
EditorGUIUtility
ªª '
.
ªª' (
systemCopyBuffer
ªª( 8
;
ªª8 9
if
¬¬ 
(
¬¬ 
string
¬¬ 
.
¬¬ 
IsNullOrEmpty
¬¬ $
(
¬¬$ %
data
¬¬% )
)
¬¬) *
)
¬¬* +
return
­­ 
false
­­ 
;
­­ 
var
¯¯ 
parts
¯¯ 
=
¯¯ 
data
¯¯ 
.
¯¯ 
Split
¯¯ "
(
¯¯" #
$char
¯¯# &
)
¯¯& '
;
¯¯' (
if
±± 
(
±± 
string
±± 
.
±± 
IsNullOrEmpty
±± $
(
±±$ %
parts
±±% *
[
±±* +
$num
±±+ ,
]
±±, -
)
±±- .
)
±±. /
return
²² 
false
²² 
;
²² 
var
´´ 
field
´´ 
=
´´ 
ReflectionUtils
´´ '
.
´´' ("
GetFieldInfoFromPath
´´( <
(
´´< =
settings
´´= E
.
´´E F
serializedObject
´´F V
.
´´V W
targetObject
´´W c
,
´´c d
settings
´´e m
.
´´m n
propertyPath
´´n z
)
´´z {
;
´´{ |
return
µµ 
parts
µµ 
[
µµ 
$num
µµ 
]
µµ 
==
µµ 
field
µµ $
.
µµ$ %
	FieldType
µµ% .
.
µµ. /
ToString
µµ/ 7
(
µµ7 8
)
µµ8 9
;
µµ9 :
}
¶¶ 	
static
¸¸ 
void
¸¸ 
PasteSettings
¸¸ !
(
¸¸! " 
SerializedProperty
¸¸" 4
settings
¸¸5 =
)
¸¸= >
{
¹¹ 	
Undo
ºº 
.
ºº 
RecordObject
ºº 
(
ºº 
settings
ºº &
.
ºº& '
serializedObject
ºº' 7
.
ºº7 8
targetObject
ºº8 D
,
ººD E
$str
ººF ]
)
ºº] ^
;
ºº^ _
var
»» 
field
»» 
=
»» 
ReflectionUtils
»» '
.
»»' ("
GetFieldInfoFromPath
»»( <
(
»»< =
settings
»»= E
.
»»E F
serializedObject
»»F V
.
»»V W
targetObject
»»W c
,
»»c d
settings
»»e m
.
»»m n
propertyPath
»»n z
)
»»z {
;
»»{ |
var
¼¼ 
json
¼¼ 
=
¼¼ 
EditorGUIUtility
¼¼ '
.
¼¼' (
systemCopyBuffer
¼¼( 8
.
¼¼8 9
	Substring
¼¼9 B
(
¼¼B C
field
¼¼C H
.
¼¼H I
	FieldType
¼¼I R
.
¼¼R S
ToString
¼¼S [
(
¼¼[ \
)
¼¼\ ]
.
¼¼] ^
Length
¼¼^ d
+
¼¼e f
$num
¼¼g h
)
¼¼h i
;
¼¼i j
var
½½ 
obj
½½ 
=
½½ 
JsonUtility
½½ !
.
½½! "
FromJson
½½" *
(
½½* +
json
½½+ /
,
½½/ 0
field
½½1 6
.
½½6 7
	FieldType
½½7 @
)
½½@ A
;
½½A B
var
¾¾ 
parent
¾¾ 
=
¾¾ 
ReflectionUtils
¾¾ (
.
¾¾( )
GetParentObject
¾¾) 8
(
¾¾8 9
settings
¾¾9 A
.
¾¾A B
propertyPath
¾¾B N
,
¾¾N O
settings
¾¾P X
.
¾¾X Y
serializedObject
¾¾Y i
.
¾¾i j
targetObject
¾¾j v
)
¾¾v w
;
¾¾w x
field
¿¿ 
.
¿¿ 
SetValue
¿¿ 
(
¿¿ 
parent
¿¿ !
,
¿¿! "
obj
¿¿# &
,
¿¿& '
BindingFlags
¿¿( 4
.
¿¿4 5
Public
¿¿5 ;
|
¿¿< =
BindingFlags
¿¿> J
.
¿¿J K
	NonPublic
¿¿K T
|
¿¿U V
BindingFlags
¿¿W c
.
¿¿c d
Instance
¿¿d l
,
¿¿l m
null
¿¿n r
,
¿¿r s
CultureInfo
¿¿t 
.¿¿ 
CurrentCulture¿¿ 
)¿¿ 
;¿¿ 
}
ÀÀ 	
}
ÁÁ 
}ÂÂ Ì
¸D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Utils\EditorResources.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
static 

class 
EditorResources  
{ 
static		 
string		 !
m_EditorResourcesPath		 +
=		, -
string		. 4
.		4 5
Empty		5 :
;		: ;
internal 
static 
string 
editorResourcesPath 2
{ 	
get 
{ 
if 
( 
string 
. 
IsNullOrEmpty (
(( )!
m_EditorResourcesPath) >
)> ?
)? @
{ 
string 
path 
;  
if 
( (
SearchForEditorResourcesPath 4
(4 5
out5 8
path9 =
)= >
)> ?!
m_EditorResourcesPath -
=. /
path0 4
;4 5
else 
Debug 
. 
LogError &
(& '
$str	' 
)
 
;
 
} 
return !
m_EditorResourcesPath ,
;, -
} 
} 	
internal 
static 
T 
Load 
< 
T  
>  !
(! "
string" (
name) -
)- .
where 
T 
: 
UnityObject !
{ 	
return   
AssetDatabase    
.    !
LoadAssetAtPath  ! 0
<  0 1
T  1 2
>  2 3
(  3 4
editorResourcesPath  4 G
+  H I
name  J N
)  N O
;  O P
}!! 	
static## 
bool## (
SearchForEditorResourcesPath## 0
(##0 1
out##1 4
string##5 ;
path##< @
)##@ A
{$$ 	
path%% 
=%% 
string%% 
.%% 
Empty%% 
;%%  
string'' 
	searchStr'' 
='' 
$str'' B
;''B C
string(( 
str(( 
=(( 
null(( 
;(( 
foreach** 
(** 
var** 
	assetPath** "
in**# %
AssetDatabase**& 3
.**3 4
GetAllAssetPaths**4 D
(**D E
)**E F
)**F G
{++ 
if,, 
(,, 
	assetPath,, 
.,, 
Contains,, &
(,,& '
	searchStr,,' 0
),,0 1
),,1 2
{-- 
str.. 
=.. 
	assetPath.. #
;..# $
break// 
;// 
}00 
}11 
if33 
(33 
str33 
==33 
null33 
)33 
return44 
false44 
;44 
path66 
=66 
str66 
.66 
	Substring66  
(66  !
$num66! "
,66" #
str66$ '
.66' (
LastIndexOf66( 3
(663 4
	searchStr664 =
)66= >
+66? @
	searchStr66A J
.66J K
Length66K Q
)66Q R
;66R S
return77 
true77 
;77 
}88 	
}99 
}:: J
±D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Utils\FxStyles.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
public 

static 
class 
FxStyles  
{ 
public 
static 
GUIStyle 
tickStyleRight -
;- .
public 
static 
GUIStyle 
tickStyleLeft ,
;, -
public		 
static		 
GUIStyle		 
tickStyleCenter		 .
;		. /
public 
static 
GUIStyle 
	preSlider (
;( )
public 
static 
GUIStyle 
preSliderThumb -
;- .
public 
static 
GUIStyle 
	preButton (
;( )
public 
static 
GUIStyle 
preDropdown *
;* +
public 
static 
GUIStyle 
preLabel '
;' (
public 
static 
GUIStyle 
hueCenterCursor .
;. /
public 
static 
GUIStyle 
hueRangeCursor -
;- .
public 
static 
GUIStyle 
centeredBoldLabel 0
;0 1
public 
static 
GUIStyle 

wheelThumb )
;) *
public 
static 
Vector2 
wheelThumbSize ,
;, -
public 
static 
GUIStyle 
header %
;% &
public 
static 
GUIStyle 
headerCheckbox -
;- .
public 
static 
GUIStyle 
headerFoldout ,
;, -
public 
static 
	Texture2D 
playIcon  (
;( )
public 
static 
	Texture2D 
checkerIcon  +
;+ ,
public 
static 
	Texture2D 
paneOptionsIcon  /
;/ 0
public   
static   
GUIStyle   
centeredMiniLabel   0
;  0 1
static"" 
FxStyles"" 
("" 
)"" 
{## 	
tickStyleRight$$ 
=$$ 
new$$  
GUIStyle$$! )
($$) *
$str$$* 1
)$$1 2
{%% 
	alignment&& 
=&& 

TextAnchor&& &
.&&& '
MiddleRight&&' 2
,&&2 3
fontSize'' 
='' 
$num'' 
}(( 
;(( 
tickStyleLeft** 
=** 
new** 
GUIStyle**  (
(**( )
$str**) 0
)**0 1
{++ 
	alignment,, 
=,, 

TextAnchor,, &
.,,& '

MiddleLeft,,' 1
,,,1 2
fontSize-- 
=-- 
$num-- 
}.. 
;.. 
tickStyleCenter00 
=00 
new00 !
GUIStyle00" *
(00* +
$str00+ 2
)002 3
{11 
	alignment22 
=22 

TextAnchor22 &
.22& '
MiddleCenter22' 3
,223 4
fontSize33 
=33 
$num33 
}44 
;44 
	preSlider66 
=66 
new66 
GUIStyle66 $
(66$ %
$str66% 0
)660 1
;661 2
preSliderThumb77 
=77 
new77  
GUIStyle77! )
(77) *
$str77* :
)77: ;
;77; <
	preButton88 
=88 
new88 
GUIStyle88 $
(88$ %
$str88% 0
)880 1
;881 2
preDropdown99 
=99 
new99 
GUIStyle99 &
(99& '
$str99' 4
)994 5
;995 6
preLabel;; 
=;; 
new;; 
GUIStyle;; #
(;;# $
$str;;$ 3
);;3 4
;;;4 5
hueCenterCursor== 
=== 
new== !
GUIStyle==" *
(==* +
$str==+ ?
)==? @
{>> 
normal?? 
=?? 
{?? 

background?? %
=??& '
(??( )
	Texture2D??) 2
)??2 3
EditorGUIUtility??3 C
.??C D
LoadRequired??D P
(??P Q
$str	??Q 
)
?? 
}
?? 
,
?? 

fixedWidth@@ 
=@@ 
$num@@ 
,@@ 
fixedHeightAA 
=AA 
$numAA 
}BB 
;BB 
hueRangeCursorDD 
=DD 
newDD  
GUIStyleDD! )
(DD) *
hueCenterCursorDD* 9
)DD9 :
{EE 
normalFF 
=FF 
{FF 

backgroundFF %
=FF& '
(FF( )
	Texture2DFF) 2
)FF2 3
EditorGUIUtilityFF3 C
.FFC D
LoadRequiredFFD P
(FFP Q
$str	FFQ 
)
FF 
}
FF 
}GG 
;GG 

wheelThumbII 
=II 
newII 
GUIStyleII %
(II% &
$strII& :
)II: ;
;II; <
centeredBoldLabelKK 
=KK 
newKK  #
GUIStyleKK$ ,
(KK, -
GUIKK- 0
.KK0 1
skinKK1 5
.KK5 6
GetStyleKK6 >
(KK> ?
$strKK? F
)KKF G
)KKG H
{LL 
	alignmentMM 
=MM 

TextAnchorMM &
.MM& '
UpperCenterMM' 2
,MM2 3
	fontStyleNN 
=NN 
	FontStyleNN %
.NN% &
BoldNN& *
}OO 
;OO 
centeredMiniLabelQQ 
=QQ 
newQQ  #
GUIStyleQQ$ ,
(QQ, -
EditorStylesQQ- 9
.QQ9 :!
centeredGreyMiniLabelQQ: O
)QQO P
{RR 
	alignmentSS 
=SS 

TextAnchorSS &
.SS& '
UpperCenterSS' 2
}TT 
;TT 
wheelThumbSizeVV 
=VV 
newVV  
Vector2VV! (
(VV( )
!WW 
MathfWW 
.WW 
ApproximatelyWW (
(WW( )

wheelThumbWW) 3
.WW3 4

fixedWidthWW4 >
,WW> ?
$numWW@ B
)WWB C
?WWD E

wheelThumbWWF P
.WWP Q

fixedWidthWWQ [
:WW\ ]

wheelThumbWW^ h
.WWh i
paddingWWi p
.WWp q

horizontalWWq {
,WW{ |
!XX 
MathfXX 
.XX 
ApproximatelyXX (
(XX( )

wheelThumbXX) 3
.XX3 4
fixedHeightXX4 ?
,XX? @
$numXXA C
)XXC D
?XXE F

wheelThumbXXG Q
.XXQ R
fixedHeightXXR ]
:XX^ _

wheelThumbXX` j
.XXj k
paddingXXk r
.XXr s
verticalXXs {
)YY 
;YY 
header[[ 
=[[ 
new[[ 
GUIStyle[[ !
([[! "
$str[[" 7
)[[7 8
{\\ 
font]] 
=]] 
(]] 
new]] 
GUIStyle]] $
(]]$ %
$str]]% ,
)]], -
)]]- .
.]]. /
font]]/ 3
,]]3 4
border^^ 
=^^ 
new^^ 

RectOffset^^ '
(^^' (
$num^^( *
,^^* +
$num^^, -
,^^- .
$num^^/ 0
,^^0 1
$num^^2 3
)^^3 4
,^^4 5
fixedHeight__ 
=__ 
$num__  
,__  !
contentOffset`` 
=`` 
new``  #
Vector2``$ +
(``+ ,
$num``, /
,``/ 0
-``1 2
$num``2 4
)``4 5
}aa 
;aa 
headerCheckboxcc 
=cc 
newcc  
GUIStylecc! )
(cc) *
$strcc* =
)cc= >
;cc> ?
headerFoldoutdd 
=dd 
newdd 
GUIStyledd  (
(dd( )
$strdd) 2
)dd2 3
;dd3 4
playIconff 
=ff 
(ff 
	Texture2Dff !
)ff! "
EditorGUIUtilityff" 2
.ff2 3
LoadRequiredff3 ?
(ff? @
$strff@ r
)ffr s
;ffs t
checkerIcongg 
=gg 
(gg 
	Texture2Dgg $
)gg$ %
EditorGUIUtilitygg% 5
.gg5 6
LoadRequiredgg6 B
(ggB C
$strggC [
)gg[ \
;gg\ ]
ifii 
(ii 
EditorGUIUtilityii  
.ii  !
	isProSkinii! *
)ii* +
paneOptionsIconjj 
=jj  !
(jj" #
	Texture2Djj# ,
)jj, -
EditorGUIUtilityjj- =
.jj= >
LoadRequiredjj> J
(jjJ K
$strjjK {
)jj{ |
;jj| }
elsekk 
paneOptionsIconll 
=ll  !
(ll" #
	Texture2Dll# ,
)ll, -
EditorGUIUtilityll- =
.ll= >
LoadRequiredll> J
(llJ K
$strllK |
)ll| }
;ll} ~
}mm 	
}nn 
}oo ¨V
¸D:\Uso\Clase\2_Segundo\Semestre_2\proceso_de_desarrollo_de_videojuegos\sprint3\PDV_sprint3_Agua_de_Madrid\03_27_19_wip_sprint2_pdv\Assets\PostProcessing\Editor\Utils\ReflectionUtils.cs
	namespace 	
UnityEditor
 
. 
PostProcessing $
{ 
public		 

static		 
class		 
ReflectionUtils		 '
{

 
static 

Dictionary 
< 
KeyValuePair &
<& '
object' -
,- .
string/ 5
>5 6
,6 7
	FieldInfo8 A
>A B 
s_FieldInfoFromPathsC W
=X Y
newZ ]

Dictionary^ h
<h i
KeyValuePairi u
<u v
objectv |
,| }
string	~ 
>
 
,
 
	FieldInfo
 
>
 
(
 
)
 
;
 
public 
static 
	FieldInfo  
GetFieldInfoFromPath  4
(4 5
object5 ;
source< B
,B C
stringD J
pathK O
)O P
{ 	
	FieldInfo 
field 
= 
null "
;" #
var 
kvp 
= 
new 
KeyValuePair &
<& '
object' -
,- .
string/ 5
>5 6
(6 7
source7 =
,= >
path? C
)C D
;D E
if 
( 
!  
s_FieldInfoFromPaths %
.% &
TryGetValue& 1
(1 2
kvp2 5
,5 6
out7 :
field; @
)@ A
)A B
{ 
var 
splittedPath  
=! "
path# '
.' (
Split( -
(- .
$char. 1
)1 2
;2 3
var 
type 
= 
source !
.! "
GetType" )
() *
)* +
;+ ,
foreach 
( 
var 
t 
in !
splittedPath" .
). /
{ 
field 
= 
type  
.  !
GetField! )
() *
t* +
,+ ,
BindingFlags- 9
.9 :
	NonPublic: C
|D E
BindingFlagsF R
.R S
PublicS Y
|Z [
BindingFlags\ h
.h i
Instancei q
)q r
;r s
if 
( 
field 
==  
null! %
)% &
break 
; 
type 
= 
field  
.  !
	FieldType! *
;* +
}  
s_FieldInfoFromPaths!! $
.!!$ %
Add!!% (
(!!( )
kvp!!) ,
,!!, -
field!!. 3
)!!3 4
;!!4 5
}"" 
return$$ 
field$$ 
;$$ 
}%% 	
public'' 
static'' 
string'' 
GetFieldPath'' )
<'') *
T''* +
,''+ ,
TValue''- 3
>''3 4
(''4 5

Expression''5 ?
<''? @
Func''@ D
<''D E
T''E F
,''F G
TValue''H N
>''N O
>''O P
expr''Q U
)''U V
{(( 	
MemberExpression)) 
me)) 
;))  
switch** 
(** 
expr** 
.** 
Body** 
.** 
NodeType** &
)**& '
{++ 
case,, 
ExpressionType,, #
.,,# $
Convert,,$ +
:,,+ ,
case-- 
ExpressionType-- #
.--# $
ConvertChecked--$ 2
:--2 3
var.. 
ue.. 
=.. 
expr.. !
...! "
Body.." &
as..' )
UnaryExpression..* 9
;..9 :
me// 
=// 
(// 
ue// 
!=// 
null//  $
?//% &
ue//' )
.//) *
Operand//* 1
://2 3
null//4 8
)//8 9
as//: <
MemberExpression//= M
;//M N
break00 
;00 
default11 
:11 
me22 
=22 
expr22 
.22 
Body22 "
as22# %
MemberExpression22& 6
;226 7
break33 
;33 
}44 
var66 
members66 
=66 
new66 
List66 "
<66" #
string66# )
>66) *
(66* +
)66+ ,
;66, -
while77 
(77 
me77 
!=77 
null77 
)77 
{88 
members99 
.99 
Add99 
(99 
me99 
.99 
Member99 %
.99% &
Name99& *
)99* +
;99+ ,
me:: 
=:: 
me:: 
.:: 

Expression:: "
as::# %
MemberExpression::& 6
;::6 7
};; 
var== 
sb== 
=== 
new== 
StringBuilder== &
(==& '
)==' (
;==( )
for>> 
(>> 
int>> 
i>> 
=>> 
members>>  
.>>  !
Count>>! &
->>' (
$num>>) *
;>>* +
i>>, -
>=>>. 0
$num>>1 2
;>>2 3
i>>4 5
-->>5 7
)>>7 8
{?? 
sb@@ 
.@@ 
Append@@ 
(@@ 
members@@ !
[@@! "
i@@" #
]@@# $
)@@$ %
;@@% &
ifAA 
(AA 
iAA 
>AA 
$numAA 
)AA 
sbAA 
.AA 
AppendAA $
(AA$ %
$charAA% (
)AA( )
;AA) *
}BB 
returnDD 
sbDD 
.DD 
ToStringDD 
(DD 
)DD  
;DD  !
}EE 	
publicGG 
staticGG 
objectGG 
GetFieldValueGG *
(GG* +
objectGG+ 1
sourceGG2 8
,GG8 9
stringGG: @
nameGGA E
)GGE F
{HH 	
varII 
typeII 
=II 
sourceII 
.II 
GetTypeII %
(II% &
)II& '
;II' (
whileKK 
(KK 
typeKK 
!=KK 
nullKK 
)KK  
{LL 
varMM 
fMM 
=MM 
typeMM 
.MM 
GetFieldMM %
(MM% &
nameMM& *
,MM* +
BindingFlagsMM, 8
.MM8 9
	NonPublicMM9 B
|MMC D
BindingFlagsMME Q
.MMQ R
PublicMMR X
|MMY Z
BindingFlagsMM[ g
.MMg h
InstanceMMh p
)MMp q
;MMq r
ifNN 
(NN 
fNN 
!=NN 
nullNN 
)NN 
returnOO 
fOO 
.OO 
GetValueOO %
(OO% &
sourceOO& ,
)OO, -
;OO- .
typeQQ 
=QQ 
typeQQ 
.QQ 
BaseTypeQQ $
;QQ$ %
}RR 
returnTT 
nullTT 
;TT 
}UU 	
publicWW 
staticWW 
objectWW !
GetFieldValueFromPathWW 2
(WW2 3
objectWW3 9
sourceWW: @
,WW@ A
refWWB E
TypeWWF J
baseTypeWWK S
,WWS T
stringWWU [
pathWW\ `
)WW` a
{XX 	
varYY 
splittedPathYY 
=YY 
pathYY #
.YY# $
SplitYY$ )
(YY) *
$charYY* -
)YY- .
;YY. /
objectZZ 
	srcObjectZZ 
=ZZ 
sourceZZ %
;ZZ% &
foreach\\ 
(\\ 
var\\ 
t\\ 
in\\ 
splittedPath\\ *
)\\* +
{]] 
var^^ 
	fieldInfo^^ 
=^^ 
baseType^^  (
.^^( )
GetField^^) 1
(^^1 2
t^^2 3
,^^3 4
BindingFlags^^5 A
.^^A B
	NonPublic^^B K
|^^L M
BindingFlags^^N Z
.^^Z [
Public^^[ a
|^^b c
BindingFlags^^d p
.^^p q
Instance^^q y
)^^y z
;^^z {
if`` 
(`` 
	fieldInfo`` 
==``  
null``! %
)``% &
{aa 
baseTypebb 
=bb 
nullbb #
;bb# $
breakcc 
;cc 
}dd 
baseTypeff 
=ff 
	fieldInfoff $
.ff$ %
	FieldTypeff% .
;ff. /
	srcObjectgg 
=gg 
GetFieldValuegg )
(gg) *
	srcObjectgg* 3
,gg3 4
tgg5 6
)gg6 7
;gg7 8
}hh 
returnjj 
baseTypejj 
==jj 
nulljj #
?kk 
nullkk 
:ll 
	srcObjectll 
;ll 
}mm 	
publicoo 
staticoo 
objectoo 
GetParentObjectoo ,
(oo, -
stringoo- 3
pathoo4 8
,oo8 9
objectoo: @
objooA D
)ooD E
{pp 	
varqq 
fieldsqq 
=qq 
pathqq 
.qq 
Splitqq #
(qq# $
$charqq$ '
)qq' (
;qq( )
ifss 
(ss 
fieldsss 
.ss 
Lengthss 
==ss  
$numss! "
)ss" #
returntt 
objtt 
;tt 
varvv 
infovv 
=vv 
objvv 
.vv 
GetTypevv "
(vv" #
)vv# $
.vv$ %
GetFieldvv% -
(vv- .
fieldsvv. 4
[vv4 5
$numvv5 6
]vv6 7
,vv7 8
BindingFlagsvv9 E
.vvE F
PublicvvF L
|vvM N
BindingFlagsvvO [
.vv[ \
	NonPublicvv\ e
|vvf g
BindingFlagsvvh t
.vvt u
Instancevvu }
)vv} ~
;vv~ 
objww 
=ww 
infoww 
.ww 
GetValueww 
(ww  
objww  #
)ww# $
;ww$ %
returnyy 
GetParentObjectyy "
(yy" #
stringyy# )
.yy) *
Joinyy* .
(yy. /
$stryy/ 2
,yy2 3
fieldsyy4 :
,yy: ;
$numyy< =
,yy= >
fieldsyy? E
.yyE F
LengthyyF L
-yyM N
$numyyO P
)yyP Q
,yyQ R
objyyS V
)yyV W
;yyW X
}zz 	
}{{ 
}|| 